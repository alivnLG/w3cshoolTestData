{"version":3,"sources":["webpack:///./node_modules/markdown-it/lib/common/utils.js","webpack:///./node_modules/markdown-it-emoji/lib/render.js","webpack:///./node_modules/markdown-it/lib/rules_block/heading.js","webpack:///./node_modules/markdown-it/lib/index.js","webpack:///./node_modules/markdown-it/lib/token.js","webpack:///./node_modules/markdown-it/lib/rules_inline/state_inline.js","webpack:///./node_modules/markdown-it-imsize/lib/imsize/types/bmp.js","webpack:///./node_modules/markdown-it-imsize/lib/imsize/types/jpg.js","webpack:///./node_modules/markdown-it/lib/rules_block/lheading.js","webpack:///./node_modules/markdown-it/lib/presets/zero.js","webpack:///./node_modules/markdown-it/lib/rules_inline/text_collapse.js","webpack:///./node_modules/markdown-it/lib/rules_inline/autolink.js","webpack:///./node_modules/markdown-it-imsize/lib/helpers/parse_image_size.js","webpack:///./node_modules/markdown-it/lib/rules_core/block.js","webpack:///./node_modules/markdown-it-emoji/index.js","webpack:///./node_modules/markdown-it-imsize/lib/imsize/readUInt.js","webpack:///./node_modules/markdown-it-emoji/lib/normalize_opts.js","webpack:///./node_modules/markdown-it/lib/rules_inline/newline.js","webpack:///./node_modules/markdown-it/lib/presets/commonmark.js","webpack:///./node_modules/markdown-it/lib/rules_block/paragraph.js","webpack:///./node_modules/markdown-it/lib/ruler.js","webpack:///./node_modules/markdown-it-emoji/lib/replace.js","webpack:///./node_modules/markdown-it/lib/rules_inline/backticks.js","webpack:///./node_modules/markdown-it/lib/rules_block/list.js","webpack:///./node_modules/markdown-it-mark/index.js","webpack:///./node_modules/markdown-it/lib/rules_core/normalize.js","webpack:///./node_modules/markdown-it/lib/parser_inline.js","webpack:///./node_modules/markdown-it-abbr/index.js","webpack:///./node_modules/markdown-it-imsize/lib/imsize/types/psd.js","webpack:///./node_modules/markdown-it-sub/index.js","webpack:///./node_modules/markdown-it/lib/helpers/index.js","webpack:///./node_modules/markdown-it/lib/common/html_re.js","webpack:///./node_modules/markdown-it/lib/rules_inline/entity.js","webpack:///./node_modules/markdown-it/lib/rules_block/html_block.js","webpack:///./node_modules/markdown-it/lib/rules_inline/escape.js","webpack:///./node_modules/markdown-it/lib/rules_core/state_core.js","webpack:///./node_modules/markdown-it/lib/parser_block.js","webpack:///./node_modules/markdown-it-sup/index.js","webpack:///./node_modules/markdown-it/lib/renderer.js","webpack:///./node_modules/markdown-it/lib/helpers/parse_link_title.js","webpack:///./node_modules/markdown-it/lib/rules_block/table.js","webpack:///./node_modules/markdown-it-imsize/lib/index.js","webpack:///./node_modules/markdown-it/lib/rules_block/state_block.js","webpack:///./node_modules/markdown-it/lib/rules_inline/balance_pairs.js","webpack:///./node_modules/markdown-it-imsize/lib/imsize/index.js","webpack:///./node_modules/markdown-it/lib/presets/default.js","webpack:///./node_modules/markdown-it/lib/rules_inline/strikethrough.js","webpack:///./node_modules/markdown-it/lib/rules_inline/image.js","webpack:///./node_modules/markdown-it/lib/rules_core/linkify.js","webpack:///./node_modules/markdown-it/lib/rules_block/code.js","webpack:///./node_modules/markdown-it/lib/rules_core/inline.js","webpack:///./node_modules/markdown-it/lib/parser_core.js","webpack:///./node_modules/markdown-it-emoji/lib/data/shortcuts.js","webpack:///./node_modules/markdown-it-imsize/lib/imsize/types.js","webpack:///./node_modules/markdown-it/lib/rules_core/smartquotes.js","webpack:///./node_modules/markdown-it-imsize/lib/imsize/types/svg.js","webpack:///./node_modules/markdown-it/lib/rules_inline/text.js","webpack:///./node_modules/markdown-it/lib/rules_core/replacements.js","webpack:///./node_modules/markdown-it/lib/common/entities.js","webpack:///./node_modules/markdown-it/lib/rules_block/fence.js","webpack:///./node_modules/markdown-it/lib/rules_inline/html_inline.js","webpack:///./node_modules/markdown-it-imsize/lib/imsize/types/gif.js","webpack:///./node_modules/markdown-it/lib/rules_inline/emphasis.js","webpack:///./node_modules/markdown-it/lib/rules_inline/link.js","webpack:///./node_modules/markdown-it-imsize/lib/imsize/types/webp.js","webpack:///./node_modules/markdown-it/index.js","webpack:///./node_modules/markdown-it/lib/rules_block/reference.js","webpack:///./node_modules/markdown-it/lib/helpers/parse_link_label.js","webpack:///./node_modules/markdown-it/lib/common/html_blocks.js","webpack:///./node_modules/markdown-it/lib/helpers/parse_link_destination.js","webpack:///./node_modules/markdown-it-footnote/index.js","webpack:///./node_modules/markdown-it-imsize/lib/imsize/detector.js","webpack:///./node_modules/markdown-it/lib/rules_block/blockquote.js","webpack:///./node_modules/markdown-it-imsize/lib/imsize/types/png.js","webpack:///./node_modules/markdown-it-imsize/lib/imsize/types/tiff.js","webpack:///./node_modules/markdown-it/lib/rules_block/hr.js","webpack:///./node_modules/markdown-it-deflist/index.js"],"names":["_class","obj","Object","prototype","toString","call","isString","_hasOwnProperty","hasOwnProperty","has","object","key","assign","sources","Array","slice","arguments","forEach","source","TypeError","keys","arrayReplaceAt","src","pos","newElements","concat","isValidEntityCode","c","fromCodePoint","surrogate1","surrogate2","String","fromCharCode","UNESCAPE_MD_RE","ENTITY_RE","UNESCAPE_ALL_RE","RegExp","DIGITAL_ENTITY_TEST_RE","entities","replaceEntityPattern","match","name","code","charCodeAt","test","toLowerCase","parseInt","unescapeMd","str","indexOf","replace","unescapeAll","escaped","entity","HTML_ESCAPE_TEST_RE","HTML_ESCAPE_REPLACE_RE","HTML_REPLACEMENTS","replaceUnsafeChar","ch","escapeHtml","REGEXP_ESCAPE_RE","escapeRE","isSpace","isWhiteSpace","UNICODE_PUNCT_RE","isPunctChar","isMdAsciiPunct","normalizeReference","trim","toUpperCase","exports","lib","mdurl","ucmicro","module","tokens","idx","content","state","startLine","endLine","silent","level","tmp","token","bMarks","tShift","max","eMarks","sCount","blkIndent","skipSpacesBack","skipCharsBack","line","push","markup","map","children","utils","helpers","Renderer","ParserCore","ParserBlock","ParserInline","LinkifyIt","punycode","config","zero","commonmark","BAD_PROTO_RE","GOOD_DATA_RE","validateLink","url","RECODE_HOSTNAME_FOR","normalizeLink","parsed","parse","hostname","protocol","toASCII","er","encode","format","normalizeLinkText","toUnicode","decode","MarkdownIt","presetName","options","this","inline","block","core","renderer","linkify","configure","set","presets","self","Error","components","rules","ruler","enableOnly","rules2","ruler2","enable","list","ignoreInvalid","result","isArray","chain","missed","filter","length","disable","use","plugin","args","apply","env","State","process","render","parseInline","inlineMode","renderInline","Token","type","tag","nesting","attrs","info","meta","hidden","attrIndex","i","len","attrPush","attrData","attrSet","value","attrGet","attrJoin","StateInline","md","outTokens","posMax","pending","pendingLevel","cache","delimiters","pushPending","scanDelims","start","canSplitWord","lastChar","nextChar","count","can_open","can_close","isLastWhiteSpace","isLastPunctChar","isNextWhiteSpace","isNextPunctChar","left_flanking","right_flanking","marker","isBMP","buffer","calculate","readUInt32LE","validJFIFMarkers","red","isJPG","SOIMarker","JFIFMarker","got","expected","console","warn","extractSize","readUInt16BE","validateBuffer","next","terminate","l","oldParentType","nextLine","terminatorRules","getRules","parentType","isEmpty","skipChars","skipSpaces","getLines","html","xhtmlOut","breaks","langPrefix","typographer","quotes","highlight","maxNesting","curr","last","EMAIL_RE","AUTOLINK_RE","tail","linkMatch","emailMatch","fullUrl","parseNextNumber","ok","width","height","resultW","resultH","emojies_defs","emojies_shortcuts","emoji_html","emoji_replace","normalize_opts","defaults","defs","shortcuts","enabled","opts","emoji","scanRE","replaceRE","bits","offset","isBigEndian","endian","method","quoteRE","emojies","reduce","acc","alias","names","sort","reverse","join","pmax","lineMax","Ruler","__rules__","__cache__","__find__","__compile__","chains","rule","alt","altName","fn","at","index","opt","before","beforeName","ruleName","splice","after","afterName","chainName","ucm","ZPCc","Z","P","Cc","splitTextToken","text","last_pos","nodes","emoji_name","j","blockTokens","autolinkLevel","matchStart","matchEnd","skipBulletListMarker","skipOrderedListMarker","markTightParagraphs","contentStart","indent","indentAfterMarker","initial","isOrdered","itemLines","listLines","listTokIdx","markerCharCode","markerValue","oldIndent","oldLIndent","oldTShift","oldTight","posAfterMarker","prevEmptyEnd","isTerminatingParagraph","tight","Number","substr","bsCount","Math","min","tokenize","scanned","jump","end","open","close","postProcess","startDelim","endDelim","loneMarkers","pop","NEWLINES_RE","NULL_RE","_rules","_rules2","skipToken","OTHER_CHARS","UNICODE_SPACE_RE","abbr_def","label","title","labelStart","labelEnd","abbreviations","abbr_replace","reg","m","regText","regSimple","currentToken","x","a","b","split","lastIndex","exec","isPSD","readUInt32BE","UNESCAPE_RE","subscript","found","parseLinkLabel","parseLinkDestination","parseLinkTitle","attr_name","unquoted","single_quoted","double_quoted","attr_value","attribute","open_tag","close_tag","comment","processing","declaration","cdata","HTML_TAG_RE","HTML_OPEN_CLOSE_TAG_RE","DIGITAL_RE","NAMED_RE","block_names","HTML_SEQUENCES","lineText","ESCAPED","StateCore","hasEmptyLines","skipEmptyLines","superscript","default_rules","code_inline","slf","renderAttrs","code_block","fence","highlighted","tmpAttrs","tmpToken","langName","image","renderInlineAsText","renderToken","hardbreak","softbreak","html_block","html_inline","nextToken","needLf","lines","getLine","escapedSplit","escapes","lastPos","backTicked","lastBackTick","substring","columns","columnCount","aligns","t","tableLines","tbodyLines","sizeOf","parseImageSize","image_with_size","ref","res","href","oldPos","references","newState","autofill","dimensions","e","StateBlock","s","indent_found","ddIndent","from","begin","keepLastLF","lineIndent","first","queue","lineStart","lastDelim","currDelim","odd_match","fs","path","detector","handlers","types","MaxBufferSize","lookup","filepath","size","asyncFileToBuffer","callback","err0","descriptor","fstatSync","bufferSize","Buffer","read","err1","err2","syncFileToBuffer","openSync","readSync","closeSync","input","resolve","err","isLinkOpen","isLinkClose","ln","htmlLinkLevel","urlText","links","pretest","schema","tok","Core","angry","blush","broken_heart","confused","cry","frowning","heart","imp","innocent","joy","kissing","laughing","neutral_face","open_mouth","rage","smile","smiley","smiling_imp","sob","stuck_out_tongue","sunglasses","sweat","sweat_smile","unamused","wink","QUOTE_TEST_RE","QUOTE_RE","APOSTROPHE","replaceAt","process_inlines","thisLevel","item","canOpen","canClose","isSingle","stack","openQuote","closeQuote","OUTER","single","blkIdx","svgReg","isSVG","extractorRegExps","getRatio","viewbox","ratio","dim","body","section","root","floor","isTerminatorChar","RARE_RE","SCOPED_ABBR_TEST_RE","SCOPED_ABBR_RE","SCOPED_ABBR","r","p","tm","replaceFn","replace_scoped","inlineTokens","inside_autolink","replace_rare","params","mem","haveEndMarker","isLetter","lc","gifRegexp","isGIF","signature","readUInt16LE","isStrong","parseReference","isWebP","riffHeader","webpHeader","vp8Header","chunkHeader","calculateLossy","calculateLossless","readInt16LE","_endLine","destEndPos","destEndLineNo","disableNested","prevPos","render_footnote_anchor_name","n","id","prefix","docId","render_footnote_caption","subId","render_footnote_ref","footnote_anchor_name","caption","footnote_caption","refid","render_footnote_block_open","render_footnote_block_close","render_footnote_open","render_footnote_close","render_footnote_anchor","footnote_def","oldBMark","oldSCount","posAfterColon","footnotes","refs","footnote_inline","footnoteId","footnote_ref","footnoteSubId","footnote_tail","lastParagraph","current","currentLabel","insideRef","refTokens","footnote_block_open","footnote_block_close","footnote_open","footnote_close","footnote_anchor","typeMap","detect","adjustTab","lastLineEmpty","oldBMarks","oldBSCount","spaceAfterMarker","wasOutdented","oldLineMax","pngSignature","isPNG","readUInt","isTIFF","hex4","readIFD","ifdOffset","fileSize","statSync","endBuffer","ifdBuffer","readValue","low","high","nextTag","extractTags","tags","determineEndianness","cnt","skipMarker","deflist","ddLine","dtLine","oldDDIndent"],"mappings":"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","file":"js/markdown-it.76175e47.js","sourcesContent":["// Utilities\n//\n'use strict';\n\n\nfunction _class(obj) { return Object.prototype.toString.call(obj); }\n\nfunction isString(obj) { return _class(obj) === '[object String]'; }\n\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction has(object, key) {\n  return _hasOwnProperty.call(object, key);\n}\n\n// Merge objects\n//\nfunction assign(obj /*from1, from2, from3, ...*/) {\n  var sources = Array.prototype.slice.call(arguments, 1);\n\n  sources.forEach(function (source) {\n    if (!source) { return; }\n\n    if (typeof source !== 'object') {\n      throw new TypeError(source + 'must be object');\n    }\n\n    Object.keys(source).forEach(function (key) {\n      obj[key] = source[key];\n    });\n  });\n\n  return obj;\n}\n\n// Remove element from array and put another array at those position.\n// Useful for some operations with tokens\nfunction arrayReplaceAt(src, pos, newElements) {\n  return [].concat(src.slice(0, pos), newElements, src.slice(pos + 1));\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nfunction isValidEntityCode(c) {\n  /*eslint no-bitwise:0*/\n  // broken sequence\n  if (c >= 0xD800 && c <= 0xDFFF) { return false; }\n  // never used\n  if (c >= 0xFDD0 && c <= 0xFDEF) { return false; }\n  if ((c & 0xFFFF) === 0xFFFF || (c & 0xFFFF) === 0xFFFE) { return false; }\n  // control codes\n  if (c >= 0x00 && c <= 0x08) { return false; }\n  if (c === 0x0B) { return false; }\n  if (c >= 0x0E && c <= 0x1F) { return false; }\n  if (c >= 0x7F && c <= 0x9F) { return false; }\n  // out of range\n  if (c > 0x10FFFF) { return false; }\n  return true;\n}\n\nfunction fromCodePoint(c) {\n  /*eslint no-bitwise:0*/\n  if (c > 0xffff) {\n    c -= 0x10000;\n    var surrogate1 = 0xd800 + (c >> 10),\n        surrogate2 = 0xdc00 + (c & 0x3ff);\n\n    return String.fromCharCode(surrogate1, surrogate2);\n  }\n  return String.fromCharCode(c);\n}\n\n\nvar UNESCAPE_MD_RE  = /\\\\([!\"#$%&'()*+,\\-.\\/:;<=>?@[\\\\\\]^_`{|}~])/g;\nvar ENTITY_RE       = /&([a-z#][a-z0-9]{1,31});/gi;\nvar UNESCAPE_ALL_RE = new RegExp(UNESCAPE_MD_RE.source + '|' + ENTITY_RE.source, 'gi');\n\nvar DIGITAL_ENTITY_TEST_RE = /^#((?:x[a-f0-9]{1,8}|[0-9]{1,8}))/i;\n\nvar entities = require('./entities');\n\nfunction replaceEntityPattern(match, name) {\n  var code = 0;\n\n  if (has(entities, name)) {\n    return entities[name];\n  }\n\n  if (name.charCodeAt(0) === 0x23/* # */ && DIGITAL_ENTITY_TEST_RE.test(name)) {\n    code = name[1].toLowerCase() === 'x' ?\n      parseInt(name.slice(2), 16)\n    :\n      parseInt(name.slice(1), 10);\n    if (isValidEntityCode(code)) {\n      return fromCodePoint(code);\n    }\n  }\n\n  return match;\n}\n\n/*function replaceEntities(str) {\n  if (str.indexOf('&') < 0) { return str; }\n\n  return str.replace(ENTITY_RE, replaceEntityPattern);\n}*/\n\nfunction unescapeMd(str) {\n  if (str.indexOf('\\\\') < 0) { return str; }\n  return str.replace(UNESCAPE_MD_RE, '$1');\n}\n\nfunction unescapeAll(str) {\n  if (str.indexOf('\\\\') < 0 && str.indexOf('&') < 0) { return str; }\n\n  return str.replace(UNESCAPE_ALL_RE, function (match, escaped, entity) {\n    if (escaped) { return escaped; }\n    return replaceEntityPattern(match, entity);\n  });\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar HTML_ESCAPE_TEST_RE = /[&<>\"]/;\nvar HTML_ESCAPE_REPLACE_RE = /[&<>\"]/g;\nvar HTML_REPLACEMENTS = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;'\n};\n\nfunction replaceUnsafeChar(ch) {\n  return HTML_REPLACEMENTS[ch];\n}\n\nfunction escapeHtml(str) {\n  if (HTML_ESCAPE_TEST_RE.test(str)) {\n    return str.replace(HTML_ESCAPE_REPLACE_RE, replaceUnsafeChar);\n  }\n  return str;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar REGEXP_ESCAPE_RE = /[.?*+^$[\\]\\\\(){}|-]/g;\n\nfunction escapeRE(str) {\n  return str.replace(REGEXP_ESCAPE_RE, '\\\\$&');\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nfunction isSpace(code) {\n  switch (code) {\n    case 0x09:\n    case 0x20:\n      return true;\n  }\n  return false;\n}\n\n// Zs (unicode class) || [\\t\\f\\v\\r\\n]\nfunction isWhiteSpace(code) {\n  if (code >= 0x2000 && code <= 0x200A) { return true; }\n  switch (code) {\n    case 0x09: // \\t\n    case 0x0A: // \\n\n    case 0x0B: // \\v\n    case 0x0C: // \\f\n    case 0x0D: // \\r\n    case 0x20:\n    case 0xA0:\n    case 0x1680:\n    case 0x202F:\n    case 0x205F:\n    case 0x3000:\n      return true;\n  }\n  return false;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n/*eslint-disable max-len*/\nvar UNICODE_PUNCT_RE = require('uc.micro/categories/P/regex');\n\n// Currently without astral characters support.\nfunction isPunctChar(ch) {\n  return UNICODE_PUNCT_RE.test(ch);\n}\n\n\n// Markdown ASCII punctuation characters.\n//\n// !, \", #, $, %, &, ', (, ), *, +, ,, -, ., /, :, ;, <, =, >, ?, @, [, \\, ], ^, _, `, {, |, }, or ~\n// http://spec.commonmark.org/0.15/#ascii-punctuation-character\n//\n// Don't confuse with unicode punctuation !!! It lacks some chars in ascii range.\n//\nfunction isMdAsciiPunct(ch) {\n  switch (ch) {\n    case 0x21/* ! */:\n    case 0x22/* \" */:\n    case 0x23/* # */:\n    case 0x24/* $ */:\n    case 0x25/* % */:\n    case 0x26/* & */:\n    case 0x27/* ' */:\n    case 0x28/* ( */:\n    case 0x29/* ) */:\n    case 0x2A/* * */:\n    case 0x2B/* + */:\n    case 0x2C/* , */:\n    case 0x2D/* - */:\n    case 0x2E/* . */:\n    case 0x2F/* / */:\n    case 0x3A/* : */:\n    case 0x3B/* ; */:\n    case 0x3C/* < */:\n    case 0x3D/* = */:\n    case 0x3E/* > */:\n    case 0x3F/* ? */:\n    case 0x40/* @ */:\n    case 0x5B/* [ */:\n    case 0x5C/* \\ */:\n    case 0x5D/* ] */:\n    case 0x5E/* ^ */:\n    case 0x5F/* _ */:\n    case 0x60/* ` */:\n    case 0x7B/* { */:\n    case 0x7C/* | */:\n    case 0x7D/* } */:\n    case 0x7E/* ~ */:\n      return true;\n    default:\n      return false;\n  }\n}\n\n// Hepler to unify [reference labels].\n//\nfunction normalizeReference(str) {\n  // use .toUpperCase() instead of .toLowerCase()\n  // here to avoid a conflict with Object.prototype\n  // members (most notably, `__proto__`)\n  return str.trim().replace(/\\s+/g, ' ').toUpperCase();\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n// Re-export libraries commonly used in both markdown-it and its plugins,\n// so plugins won't have to depend on them explicitly, which reduces their\n// bundled size (e.g. a browser build).\n//\nexports.lib                 = {};\nexports.lib.mdurl           = require('mdurl');\nexports.lib.ucmicro         = require('uc.micro');\n\nexports.assign              = assign;\nexports.isString            = isString;\nexports.has                 = has;\nexports.unescapeMd          = unescapeMd;\nexports.unescapeAll         = unescapeAll;\nexports.isValidEntityCode   = isValidEntityCode;\nexports.fromCodePoint       = fromCodePoint;\n// exports.replaceEntities     = replaceEntities;\nexports.escapeHtml          = escapeHtml;\nexports.arrayReplaceAt      = arrayReplaceAt;\nexports.isSpace             = isSpace;\nexports.isWhiteSpace        = isWhiteSpace;\nexports.isMdAsciiPunct      = isMdAsciiPunct;\nexports.isPunctChar         = isPunctChar;\nexports.escapeRE            = escapeRE;\nexports.normalizeReference  = normalizeReference;\n","'use strict';\n\nmodule.exports = function emoji_html(tokens, idx /*, options, env */) {\n  return tokens[idx].content;\n};\n","// heading (#, ##, ...)\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function heading(state, startLine, endLine, silent) {\n  var ch, level, tmp, token,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  ch  = state.src.charCodeAt(pos);\n\n  if (ch !== 0x23/* # */ || pos >= max) { return false; }\n\n  // count heading level\n  level = 1;\n  ch = state.src.charCodeAt(++pos);\n  while (ch === 0x23/* # */ && pos < max && level <= 6) {\n    level++;\n    ch = state.src.charCodeAt(++pos);\n  }\n\n  if (level > 6 || (pos < max && !isSpace(ch))) { return false; }\n\n  if (silent) { return true; }\n\n  // Let's cut tails like '    ###  ' from the end of string\n\n  max = state.skipSpacesBack(max, pos);\n  tmp = state.skipCharsBack(max, 0x23, pos); // #\n  if (tmp > pos && isSpace(state.src.charCodeAt(tmp - 1))) {\n    max = tmp;\n  }\n\n  state.line = startLine + 1;\n\n  token        = state.push('heading_open', 'h' + String(level), 1);\n  token.markup = '########'.slice(0, level);\n  token.map    = [ startLine, state.line ];\n\n  token          = state.push('inline', '', 0);\n  token.content  = state.src.slice(pos, max).trim();\n  token.map      = [ startLine, state.line ];\n  token.children = [];\n\n  token        = state.push('heading_close', 'h' + String(level), -1);\n  token.markup = '########'.slice(0, level);\n\n  return true;\n};\n","// Main parser class\n\n'use strict';\n\n\nvar utils        = require('./common/utils');\nvar helpers      = require('./helpers');\nvar Renderer     = require('./renderer');\nvar ParserCore   = require('./parser_core');\nvar ParserBlock  = require('./parser_block');\nvar ParserInline = require('./parser_inline');\nvar LinkifyIt    = require('linkify-it');\nvar mdurl        = require('mdurl');\nvar punycode     = require('punycode');\n\n\nvar config = {\n  'default': require('./presets/default'),\n  zero: require('./presets/zero'),\n  commonmark: require('./presets/commonmark')\n};\n\n////////////////////////////////////////////////////////////////////////////////\n//\n// This validator can prohibit more than really needed to prevent XSS. It's a\n// tradeoff to keep code simple and to be secure by default.\n//\n// If you need different setup - override validator method as you wish. Or\n// replace it with dummy function and use external sanitizer.\n//\n\nvar BAD_PROTO_RE = /^(vbscript|javascript|file|data):/;\nvar GOOD_DATA_RE = /^data:image\\/(gif|png|jpeg|webp);/;\n\nfunction validateLink(url) {\n  // url should be normalized at this point, and existing entities are decoded\n  var str = url.trim().toLowerCase();\n\n  return BAD_PROTO_RE.test(str) ? (GOOD_DATA_RE.test(str) ? true : false) : true;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n\nvar RECODE_HOSTNAME_FOR = [ 'http:', 'https:', 'mailto:' ];\n\nfunction normalizeLink(url) {\n  var parsed = mdurl.parse(url, true);\n\n  if (parsed.hostname) {\n    // Encode hostnames in urls like:\n    // `http://host/`, `https://host/`, `mailto:user@host`, `//host/`\n    //\n    // We don't encode unknown schemas, because it's likely that we encode\n    // something we shouldn't (e.g. `skype:name` treated as `skype:host`)\n    //\n    if (!parsed.protocol || RECODE_HOSTNAME_FOR.indexOf(parsed.protocol) >= 0) {\n      try {\n        parsed.hostname = punycode.toASCII(parsed.hostname);\n      } catch (er) { /**/ }\n    }\n  }\n\n  return mdurl.encode(mdurl.format(parsed));\n}\n\nfunction normalizeLinkText(url) {\n  var parsed = mdurl.parse(url, true);\n\n  if (parsed.hostname) {\n    // Encode hostnames in urls like:\n    // `http://host/`, `https://host/`, `mailto:user@host`, `//host/`\n    //\n    // We don't encode unknown schemas, because it's likely that we encode\n    // something we shouldn't (e.g. `skype:name` treated as `skype:host`)\n    //\n    if (!parsed.protocol || RECODE_HOSTNAME_FOR.indexOf(parsed.protocol) >= 0) {\n      try {\n        parsed.hostname = punycode.toUnicode(parsed.hostname);\n      } catch (er) { /**/ }\n    }\n  }\n\n  return mdurl.decode(mdurl.format(parsed));\n}\n\n\n/**\n * class MarkdownIt\n *\n * Main parser/renderer class.\n *\n * ##### Usage\n *\n * ```javascript\n * // node.js, \"classic\" way:\n * var MarkdownIt = require('markdown-it'),\n *     md = new MarkdownIt();\n * var result = md.render('# markdown-it rulezz!');\n *\n * // node.js, the same, but with sugar:\n * var md = require('markdown-it')();\n * var result = md.render('# markdown-it rulezz!');\n *\n * // browser without AMD, added to \"window\" on script load\n * // Note, there are no dash.\n * var md = window.markdownit();\n * var result = md.render('# markdown-it rulezz!');\n * ```\n *\n * Single line rendering, without paragraph wrap:\n *\n * ```javascript\n * var md = require('markdown-it')();\n * var result = md.renderInline('__markdown-it__ rulezz!');\n * ```\n **/\n\n/**\n * new MarkdownIt([presetName, options])\n * - presetName (String): optional, `commonmark` / `zero`\n * - options (Object)\n *\n * Creates parser instanse with given config. Can be called without `new`.\n *\n * ##### presetName\n *\n * MarkdownIt provides named presets as a convenience to quickly\n * enable/disable active syntax rules and options for common use cases.\n *\n * - [\"commonmark\"](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/commonmark.js) -\n *   configures parser to strict [CommonMark](http://commonmark.org/) mode.\n * - [default](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/default.js) -\n *   similar to GFM, used when no preset name given. Enables all available rules,\n *   but still without html, typographer & autolinker.\n * - [\"zero\"](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/zero.js) -\n *   all rules disabled. Useful to quickly setup your config via `.enable()`.\n *   For example, when you need only `bold` and `italic` markup and nothing else.\n *\n * ##### options:\n *\n * - __html__ - `false`. Set `true` to enable HTML tags in source. Be careful!\n *   That's not safe! You may need external sanitizer to protect output from XSS.\n *   It's better to extend features via plugins, instead of enabling HTML.\n * - __xhtmlOut__ - `false`. Set `true` to add '/' when closing single tags\n *   (`<br />`). This is needed only for full CommonMark compatibility. In real\n *   world you will need HTML output.\n * - __breaks__ - `false`. Set `true` to convert `\\n` in paragraphs into `<br>`.\n * - __langPrefix__ - `language-`. CSS language class prefix for fenced blocks.\n *   Can be useful for external highlighters.\n * - __linkify__ - `false`. Set `true` to autoconvert URL-like text to links.\n * - __typographer__  - `false`. Set `true` to enable [some language-neutral\n *   replacement](https://github.com/markdown-it/markdown-it/blob/master/lib/rules_core/replacements.js) +\n *   quotes beautification (smartquotes).\n * - __quotes__ - `“”‘’`, String or Array. Double + single quotes replacement\n *   pairs, when typographer enabled and smartquotes on. For example, you can\n *   use `'«»„“'` for Russian, `'„“‚‘'` for German, and\n *   `['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›']` for French (including nbsp).\n * - __highlight__ - `null`. Highlighter function for fenced code blocks.\n *   Highlighter `function (str, lang)` should return escaped HTML. It can also\n *   return empty string if the source was not changed and should be escaped\n *   externaly. If result starts with <pre... internal wrapper is skipped.\n *\n * ##### Example\n *\n * ```javascript\n * // commonmark mode\n * var md = require('markdown-it')('commonmark');\n *\n * // default mode\n * var md = require('markdown-it')();\n *\n * // enable everything\n * var md = require('markdown-it')({\n *   html: true,\n *   linkify: true,\n *   typographer: true\n * });\n * ```\n *\n * ##### Syntax highlighting\n *\n * ```js\n * var hljs = require('highlight.js') // https://highlightjs.org/\n *\n * var md = require('markdown-it')({\n *   highlight: function (str, lang) {\n *     if (lang && hljs.getLanguage(lang)) {\n *       try {\n *         return hljs.highlight(lang, str, true).value;\n *       } catch (__) {}\n *     }\n *\n *     return ''; // use external default escaping\n *   }\n * });\n * ```\n *\n * Or with full wrapper override (if you need assign class to `<pre>`):\n *\n * ```javascript\n * var hljs = require('highlight.js') // https://highlightjs.org/\n *\n * // Actual default values\n * var md = require('markdown-it')({\n *   highlight: function (str, lang) {\n *     if (lang && hljs.getLanguage(lang)) {\n *       try {\n *         return '<pre class=\"hljs\"><code>' +\n *                hljs.highlight(lang, str, true).value +\n *                '</code></pre>';\n *       } catch (__) {}\n *     }\n *\n *     return '<pre class=\"hljs\"><code>' + md.utils.escapeHtml(str) + '</code></pre>';\n *   }\n * });\n * ```\n *\n **/\nfunction MarkdownIt(presetName, options) {\n  if (!(this instanceof MarkdownIt)) {\n    return new MarkdownIt(presetName, options);\n  }\n\n  if (!options) {\n    if (!utils.isString(presetName)) {\n      options = presetName || {};\n      presetName = 'default';\n    }\n  }\n\n  /**\n   * MarkdownIt#inline -> ParserInline\n   *\n   * Instance of [[ParserInline]]. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.inline = new ParserInline();\n\n  /**\n   * MarkdownIt#block -> ParserBlock\n   *\n   * Instance of [[ParserBlock]]. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.block = new ParserBlock();\n\n  /**\n   * MarkdownIt#core -> Core\n   *\n   * Instance of [[Core]] chain executor. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.core = new ParserCore();\n\n  /**\n   * MarkdownIt#renderer -> Renderer\n   *\n   * Instance of [[Renderer]]. Use it to modify output look. Or to add rendering\n   * rules for new token types, generated by plugins.\n   *\n   * ##### Example\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   *\n   * function myToken(tokens, idx, options, env, self) {\n   *   //...\n   *   return result;\n   * };\n   *\n   * md.renderer.rules['my_token'] = myToken\n   * ```\n   *\n   * See [[Renderer]] docs and [source code](https://github.com/markdown-it/markdown-it/blob/master/lib/renderer.js).\n   **/\n  this.renderer = new Renderer();\n\n  /**\n   * MarkdownIt#linkify -> LinkifyIt\n   *\n   * [linkify-it](https://github.com/markdown-it/linkify-it) instance.\n   * Used by [linkify](https://github.com/markdown-it/markdown-it/blob/master/lib/rules_core/linkify.js)\n   * rule.\n   **/\n  this.linkify = new LinkifyIt();\n\n  /**\n   * MarkdownIt#validateLink(url) -> Boolean\n   *\n   * Link validation function. CommonMark allows too much in links. By default\n   * we disable `javascript:`, `vbscript:`, `file:` schemas, and almost all `data:...` schemas\n   * except some embedded image types.\n   *\n   * You can change this behaviour:\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   * // enable everything\n   * md.validateLink = function () { return true; }\n   * ```\n   **/\n  this.validateLink = validateLink;\n\n  /**\n   * MarkdownIt#normalizeLink(url) -> String\n   *\n   * Function used to encode link url to a machine-readable format,\n   * which includes url-encoding, punycode, etc.\n   **/\n  this.normalizeLink = normalizeLink;\n\n  /**\n   * MarkdownIt#normalizeLinkText(url) -> String\n   *\n   * Function used to decode link url to a human-readable format`\n   **/\n  this.normalizeLinkText = normalizeLinkText;\n\n\n  // Expose utils & helpers for easy acces from plugins\n\n  /**\n   * MarkdownIt#utils -> utils\n   *\n   * Assorted utility functions, useful to write plugins. See details\n   * [here](https://github.com/markdown-it/markdown-it/blob/master/lib/common/utils.js).\n   **/\n  this.utils = utils;\n\n  /**\n   * MarkdownIt#helpers -> helpers\n   *\n   * Link components parser functions, useful to write plugins. See details\n   * [here](https://github.com/markdown-it/markdown-it/blob/master/lib/helpers).\n   **/\n  this.helpers = utils.assign({}, helpers);\n\n\n  this.options = {};\n  this.configure(presetName);\n\n  if (options) { this.set(options); }\n}\n\n\n/** chainable\n * MarkdownIt.set(options)\n *\n * Set parser options (in the same format as in constructor). Probably, you\n * will never need it, but you can change options after constructor call.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')()\n *             .set({ html: true, breaks: true })\n *             .set({ typographer, true });\n * ```\n *\n * __Note:__ To achieve the best possible performance, don't modify a\n * `markdown-it` instance options on the fly. If you need multiple configurations\n * it's best to create multiple instances and initialize each with separate\n * config.\n **/\nMarkdownIt.prototype.set = function (options) {\n  utils.assign(this.options, options);\n  return this;\n};\n\n\n/** chainable, internal\n * MarkdownIt.configure(presets)\n *\n * Batch load of all options and compenent settings. This is internal method,\n * and you probably will not need it. But if you with - see available presets\n * and data structure [here](https://github.com/markdown-it/markdown-it/tree/master/lib/presets)\n *\n * We strongly recommend to use presets instead of direct config loads. That\n * will give better compatibility with next versions.\n **/\nMarkdownIt.prototype.configure = function (presets) {\n  var self = this, presetName;\n\n  if (utils.isString(presets)) {\n    presetName = presets;\n    presets = config[presetName];\n    if (!presets) { throw new Error('Wrong `markdown-it` preset \"' + presetName + '\", check name'); }\n  }\n\n  if (!presets) { throw new Error('Wrong `markdown-it` preset, can\\'t be empty'); }\n\n  if (presets.options) { self.set(presets.options); }\n\n  if (presets.components) {\n    Object.keys(presets.components).forEach(function (name) {\n      if (presets.components[name].rules) {\n        self[name].ruler.enableOnly(presets.components[name].rules);\n      }\n      if (presets.components[name].rules2) {\n        self[name].ruler2.enableOnly(presets.components[name].rules2);\n      }\n    });\n  }\n  return this;\n};\n\n\n/** chainable\n * MarkdownIt.enable(list, ignoreInvalid)\n * - list (String|Array): rule name or list of rule names to enable\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable list or rules. It will automatically find appropriate components,\n * containing rules with given names. If rule not found, and `ignoreInvalid`\n * not set - throws exception.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')()\n *             .enable(['sub', 'sup'])\n *             .disable('smartquotes');\n * ```\n **/\nMarkdownIt.prototype.enable = function (list, ignoreInvalid) {\n  var result = [];\n\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  [ 'core', 'block', 'inline' ].forEach(function (chain) {\n    result = result.concat(this[chain].ruler.enable(list, true));\n  }, this);\n\n  result = result.concat(this.inline.ruler2.enable(list, true));\n\n  var missed = list.filter(function (name) { return result.indexOf(name) < 0; });\n\n  if (missed.length && !ignoreInvalid) {\n    throw new Error('MarkdownIt. Failed to enable unknown rule(s): ' + missed);\n  }\n\n  return this;\n};\n\n\n/** chainable\n * MarkdownIt.disable(list, ignoreInvalid)\n * - list (String|Array): rule name or list of rule names to disable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * The same as [[MarkdownIt.enable]], but turn specified rules off.\n **/\nMarkdownIt.prototype.disable = function (list, ignoreInvalid) {\n  var result = [];\n\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  [ 'core', 'block', 'inline' ].forEach(function (chain) {\n    result = result.concat(this[chain].ruler.disable(list, true));\n  }, this);\n\n  result = result.concat(this.inline.ruler2.disable(list, true));\n\n  var missed = list.filter(function (name) { return result.indexOf(name) < 0; });\n\n  if (missed.length && !ignoreInvalid) {\n    throw new Error('MarkdownIt. Failed to disable unknown rule(s): ' + missed);\n  }\n  return this;\n};\n\n\n/** chainable\n * MarkdownIt.use(plugin, params)\n *\n * Load specified plugin with given params into current parser instance.\n * It's just a sugar to call `plugin(md, params)` with curring.\n *\n * ##### Example\n *\n * ```javascript\n * var iterator = require('markdown-it-for-inline');\n * var md = require('markdown-it')()\n *             .use(iterator, 'foo_replace', 'text', function (tokens, idx) {\n *               tokens[idx].content = tokens[idx].content.replace(/foo/g, 'bar');\n *             });\n * ```\n **/\nMarkdownIt.prototype.use = function (plugin /*, params, ... */) {\n  var args = [ this ].concat(Array.prototype.slice.call(arguments, 1));\n  plugin.apply(plugin, args);\n  return this;\n};\n\n\n/** internal\n * MarkdownIt.parse(src, env) -> Array\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Parse input string and returns list of block tokens (special token type\n * \"inline\" will contain list of inline tokens). You should not call this\n * method directly, until you write custom renderer (for example, to produce\n * AST).\n *\n * `env` is used to pass data between \"distributed\" rules and return additional\n * metadata like reference info, needed for the renderer. It also can be used to\n * inject data in specific cases. Usually, you will be ok to pass `{}`,\n * and then pass updated object to renderer.\n **/\nMarkdownIt.prototype.parse = function (src, env) {\n  if (typeof src !== 'string') {\n    throw new Error('Input data should be a String');\n  }\n\n  var state = new this.core.State(src, this, env);\n\n  this.core.process(state);\n\n  return state.tokens;\n};\n\n\n/**\n * MarkdownIt.render(src [, env]) -> String\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Render markdown string into html. It does all magic for you :).\n *\n * `env` can be used to inject additional metadata (`{}` by default).\n * But you will not need it with high probability. See also comment\n * in [[MarkdownIt.parse]].\n **/\nMarkdownIt.prototype.render = function (src, env) {\n  env = env || {};\n\n  return this.renderer.render(this.parse(src, env), this.options, env);\n};\n\n\n/** internal\n * MarkdownIt.parseInline(src, env) -> Array\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * The same as [[MarkdownIt.parse]] but skip all block rules. It returns the\n * block tokens list with the single `inline` element, containing parsed inline\n * tokens in `children` property. Also updates `env` object.\n **/\nMarkdownIt.prototype.parseInline = function (src, env) {\n  var state = new this.core.State(src, this, env);\n\n  state.inlineMode = true;\n  this.core.process(state);\n\n  return state.tokens;\n};\n\n\n/**\n * MarkdownIt.renderInline(src [, env]) -> String\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Similar to [[MarkdownIt.render]] but for single paragraph content. Result\n * will NOT be wrapped into `<p>` tags.\n **/\nMarkdownIt.prototype.renderInline = function (src, env) {\n  env = env || {};\n\n  return this.renderer.render(this.parseInline(src, env), this.options, env);\n};\n\n\nmodule.exports = MarkdownIt;\n","// Token class\n\n'use strict';\n\n\n/**\n * class Token\n **/\n\n/**\n * new Token(type, tag, nesting)\n *\n * Create new token and fill passed properties.\n **/\nfunction Token(type, tag, nesting) {\n  /**\n   * Token#type -> String\n   *\n   * Type of the token (string, e.g. \"paragraph_open\")\n   **/\n  this.type     = type;\n\n  /**\n   * Token#tag -> String\n   *\n   * html tag name, e.g. \"p\"\n   **/\n  this.tag      = tag;\n\n  /**\n   * Token#attrs -> Array\n   *\n   * Html attributes. Format: `[ [ name1, value1 ], [ name2, value2 ] ]`\n   **/\n  this.attrs    = null;\n\n  /**\n   * Token#map -> Array\n   *\n   * Source map info. Format: `[ line_begin, line_end ]`\n   **/\n  this.map      = null;\n\n  /**\n   * Token#nesting -> Number\n   *\n   * Level change (number in {-1, 0, 1} set), where:\n   *\n   * -  `1` means the tag is opening\n   * -  `0` means the tag is self-closing\n   * - `-1` means the tag is closing\n   **/\n  this.nesting  = nesting;\n\n  /**\n   * Token#level -> Number\n   *\n   * nesting level, the same as `state.level`\n   **/\n  this.level    = 0;\n\n  /**\n   * Token#children -> Array\n   *\n   * An array of child nodes (inline and img tokens)\n   **/\n  this.children = null;\n\n  /**\n   * Token#content -> String\n   *\n   * In a case of self-closing tag (code, html, fence, etc.),\n   * it has contents of this tag.\n   **/\n  this.content  = '';\n\n  /**\n   * Token#markup -> String\n   *\n   * '*' or '_' for emphasis, fence string for fence, etc.\n   **/\n  this.markup   = '';\n\n  /**\n   * Token#info -> String\n   *\n   * fence infostring\n   **/\n  this.info     = '';\n\n  /**\n   * Token#meta -> Object\n   *\n   * A place for plugins to store an arbitrary data\n   **/\n  this.meta     = null;\n\n  /**\n   * Token#block -> Boolean\n   *\n   * True for block-level tokens, false for inline tokens.\n   * Used in renderer to calculate line breaks\n   **/\n  this.block    = false;\n\n  /**\n   * Token#hidden -> Boolean\n   *\n   * If it's true, ignore this element when rendering. Used for tight lists\n   * to hide paragraphs.\n   **/\n  this.hidden   = false;\n}\n\n\n/**\n * Token.attrIndex(name) -> Number\n *\n * Search attribute index by name.\n **/\nToken.prototype.attrIndex = function attrIndex(name) {\n  var attrs, i, len;\n\n  if (!this.attrs) { return -1; }\n\n  attrs = this.attrs;\n\n  for (i = 0, len = attrs.length; i < len; i++) {\n    if (attrs[i][0] === name) { return i; }\n  }\n  return -1;\n};\n\n\n/**\n * Token.attrPush(attrData)\n *\n * Add `[ name, value ]` attribute to list. Init attrs if necessary\n **/\nToken.prototype.attrPush = function attrPush(attrData) {\n  if (this.attrs) {\n    this.attrs.push(attrData);\n  } else {\n    this.attrs = [ attrData ];\n  }\n};\n\n\n/**\n * Token.attrSet(name, value)\n *\n * Set `name` attribute to `value`. Override old value if exists.\n **/\nToken.prototype.attrSet = function attrSet(name, value) {\n  var idx = this.attrIndex(name),\n      attrData = [ name, value ];\n\n  if (idx < 0) {\n    this.attrPush(attrData);\n  } else {\n    this.attrs[idx] = attrData;\n  }\n};\n\n\n/**\n * Token.attrGet(name)\n *\n * Get the value of attribute `name`, or null if it does not exist.\n **/\nToken.prototype.attrGet = function attrGet(name) {\n  var idx = this.attrIndex(name), value = null;\n  if (idx >= 0) {\n    value = this.attrs[idx][1];\n  }\n  return value;\n};\n\n\n/**\n * Token.attrJoin(name, value)\n *\n * Join value to existing attribute via space. Or create new attribute if not\n * exists. Useful to operate with token classes.\n **/\nToken.prototype.attrJoin = function attrJoin(name, value) {\n  var idx = this.attrIndex(name);\n\n  if (idx < 0) {\n    this.attrPush([ name, value ]);\n  } else {\n    this.attrs[idx][1] = this.attrs[idx][1] + ' ' + value;\n  }\n};\n\n\nmodule.exports = Token;\n","// Inline parser state\n\n'use strict';\n\n\nvar Token          = require('../token');\nvar isWhiteSpace   = require('../common/utils').isWhiteSpace;\nvar isPunctChar    = require('../common/utils').isPunctChar;\nvar isMdAsciiPunct = require('../common/utils').isMdAsciiPunct;\n\n\nfunction StateInline(src, md, env, outTokens) {\n  this.src = src;\n  this.env = env;\n  this.md = md;\n  this.tokens = outTokens;\n\n  this.pos = 0;\n  this.posMax = this.src.length;\n  this.level = 0;\n  this.pending = '';\n  this.pendingLevel = 0;\n\n  this.cache = {};        // Stores { start: end } pairs. Useful for backtrack\n                          // optimization of pairs parse (emphasis, strikes).\n\n  this.delimiters = [];   // Emphasis-like delimiters\n}\n\n\n// Flush pending text\n//\nStateInline.prototype.pushPending = function () {\n  var token = new Token('text', '', 0);\n  token.content = this.pending;\n  token.level = this.pendingLevel;\n  this.tokens.push(token);\n  this.pending = '';\n  return token;\n};\n\n\n// Push new token to \"stream\".\n// If pending text exists - flush it as text token\n//\nStateInline.prototype.push = function (type, tag, nesting) {\n  if (this.pending) {\n    this.pushPending();\n  }\n\n  var token = new Token(type, tag, nesting);\n\n  if (nesting < 0) { this.level--; }\n  token.level = this.level;\n  if (nesting > 0) { this.level++; }\n\n  this.pendingLevel = this.level;\n  this.tokens.push(token);\n  return token;\n};\n\n\n// Scan a sequence of emphasis-like markers, and determine whether\n// it can start an emphasis sequence or end an emphasis sequence.\n//\n//  - start - position to scan from (it should point at a valid marker);\n//  - canSplitWord - determine if these markers can be found inside a word\n//\nStateInline.prototype.scanDelims = function (start, canSplitWord) {\n  var pos = start, lastChar, nextChar, count, can_open, can_close,\n      isLastWhiteSpace, isLastPunctChar,\n      isNextWhiteSpace, isNextPunctChar,\n      left_flanking = true,\n      right_flanking = true,\n      max = this.posMax,\n      marker = this.src.charCodeAt(start);\n\n  // treat beginning of the line as a whitespace\n  lastChar = start > 0 ? this.src.charCodeAt(start - 1) : 0x20;\n\n  while (pos < max && this.src.charCodeAt(pos) === marker) { pos++; }\n\n  count = pos - start;\n\n  // treat end of the line as a whitespace\n  nextChar = pos < max ? this.src.charCodeAt(pos) : 0x20;\n\n  isLastPunctChar = isMdAsciiPunct(lastChar) || isPunctChar(String.fromCharCode(lastChar));\n  isNextPunctChar = isMdAsciiPunct(nextChar) || isPunctChar(String.fromCharCode(nextChar));\n\n  isLastWhiteSpace = isWhiteSpace(lastChar);\n  isNextWhiteSpace = isWhiteSpace(nextChar);\n\n  if (isNextWhiteSpace) {\n    left_flanking = false;\n  } else if (isNextPunctChar) {\n    if (!(isLastWhiteSpace || isLastPunctChar)) {\n      left_flanking = false;\n    }\n  }\n\n  if (isLastWhiteSpace) {\n    right_flanking = false;\n  } else if (isLastPunctChar) {\n    if (!(isNextWhiteSpace || isNextPunctChar)) {\n      right_flanking = false;\n    }\n  }\n\n  if (!canSplitWord) {\n    can_open  = left_flanking  && (!right_flanking || isLastPunctChar);\n    can_close = right_flanking && (!left_flanking  || isNextPunctChar);\n  } else {\n    can_open  = left_flanking;\n    can_close = right_flanking;\n  }\n\n  return {\n    can_open:  can_open,\n    can_close: can_close,\n    length:    count\n  };\n};\n\n\n// re-export Token class to use in block rules\nStateInline.prototype.Token = Token;\n\n\nmodule.exports = StateInline;\n","'use strict';\n\nfunction isBMP (buffer) {\n  return ('BM' === buffer.toString('ascii', 0, 2));\n}\n\nfunction calculate (buffer) {\n  return {\n    'width': buffer.readUInt32LE(18),\n    'height': buffer.readUInt32LE(22)\n  };\n}\n\nmodule.exports = {\n  'detect': isBMP,\n  'calculate': calculate\n};\n","'use strict';\n\n// NOTE: we only support baseline and progressive JPGs here\n// due to the structure of the loader class, we only get a buffer\n// with a maximum size of 4096 bytes. so if the SOF marker is outside\n// if this range we can't detect the file size correctly.\n\n// TO-DO: handle all JFIFs\nvar validJFIFMarkers = {\n  'ffdb': '0001010101', // Samsung D807 JPEG\n  'ffe0': '4a46494600', // Standard JPEG\n  'ffe1': '4578696600', // Camera JPEG, with EXIF data\n  'ffe2': '4943435f50', // Canon EOS-1D JPEG\n  'ffe3': '',           // Samsung D500 JPEG\n  'ffe8': '5350494646', // SPIFF JPEG\n  'ffec': '4475636b79', // Photoshop JPEG\n  'ffed': '50686f746f', // Adobe JPEG, Photoshop CMYK buffer\n  'ffee': '41646f6265'  // Adobe JPEG, Unrecognised (Lightroom??)\n};\n\nvar red = ['\\x1B[31m', '\\x1B[39m'];\nfunction isJPG (buffer) { //, filepath\n  var SOIMarker = buffer.toString('hex', 0, 2);\n  var JFIFMarker = buffer.toString('hex', 2, 4);\n\n  // not a valid jpeg\n  if ('ffd8' !== SOIMarker) {\n    return false;\n  }\n\n  // TO-DO: validate the end-bytes of a jpeg file\n  // use filepath, get the last bytes, check for ffd9\n  var got = buffer.toString('hex', 6, 11);\n  var expected = JFIFMarker && validJFIFMarkers[JFIFMarker];\n  if (expected === '') {\n    console.warn(\n      red[0] +\n      'this looks like a unrecognised jpeg\\n' +\n      'please report the issue here\\n' +\n      red[1],\n      '\\thttps://github.com/netroy/image-size/issues/new\\n'\n    );\n    return false;\n  }\n  return (got === expected) || (JFIFMarker === 'ffdb');\n}\n\nfunction extractSize (buffer, i) {\n  return {\n    'height' : buffer.readUInt16BE(i),\n    'width' : buffer.readUInt16BE(i + 2)\n  };\n}\n\nfunction validateBuffer (buffer, i) {\n  // index should be within buffer limits\n  if (i > buffer.length) {\n    throw new TypeError('Corrupt JPG, exceeded buffer limits');\n  }\n  // Every JPEG block must begin with a 0xFF\n  if (buffer[i] !== 0xFF) {\n    throw new TypeError('Invalid JPG, marker table corrupted');\n  }\n}\n\nfunction calculate (buffer) {\n\n  // Skip 5 chars, they are for signature\n  buffer = buffer.slice(4);\n\n  var i, next;\n  while (buffer.length) {\n    // read length of the next block\n    i = buffer.readUInt16BE(0);\n\n    // ensure correct format\n    validateBuffer(buffer, i);\n\n    // 0xFFC0 is baseline(SOF)\n    // 0xFFC2 is progressive(SOF2)\n    next = buffer[i + 1];\n    if (next === 0xC0 || next === 0xC2) {\n      return extractSize(buffer, i + 5);\n    }\n\n    // move to the next block\n    buffer = buffer.slice(i + 2);\n  }\n\n  throw new TypeError('Invalid JPG, no size found');\n}\n\nmodule.exports = {\n  'detect': isJPG,\n  'calculate': calculate\n};\n","// lheading (---, ===)\n\n'use strict';\n\n\nmodule.exports = function lheading(state, startLine, endLine/*, silent*/) {\n  var content, terminate, i, l, token, pos, max, level, marker,\n      nextLine = startLine + 1, oldParentType,\n      terminatorRules = state.md.block.ruler.getRules('paragraph');\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  oldParentType = state.parentType;\n  state.parentType = 'paragraph'; // use paragraph to match terminatorRules\n\n  // jump line-by-line until empty one or EOF\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue; }\n\n    //\n    // Check for underline in setext header\n    //\n    if (state.sCount[nextLine] >= state.blkIndent) {\n      pos = state.bMarks[nextLine] + state.tShift[nextLine];\n      max = state.eMarks[nextLine];\n\n      if (pos < max) {\n        marker = state.src.charCodeAt(pos);\n\n        if (marker === 0x2D/* - */ || marker === 0x3D/* = */) {\n          pos = state.skipChars(pos, marker);\n          pos = state.skipSpaces(pos);\n\n          if (pos >= max) {\n            level = (marker === 0x3D/* = */ ? 1 : 2);\n            break;\n          }\n        }\n      }\n    }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue; }\n\n    // Some tags can terminate paragraph without empty line.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n  }\n\n  if (!level) {\n    // Didn't find valid underline\n    return false;\n  }\n\n  content = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n\n  state.line = nextLine + 1;\n\n  token          = state.push('heading_open', 'h' + String(level), 1);\n  token.markup   = String.fromCharCode(marker);\n  token.map      = [ startLine, state.line ];\n\n  token          = state.push('inline', '', 0);\n  token.content  = content;\n  token.map      = [ startLine, state.line - 1 ];\n  token.children = [];\n\n  token          = state.push('heading_close', 'h' + String(level), -1);\n  token.markup   = String.fromCharCode(marker);\n\n  state.parentType = oldParentType;\n\n  return true;\n};\n","// \"Zero\" preset, with nothing enabled. Useful for manual configuring of simple\n// modes. For example, to parse bold/italic only.\n\n'use strict';\n\n\nmodule.exports = {\n  options: {\n    html:         false,        // Enable HTML tags in source\n    xhtmlOut:     false,        // Use '/' to close single tags (<br />)\n    breaks:       false,        // Convert '\\n' in paragraphs into <br>\n    langPrefix:   'language-',  // CSS language prefix for fenced blocks\n    linkify:      false,        // autoconvert URL-like texts to links\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer:  false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    maxNesting:   20            // Internal protection, recursion limit\n  },\n\n  components: {\n\n    core: {\n      rules: [\n        'normalize',\n        'block',\n        'inline'\n      ]\n    },\n\n    block: {\n      rules: [\n        'paragraph'\n      ]\n    },\n\n    inline: {\n      rules: [\n        'text'\n      ],\n      rules2: [\n        'balance_pairs',\n        'text_collapse'\n      ]\n    }\n  }\n};\n","// Merge adjacent text nodes into one, and re-calculate all token levels\n//\n'use strict';\n\n\nmodule.exports = function text_collapse(state) {\n  var curr, last,\n      level = 0,\n      tokens = state.tokens,\n      max = state.tokens.length;\n\n  for (curr = last = 0; curr < max; curr++) {\n    // re-calculate levels\n    level += tokens[curr].nesting;\n    tokens[curr].level = level;\n\n    if (tokens[curr].type === 'text' &&\n        curr + 1 < max &&\n        tokens[curr + 1].type === 'text') {\n\n      // collapse two adjacent text nodes\n      tokens[curr + 1].content = tokens[curr].content + tokens[curr + 1].content;\n    } else {\n      if (curr !== last) { tokens[last] = tokens[curr]; }\n\n      last++;\n    }\n  }\n\n  if (curr !== last) {\n    tokens.length = last;\n  }\n};\n","// Process autolinks '<protocol:...>'\n\n'use strict';\n\n\n/*eslint max-len:0*/\nvar EMAIL_RE    = /^<([a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*)>/;\nvar AUTOLINK_RE = /^<([a-zA-Z][a-zA-Z0-9+.\\-]{1,31}):([^<>\\x00-\\x20]*)>/;\n\n\nmodule.exports = function autolink(state, silent) {\n  var tail, linkMatch, emailMatch, url, fullUrl, token,\n      pos = state.pos;\n\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */) { return false; }\n\n  tail = state.src.slice(pos);\n\n  if (tail.indexOf('>') < 0) { return false; }\n\n  if (AUTOLINK_RE.test(tail)) {\n    linkMatch = tail.match(AUTOLINK_RE);\n\n    url = linkMatch[0].slice(1, -1);\n    fullUrl = state.md.normalizeLink(url);\n    if (!state.md.validateLink(fullUrl)) { return false; }\n\n    if (!silent) {\n      token         = state.push('link_open', 'a', 1);\n      token.attrs   = [ [ 'href', fullUrl ] ];\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n\n      token         = state.push('text', '', 0);\n      token.content = state.md.normalizeLinkText(url);\n\n      token         = state.push('link_close', 'a', -1);\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n    }\n\n    state.pos += linkMatch[0].length;\n    return true;\n  }\n\n  if (EMAIL_RE.test(tail)) {\n    emailMatch = tail.match(EMAIL_RE);\n\n    url = emailMatch[0].slice(1, -1);\n    fullUrl = state.md.normalizeLink('mailto:' + url);\n    if (!state.md.validateLink(fullUrl)) { return false; }\n\n    if (!silent) {\n      token         = state.push('link_open', 'a', 1);\n      token.attrs   = [ [ 'href', fullUrl ] ];\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n\n      token         = state.push('text', '', 0);\n      token.content = state.md.normalizeLinkText(url);\n\n      token         = state.push('link_close', 'a', -1);\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n    }\n\n    state.pos += emailMatch[0].length;\n    return true;\n  }\n\n  return false;\n};\n","// Parse image size\n//\n'use strict';\n\nfunction parseNextNumber(str, pos, max) {\n  var code,\n  start = pos,\n  result = {\n    ok: false,\n    pos: pos,\n    value: ''\n  };\n\n  code = str.charCodeAt(pos);\n\n  while (pos < max && (code >= 0x30 /* 0 */ && code <= 0x39 /* 9 */) || code === 0x25 /* % */) {\n    code = str.charCodeAt(++pos);\n  }\n\n  result.ok = true;\n  result.pos = pos;\n  result.value = str.slice(start, pos);\n\n  return result;\n}\n\nmodule.exports = function parseImageSize(str, pos, max) {\n  var code,\n  result = {\n    ok: false,\n    pos: 0,\n    width: '',\n    height: ''\n  };\n\n  if (pos >= max) { return result; }\n\n  code = str.charCodeAt(pos);\n\n  if (code !== 0x3d /* = */) { return result; }\n\n  pos++;\n\n  // size must follow = without any white spaces as follows\n  // (1) =300x200\n  // (2) =300x\n  // (3) =x200\n  code = str.charCodeAt(pos);\n  if (code !== 0x78 /* x */ && (code < 0x30 || code  > 0x39) /* [0-9] */) {\n    return result;\n  }\n\n  // parse width\n  var resultW = parseNextNumber(str, pos, max);\n  pos = resultW.pos;\n\n  // next charactor must be 'x'\n  code = str.charCodeAt(pos);\n  if (code !== 0x78 /* x */) { return result; }\n\n  pos++;\n\n  // parse height\n  var resultH = parseNextNumber(str, pos, max);\n  pos = resultH.pos;\n\n  result.width = resultW.value;\n  result.height = resultH.value;\n  result.pos = pos;\n  result.ok = true;\n  return result;\n};\n","'use strict';\n\n\nmodule.exports = function block(state) {\n  var token;\n\n  if (state.inlineMode) {\n    token          = new state.Token('inline', '', 0);\n    token.content  = state.src;\n    token.map      = [ 0, 1 ];\n    token.children = [];\n    state.tokens.push(token);\n  } else {\n    state.md.block.parse(state.src, state.md, state.env, state.tokens);\n  }\n};\n","'use strict';\n\n\nvar emojies_defs      = require('./lib/data/full.json');\nvar emojies_shortcuts = require('./lib/data/shortcuts');\nvar emoji_html        = require('./lib/render');\nvar emoji_replace     = require('./lib/replace');\nvar normalize_opts    = require('./lib/normalize_opts');\n\n\nmodule.exports = function emoji_plugin(md, options) {\n  var defaults = {\n    defs: emojies_defs,\n    shortcuts: emojies_shortcuts,\n    enabled: []\n  };\n\n  var opts = normalize_opts(md.utils.assign({}, defaults, options || {}));\n\n  md.renderer.rules.emoji = emoji_html;\n\n  md.core.ruler.push('emoji', emoji_replace(md, opts.defs, opts.shortcuts, opts.scanRE, opts.replaceRE));\n};\n","'use strict';\n\nmodule.exports = function(buffer, bits, offset, isBigEndian) {\n  offset = offset || 0;\n  var endian = !!isBigEndian ? 'BE' : 'LE';\n  var method = buffer['readUInt' + bits + endian];\n  return method.call(buffer, offset);\n}\n","// Convert input options to more useable format\n// and compile search regexp\n\n'use strict';\n\n\nfunction quoteRE(str) {\n  return str.replace(/[.?*+^$[\\]\\\\(){}|-]/g, '\\\\$&');\n}\n\n\nmodule.exports = function normalize_opts(options) {\n  var emojies = options.defs,\n      shortcuts;\n\n  // Filter emojies by whitelist, if needed\n  if (options.enabled.length) {\n    emojies = Object.keys(emojies).reduce(function (acc, key) {\n      if (options.enabled.indexOf(key) >= 0) {\n        acc[key] = emojies[key];\n      }\n      return acc;\n    }, {});\n  }\n\n  // Flatten shortcuts to simple object: { alias: emoji_name }\n  shortcuts = Object.keys(options.shortcuts).reduce(function (acc, key) {\n    // Skip aliases for filtered emojies, to reduce regexp\n    if (!emojies[key]) { return acc; }\n\n    if (Array.isArray(options.shortcuts[key])) {\n      options.shortcuts[key].forEach(function (alias) {\n        acc[alias] = key;\n      });\n      return acc;\n    }\n\n    acc[options.shortcuts[key]] = key;\n    return acc;\n  }, {});\n\n  // Compile regexp\n  var names = Object.keys(emojies)\n                .map(function (name) { return ':' + name + ':'; })\n                .concat(Object.keys(shortcuts))\n                .sort()\n                .reverse()\n                .map(function (name) { return quoteRE(name); })\n                .join('|');\n  var scanRE = RegExp(names);\n  var replaceRE = RegExp(names, 'g');\n\n  return {\n    defs: emojies,\n    shortcuts: shortcuts,\n    scanRE: scanRE,\n    replaceRE: replaceRE\n  };\n};\n","// Proceess '\\n'\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function newline(state, silent) {\n  var pmax, max, pos = state.pos;\n\n  if (state.src.charCodeAt(pos) !== 0x0A/* \\n */) { return false; }\n\n  pmax = state.pending.length - 1;\n  max = state.posMax;\n\n  // '  \\n' -> hardbreak\n  // Lookup in pending chars is bad practice! Don't copy to other rules!\n  // Pending string is stored in concat mode, indexed lookups will cause\n  // convertion to flat mode.\n  if (!silent) {\n    if (pmax >= 0 && state.pending.charCodeAt(pmax) === 0x20) {\n      if (pmax >= 1 && state.pending.charCodeAt(pmax - 1) === 0x20) {\n        state.pending = state.pending.replace(/ +$/, '');\n        state.push('hardbreak', 'br', 0);\n      } else {\n        state.pending = state.pending.slice(0, -1);\n        state.push('softbreak', 'br', 0);\n      }\n\n    } else {\n      state.push('softbreak', 'br', 0);\n    }\n  }\n\n  pos++;\n\n  // skip heading spaces for next line\n  while (pos < max && isSpace(state.src.charCodeAt(pos))) { pos++; }\n\n  state.pos = pos;\n  return true;\n};\n","// Commonmark default options\n\n'use strict';\n\n\nmodule.exports = {\n  options: {\n    html:         true,         // Enable HTML tags in source\n    xhtmlOut:     true,         // Use '/' to close single tags (<br />)\n    breaks:       false,        // Convert '\\n' in paragraphs into <br>\n    langPrefix:   'language-',  // CSS language prefix for fenced blocks\n    linkify:      false,        // autoconvert URL-like texts to links\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer:  false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    maxNesting:   20            // Internal protection, recursion limit\n  },\n\n  components: {\n\n    core: {\n      rules: [\n        'normalize',\n        'block',\n        'inline'\n      ]\n    },\n\n    block: {\n      rules: [\n        'blockquote',\n        'code',\n        'fence',\n        'heading',\n        'hr',\n        'html_block',\n        'lheading',\n        'list',\n        'reference',\n        'paragraph'\n      ]\n    },\n\n    inline: {\n      rules: [\n        'autolink',\n        'backticks',\n        'emphasis',\n        'entity',\n        'escape',\n        'html_inline',\n        'image',\n        'link',\n        'newline',\n        'text'\n      ],\n      rules2: [\n        'balance_pairs',\n        'emphasis',\n        'text_collapse'\n      ]\n    }\n  }\n};\n","// Paragraph\n\n'use strict';\n\n\nmodule.exports = function paragraph(state, startLine/*, endLine*/) {\n  var content, terminate, i, l, token, oldParentType,\n      nextLine = startLine + 1,\n      terminatorRules = state.md.block.ruler.getRules('paragraph'),\n      endLine = state.lineMax;\n\n  oldParentType = state.parentType;\n  state.parentType = 'paragraph';\n\n  // jump line-by-line until empty one or EOF\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue; }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue; }\n\n    // Some tags can terminate paragraph without empty line.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n  }\n\n  content = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n\n  state.line = nextLine;\n\n  token          = state.push('paragraph_open', 'p', 1);\n  token.map      = [ startLine, state.line ];\n\n  token          = state.push('inline', '', 0);\n  token.content  = content;\n  token.map      = [ startLine, state.line ];\n  token.children = [];\n\n  token          = state.push('paragraph_close', 'p', -1);\n\n  state.parentType = oldParentType;\n\n  return true;\n};\n","/**\n * class Ruler\n *\n * Helper class, used by [[MarkdownIt#core]], [[MarkdownIt#block]] and\n * [[MarkdownIt#inline]] to manage sequences of functions (rules):\n *\n * - keep rules in defined order\n * - assign the name to each rule\n * - enable/disable rules\n * - add/replace rules\n * - allow assign rules to additional named chains (in the same)\n * - cacheing lists of active rules\n *\n * You will not need use this class directly until write plugins. For simple\n * rules control use [[MarkdownIt.disable]], [[MarkdownIt.enable]] and\n * [[MarkdownIt.use]].\n **/\n'use strict';\n\n\n/**\n * new Ruler()\n **/\nfunction Ruler() {\n  // List of added rules. Each element is:\n  //\n  // {\n  //   name: XXX,\n  //   enabled: Boolean,\n  //   fn: Function(),\n  //   alt: [ name2, name3 ]\n  // }\n  //\n  this.__rules__ = [];\n\n  // Cached rule chains.\n  //\n  // First level - chain name, '' for default.\n  // Second level - diginal anchor for fast filtering by charcodes.\n  //\n  this.__cache__ = null;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n// Helper methods, should not be used directly\n\n\n// Find rule index by name\n//\nRuler.prototype.__find__ = function (name) {\n  for (var i = 0; i < this.__rules__.length; i++) {\n    if (this.__rules__[i].name === name) {\n      return i;\n    }\n  }\n  return -1;\n};\n\n\n// Build rules lookup cache\n//\nRuler.prototype.__compile__ = function () {\n  var self = this;\n  var chains = [ '' ];\n\n  // collect unique names\n  self.__rules__.forEach(function (rule) {\n    if (!rule.enabled) { return; }\n\n    rule.alt.forEach(function (altName) {\n      if (chains.indexOf(altName) < 0) {\n        chains.push(altName);\n      }\n    });\n  });\n\n  self.__cache__ = {};\n\n  chains.forEach(function (chain) {\n    self.__cache__[chain] = [];\n    self.__rules__.forEach(function (rule) {\n      if (!rule.enabled) { return; }\n\n      if (chain && rule.alt.indexOf(chain) < 0) { return; }\n\n      self.__cache__[chain].push(rule.fn);\n    });\n  });\n};\n\n\n/**\n * Ruler.at(name, fn [, options])\n * - name (String): rule name to replace.\n * - fn (Function): new rule function.\n * - options (Object): new rule options (not mandatory).\n *\n * Replace rule by name with new function & options. Throws error if name not\n * found.\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * Replace existing typographer replacement rule with new one:\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.core.ruler.at('replacements', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.at = function (name, fn, options) {\n  var index = this.__find__(name);\n  var opt = options || {};\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + name); }\n\n  this.__rules__[index].fn = fn;\n  this.__rules__[index].alt = opt.alt || [];\n  this.__cache__ = null;\n};\n\n\n/**\n * Ruler.before(beforeName, ruleName, fn [, options])\n * - beforeName (String): new rule will be added before this one.\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Add new rule to chain before one with given name. See also\n * [[Ruler.after]], [[Ruler.push]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.block.ruler.before('paragraph', 'my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.before = function (beforeName, ruleName, fn, options) {\n  var index = this.__find__(beforeName);\n  var opt = options || {};\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + beforeName); }\n\n  this.__rules__.splice(index, 0, {\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n\n\n/**\n * Ruler.after(afterName, ruleName, fn [, options])\n * - afterName (String): new rule will be added after this one.\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Add new rule to chain after one with given name. See also\n * [[Ruler.before]], [[Ruler.push]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.inline.ruler.after('text', 'my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.after = function (afterName, ruleName, fn, options) {\n  var index = this.__find__(afterName);\n  var opt = options || {};\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + afterName); }\n\n  this.__rules__.splice(index + 1, 0, {\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n\n/**\n * Ruler.push(ruleName, fn [, options])\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Push new rule to the end of chain. See also\n * [[Ruler.before]], [[Ruler.after]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.core.ruler.push('my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.push = function (ruleName, fn, options) {\n  var opt = options || {};\n\n  this.__rules__.push({\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n\n\n/**\n * Ruler.enable(list [, ignoreInvalid]) -> Array\n * - list (String|Array): list of rule names to enable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable rules with given names. If any rule name not found - throw Error.\n * Errors can be disabled by second param.\n *\n * Returns list of found rule names (if no exception happened).\n *\n * See also [[Ruler.disable]], [[Ruler.enableOnly]].\n **/\nRuler.prototype.enable = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  var result = [];\n\n  // Search by name and enable\n  list.forEach(function (name) {\n    var idx = this.__find__(name);\n\n    if (idx < 0) {\n      if (ignoreInvalid) { return; }\n      throw new Error('Rules manager: invalid rule name ' + name);\n    }\n    this.__rules__[idx].enabled = true;\n    result.push(name);\n  }, this);\n\n  this.__cache__ = null;\n  return result;\n};\n\n\n/**\n * Ruler.enableOnly(list [, ignoreInvalid])\n * - list (String|Array): list of rule names to enable (whitelist).\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable rules with given names, and disable everything else. If any rule name\n * not found - throw Error. Errors can be disabled by second param.\n *\n * See also [[Ruler.disable]], [[Ruler.enable]].\n **/\nRuler.prototype.enableOnly = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  this.__rules__.forEach(function (rule) { rule.enabled = false; });\n\n  this.enable(list, ignoreInvalid);\n};\n\n\n/**\n * Ruler.disable(list [, ignoreInvalid]) -> Array\n * - list (String|Array): list of rule names to disable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Disable rules with given names. If any rule name not found - throw Error.\n * Errors can be disabled by second param.\n *\n * Returns list of found rule names (if no exception happened).\n *\n * See also [[Ruler.enable]], [[Ruler.enableOnly]].\n **/\nRuler.prototype.disable = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  var result = [];\n\n  // Search by name and disable\n  list.forEach(function (name) {\n    var idx = this.__find__(name);\n\n    if (idx < 0) {\n      if (ignoreInvalid) { return; }\n      throw new Error('Rules manager: invalid rule name ' + name);\n    }\n    this.__rules__[idx].enabled = false;\n    result.push(name);\n  }, this);\n\n  this.__cache__ = null;\n  return result;\n};\n\n\n/**\n * Ruler.getRules(chainName) -> Array\n *\n * Return array of active functions (rules) for given chain name. It analyzes\n * rules configuration, compiles caches if not exists and returns result.\n *\n * Default chain name is `''` (empty string). It can't be skipped. That's\n * done intentionally, to keep signature monomorphic for high speed.\n **/\nRuler.prototype.getRules = function (chainName) {\n  if (this.__cache__ === null) {\n    this.__compile__();\n  }\n\n  // Chain can be empty, if rules disabled. But we still have to return Array.\n  return this.__cache__[chainName] || [];\n};\n\nmodule.exports = Ruler;\n","// Emojies & shortcuts replacement logic.\n//\n// Note: In theory, it could be faster to parse :smile: in inline chain and\n// leave only shortcuts here. But, who care...\n//\n\n'use strict';\n\n\nmodule.exports = function create_rule(md, emojies, shortcuts, scanRE, replaceRE) {\n  var arrayReplaceAt = md.utils.arrayReplaceAt,\n      ucm = md.utils.lib.ucmicro,\n      ZPCc = new RegExp([ ucm.Z.source, ucm.P.source, ucm.Cc.source ].join('|'));\n\n  function splitTextToken(text, level, Token) {\n    var token, last_pos = 0, nodes = [];\n\n    text.replace(replaceRE, function (match, offset, src) {\n      var emoji_name;\n      // Validate emoji name\n      if (shortcuts.hasOwnProperty(match)) {\n        // replace shortcut with full name\n        emoji_name = shortcuts[match];\n\n        // Don't allow letters before any shortcut (as in no \":/\" in http://)\n        if (offset > 0 && !ZPCc.test(src[offset - 1])) {\n          return;\n        }\n\n        // Don't allow letters after any shortcut\n        if (offset + match.length < src.length && !ZPCc.test(src[offset + match.length])) {\n          return;\n        }\n      } else {\n        emoji_name = match.slice(1, -1);\n      }\n\n      // Add new tokens to pending list\n      if (offset > last_pos) {\n        token         = new Token('text', '', 0);\n        token.content = text.slice(last_pos, offset);\n        nodes.push(token);\n      }\n\n      token         = new Token('emoji', '', 0);\n      token.markup  = emoji_name;\n      token.content = emojies[emoji_name];\n      nodes.push(token);\n\n      last_pos = offset + match.length;\n    });\n\n    if (last_pos < text.length) {\n      token         = new Token('text', '', 0);\n      token.content = text.slice(last_pos);\n      nodes.push(token);\n    }\n\n    return nodes;\n  }\n\n  return function emoji_replace(state) {\n    var i, j, l, tokens, token,\n        blockTokens = state.tokens,\n        autolinkLevel = 0;\n\n    for (j = 0, l = blockTokens.length; j < l; j++) {\n      if (blockTokens[j].type !== 'inline') { continue; }\n      tokens = blockTokens[j].children;\n\n      // We scan from the end, to keep position when new tags added.\n      // Use reversed logic in links start/end match\n      for (i = tokens.length - 1; i >= 0; i--) {\n        token = tokens[i];\n\n        if (token.type === 'link_open' || token.type === 'link_close') {\n          if (token.info === 'auto') { autolinkLevel -= token.nesting; }\n        }\n\n        if (token.type === 'text' && autolinkLevel === 0 && scanRE.test(token.content)) {\n          // replace current node\n          blockTokens[j].children = tokens = arrayReplaceAt(\n            tokens, i, splitTextToken(token.content, token.level, state.Token)\n          );\n        }\n      }\n    }\n  };\n};\n","// Parse backticks\n\n'use strict';\n\nmodule.exports = function backtick(state, silent) {\n  var start, max, marker, matchStart, matchEnd, token,\n      pos = state.pos,\n      ch = state.src.charCodeAt(pos);\n\n  if (ch !== 0x60/* ` */) { return false; }\n\n  start = pos;\n  pos++;\n  max = state.posMax;\n\n  while (pos < max && state.src.charCodeAt(pos) === 0x60/* ` */) { pos++; }\n\n  marker = state.src.slice(start, pos);\n\n  matchStart = matchEnd = pos;\n\n  while ((matchStart = state.src.indexOf('`', matchEnd)) !== -1) {\n    matchEnd = matchStart + 1;\n\n    while (matchEnd < max && state.src.charCodeAt(matchEnd) === 0x60/* ` */) { matchEnd++; }\n\n    if (matchEnd - matchStart === marker.length) {\n      if (!silent) {\n        token         = state.push('code_inline', 'code', 0);\n        token.markup  = marker;\n        token.content = state.src.slice(pos, matchStart)\n                                 .replace(/[ \\n]+/g, ' ')\n                                 .trim();\n      }\n      state.pos = matchEnd;\n      return true;\n    }\n  }\n\n  if (!silent) { state.pending += marker; }\n  state.pos += marker.length;\n  return true;\n};\n","// Lists\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\n// Search `[-+*][\\n ]`, returns next pos after marker on success\n// or -1 on fail.\nfunction skipBulletListMarker(state, startLine) {\n  var marker, pos, max, ch;\n\n  pos = state.bMarks[startLine] + state.tShift[startLine];\n  max = state.eMarks[startLine];\n\n  marker = state.src.charCodeAt(pos++);\n  // Check bullet\n  if (marker !== 0x2A/* * */ &&\n      marker !== 0x2D/* - */ &&\n      marker !== 0x2B/* + */) {\n    return -1;\n  }\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (!isSpace(ch)) {\n      // \" -test \" - is not a list item\n      return -1;\n    }\n  }\n\n  return pos;\n}\n\n// Search `\\d+[.)][\\n ]`, returns next pos after marker on success\n// or -1 on fail.\nfunction skipOrderedListMarker(state, startLine) {\n  var ch,\n      start = state.bMarks[startLine] + state.tShift[startLine],\n      pos = start,\n      max = state.eMarks[startLine];\n\n  // List marker should have at least 2 chars (digit + dot)\n  if (pos + 1 >= max) { return -1; }\n\n  ch = state.src.charCodeAt(pos++);\n\n  if (ch < 0x30/* 0 */ || ch > 0x39/* 9 */) { return -1; }\n\n  for (;;) {\n    // EOL -> fail\n    if (pos >= max) { return -1; }\n\n    ch = state.src.charCodeAt(pos++);\n\n    if (ch >= 0x30/* 0 */ && ch <= 0x39/* 9 */) {\n\n      // List marker should have no more than 9 digits\n      // (prevents integer overflow in browsers)\n      if (pos - start >= 10) { return -1; }\n\n      continue;\n    }\n\n    // found valid marker\n    if (ch === 0x29/* ) */ || ch === 0x2e/* . */) {\n      break;\n    }\n\n    return -1;\n  }\n\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (!isSpace(ch)) {\n      // \" 1.test \" - is not a list item\n      return -1;\n    }\n  }\n  return pos;\n}\n\nfunction markTightParagraphs(state, idx) {\n  var i, l,\n      level = state.level + 2;\n\n  for (i = idx + 2, l = state.tokens.length - 2; i < l; i++) {\n    if (state.tokens[i].level === level && state.tokens[i].type === 'paragraph_open') {\n      state.tokens[i + 2].hidden = true;\n      state.tokens[i].hidden = true;\n      i += 2;\n    }\n  }\n}\n\n\nmodule.exports = function list(state, startLine, endLine, silent) {\n  var ch,\n      contentStart,\n      i,\n      indent,\n      indentAfterMarker,\n      initial,\n      isOrdered,\n      itemLines,\n      l,\n      listLines,\n      listTokIdx,\n      markerCharCode,\n      markerValue,\n      max,\n      nextLine,\n      offset,\n      oldIndent,\n      oldLIndent,\n      oldParentType,\n      oldTShift,\n      oldTight,\n      pos,\n      posAfterMarker,\n      prevEmptyEnd,\n      start,\n      terminate,\n      terminatorRules,\n      token,\n      isTerminatingParagraph = false,\n      tight = true;\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  // limit conditions when list can interrupt\n  // a paragraph (validation mode only)\n  if (silent && state.parentType === 'paragraph') {\n    // Next list item should still terminate previous list item;\n    //\n    // This code can fail if plugins use blkIndent as well as lists,\n    // but I hope the spec gets fixed long before that happens.\n    //\n    if (state.tShift[startLine] >= state.blkIndent) {\n      isTerminatingParagraph = true;\n    }\n  }\n\n  // Detect list type and position after marker\n  if ((posAfterMarker = skipOrderedListMarker(state, startLine)) >= 0) {\n    isOrdered = true;\n    start = state.bMarks[startLine] + state.tShift[startLine];\n    markerValue = Number(state.src.substr(start, posAfterMarker - start - 1));\n\n    // If we're starting a new ordered list right after\n    // a paragraph, it should start with 1.\n    if (isTerminatingParagraph && markerValue !== 1) return false;\n\n  } else if ((posAfterMarker = skipBulletListMarker(state, startLine)) >= 0) {\n    isOrdered = false;\n\n  } else {\n    return false;\n  }\n\n  // If we're starting a new unordered list right after\n  // a paragraph, first line should not be empty.\n  if (isTerminatingParagraph) {\n    if (state.skipSpaces(posAfterMarker) >= state.eMarks[startLine]) return false;\n  }\n\n  // We should terminate list on style change. Remember first one to compare.\n  markerCharCode = state.src.charCodeAt(posAfterMarker - 1);\n\n  // For validation mode we can terminate immediately\n  if (silent) { return true; }\n\n  // Start list\n  listTokIdx = state.tokens.length;\n\n  if (isOrdered) {\n    token       = state.push('ordered_list_open', 'ol', 1);\n    if (markerValue !== 1) {\n      token.attrs = [ [ 'start', markerValue ] ];\n    }\n\n  } else {\n    token       = state.push('bullet_list_open', 'ul', 1);\n  }\n\n  token.map    = listLines = [ startLine, 0 ];\n  token.markup = String.fromCharCode(markerCharCode);\n\n  //\n  // Iterate list items\n  //\n\n  nextLine = startLine;\n  prevEmptyEnd = false;\n  terminatorRules = state.md.block.ruler.getRules('list');\n\n  oldParentType = state.parentType;\n  state.parentType = 'list';\n\n  while (nextLine < endLine) {\n    pos = posAfterMarker;\n    max = state.eMarks[nextLine];\n\n    initial = offset = state.sCount[nextLine] + posAfterMarker - (state.bMarks[startLine] + state.tShift[startLine]);\n\n    while (pos < max) {\n      ch = state.src.charCodeAt(pos);\n\n      if (ch === 0x09) {\n        offset += 4 - (offset + state.bsCount[nextLine]) % 4;\n      } else if (ch === 0x20) {\n        offset++;\n      } else {\n        break;\n      }\n\n      pos++;\n    }\n\n    contentStart = pos;\n\n    if (contentStart >= max) {\n      // trimming space in \"-    \\n  3\" case, indent is 1 here\n      indentAfterMarker = 1;\n    } else {\n      indentAfterMarker = offset - initial;\n    }\n\n    // If we have more than 4 spaces, the indent is 1\n    // (the rest is just indented code block)\n    if (indentAfterMarker > 4) { indentAfterMarker = 1; }\n\n    // \"  -  test\"\n    //  ^^^^^ - calculating total length of this thing\n    indent = initial + indentAfterMarker;\n\n    // Run subparser & write tokens\n    token        = state.push('list_item_open', 'li', 1);\n    token.markup = String.fromCharCode(markerCharCode);\n    token.map    = itemLines = [ startLine, 0 ];\n\n    oldIndent = state.blkIndent;\n    oldTight = state.tight;\n    oldTShift = state.tShift[startLine];\n    oldLIndent = state.sCount[startLine];\n    state.blkIndent = indent;\n    state.tight = true;\n    state.tShift[startLine] = contentStart - state.bMarks[startLine];\n    state.sCount[startLine] = offset;\n\n    if (contentStart >= max && state.isEmpty(startLine + 1)) {\n      // workaround for this case\n      // (list item is empty, list terminates before \"foo\"):\n      // ~~~~~~~~\n      //   -\n      //\n      //     foo\n      // ~~~~~~~~\n      state.line = Math.min(state.line + 2, endLine);\n    } else {\n      state.md.block.tokenize(state, startLine, endLine, true);\n    }\n\n    // If any of list item is tight, mark list as tight\n    if (!state.tight || prevEmptyEnd) {\n      tight = false;\n    }\n    // Item become loose if finish with empty line,\n    // but we should filter last element, because it means list finish\n    prevEmptyEnd = (state.line - startLine) > 1 && state.isEmpty(state.line - 1);\n\n    state.blkIndent = oldIndent;\n    state.tShift[startLine] = oldTShift;\n    state.sCount[startLine] = oldLIndent;\n    state.tight = oldTight;\n\n    token        = state.push('list_item_close', 'li', -1);\n    token.markup = String.fromCharCode(markerCharCode);\n\n    nextLine = startLine = state.line;\n    itemLines[1] = nextLine;\n    contentStart = state.bMarks[startLine];\n\n    if (nextLine >= endLine) { break; }\n\n    //\n    // Try to check if list is terminated or continued.\n    //\n    if (state.sCount[nextLine] < state.blkIndent) { break; }\n\n    // fail if terminating block found\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n\n    // fail if list has another type\n    if (isOrdered) {\n      posAfterMarker = skipOrderedListMarker(state, nextLine);\n      if (posAfterMarker < 0) { break; }\n    } else {\n      posAfterMarker = skipBulletListMarker(state, nextLine);\n      if (posAfterMarker < 0) { break; }\n    }\n\n    if (markerCharCode !== state.src.charCodeAt(posAfterMarker - 1)) { break; }\n  }\n\n  // Finalize list\n  if (isOrdered) {\n    token = state.push('ordered_list_close', 'ol', -1);\n  } else {\n    token = state.push('bullet_list_close', 'ul', -1);\n  }\n  token.markup = String.fromCharCode(markerCharCode);\n\n  listLines[1] = nextLine;\n  state.line = nextLine;\n\n  state.parentType = oldParentType;\n\n  // mark paragraphs tight if needed\n  if (tight) {\n    markTightParagraphs(state, listTokIdx);\n  }\n\n  return true;\n};\n","'use strict';\n\n\nmodule.exports = function ins_plugin(md) {\n  // Insert each marker as a separate text token, and add it to delimiter list\n  //\n  function tokenize(state, silent) {\n    var i, scanned, token, len, ch,\n        start = state.pos,\n        marker = state.src.charCodeAt(start);\n\n    if (silent) { return false; }\n\n    if (marker !== 0x3D/* = */) { return false; }\n\n    scanned = state.scanDelims(state.pos, true);\n    len = scanned.length;\n    ch = String.fromCharCode(marker);\n\n    if (len < 2) { return false; }\n\n    if (len % 2) {\n      token         = state.push('text', '', 0);\n      token.content = ch;\n      len--;\n    }\n\n    for (i = 0; i < len; i += 2) {\n      token         = state.push('text', '', 0);\n      token.content = ch + ch;\n\n      state.delimiters.push({\n        marker: marker,\n        jump:   i,\n        token:  state.tokens.length - 1,\n        level:  state.level,\n        end:    -1,\n        open:   scanned.can_open,\n        close:  scanned.can_close\n      });\n    }\n\n    state.pos += scanned.length;\n\n    return true;\n  }\n\n\n  // Walk through delimiter list and replace text tokens with tags\n  //\n  function postProcess(state) {\n    var i, j,\n        startDelim,\n        endDelim,\n        token,\n        loneMarkers = [],\n        delimiters = state.delimiters,\n        max = state.delimiters.length;\n\n    for (i = 0; i < max; i++) {\n      startDelim = delimiters[i];\n\n      if (startDelim.marker !== 0x3D/* = */) {\n        continue;\n      }\n\n      if (startDelim.end === -1) {\n        continue;\n      }\n\n      endDelim = delimiters[startDelim.end];\n\n      token         = state.tokens[startDelim.token];\n      token.type    = 'mark_open';\n      token.tag     = 'mark';\n      token.nesting = 1;\n      token.markup  = '==';\n      token.content = '';\n\n      token         = state.tokens[endDelim.token];\n      token.type    = 'mark_close';\n      token.tag     = 'mark';\n      token.nesting = -1;\n      token.markup  = '==';\n      token.content = '';\n\n      if (state.tokens[endDelim.token - 1].type === 'text' &&\n          state.tokens[endDelim.token - 1].content === '=') {\n\n        loneMarkers.push(endDelim.token - 1);\n      }\n    }\n\n    // If a marker sequence has an odd number of characters, it's splitted\n    // like this: `~~~~~` -> `~` + `~~` + `~~`, leaving one marker at the\n    // start of the sequence.\n    //\n    // So, we have to move all those markers after subsequent s_close tags.\n    //\n    while (loneMarkers.length) {\n      i = loneMarkers.pop();\n      j = i + 1;\n\n      while (j < state.tokens.length && state.tokens[j].type === 'mark_close') {\n        j++;\n      }\n\n      j--;\n\n      if (i !== j) {\n        token = state.tokens[j];\n        state.tokens[j] = state.tokens[i];\n        state.tokens[i] = token;\n      }\n    }\n  }\n\n  md.inline.ruler.before('emphasis', 'mark', tokenize);\n  md.inline.ruler2.before('emphasis', 'mark', postProcess);\n};\n","// Normalize input string\n\n'use strict';\n\n\nvar NEWLINES_RE  = /\\r[\\n\\u0085]?|[\\u2424\\u2028\\u0085]/g;\nvar NULL_RE      = /\\u0000/g;\n\n\nmodule.exports = function inline(state) {\n  var str;\n\n  // Normalize newlines\n  str = state.src.replace(NEWLINES_RE, '\\n');\n\n  // Replace NULL characters\n  str = str.replace(NULL_RE, '\\uFFFD');\n\n  state.src = str;\n};\n","/** internal\n * class ParserInline\n *\n * Tokenizes paragraph content.\n **/\n'use strict';\n\n\nvar Ruler           = require('./ruler');\n\n\n////////////////////////////////////////////////////////////////////////////////\n// Parser rules\n\nvar _rules = [\n  [ 'text',            require('./rules_inline/text') ],\n  [ 'newline',         require('./rules_inline/newline') ],\n  [ 'escape',          require('./rules_inline/escape') ],\n  [ 'backticks',       require('./rules_inline/backticks') ],\n  [ 'strikethrough',   require('./rules_inline/strikethrough').tokenize ],\n  [ 'emphasis',        require('./rules_inline/emphasis').tokenize ],\n  [ 'link',            require('./rules_inline/link') ],\n  [ 'image',           require('./rules_inline/image') ],\n  [ 'autolink',        require('./rules_inline/autolink') ],\n  [ 'html_inline',     require('./rules_inline/html_inline') ],\n  [ 'entity',          require('./rules_inline/entity') ]\n];\n\nvar _rules2 = [\n  [ 'balance_pairs',   require('./rules_inline/balance_pairs') ],\n  [ 'strikethrough',   require('./rules_inline/strikethrough').postProcess ],\n  [ 'emphasis',        require('./rules_inline/emphasis').postProcess ],\n  [ 'text_collapse',   require('./rules_inline/text_collapse') ]\n];\n\n\n/**\n * new ParserInline()\n **/\nfunction ParserInline() {\n  var i;\n\n  /**\n   * ParserInline#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of inline rules.\n   **/\n  this.ruler = new Ruler();\n\n  for (i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1]);\n  }\n\n  /**\n   * ParserInline#ruler2 -> Ruler\n   *\n   * [[Ruler]] instance. Second ruler used for post-processing\n   * (e.g. in emphasis-like rules).\n   **/\n  this.ruler2 = new Ruler();\n\n  for (i = 0; i < _rules2.length; i++) {\n    this.ruler2.push(_rules2[i][0], _rules2[i][1]);\n  }\n}\n\n\n// Skip single token by running all rules in validation mode;\n// returns `true` if any rule reported success\n//\nParserInline.prototype.skipToken = function (state) {\n  var ok, i, pos = state.pos,\n      rules = this.ruler.getRules(''),\n      len = rules.length,\n      maxNesting = state.md.options.maxNesting,\n      cache = state.cache;\n\n\n  if (typeof cache[pos] !== 'undefined') {\n    state.pos = cache[pos];\n    return;\n  }\n\n  if (state.level < maxNesting) {\n    for (i = 0; i < len; i++) {\n      // Increment state.level and decrement it later to limit recursion.\n      // It's harmless to do here, because no tokens are created. But ideally,\n      // we'd need a separate private state variable for this purpose.\n      //\n      state.level++;\n      ok = rules[i](state, true);\n      state.level--;\n\n      if (ok) { break; }\n    }\n  } else {\n    // Too much nesting, just skip until the end of the paragraph.\n    //\n    // NOTE: this will cause links to behave incorrectly in the following case,\n    //       when an amount of `[` is exactly equal to `maxNesting + 1`:\n    //\n    //       [[[[[[[[[[[[[[[[[[[[[foo]()\n    //\n    // TODO: remove this workaround when CM standard will allow nested links\n    //       (we can replace it by preventing links from being parsed in\n    //       validation mode)\n    //\n    state.pos = state.posMax;\n  }\n\n  if (!ok) { state.pos++; }\n  cache[pos] = state.pos;\n};\n\n\n// Generate tokens for input range\n//\nParserInline.prototype.tokenize = function (state) {\n  var ok, i,\n      rules = this.ruler.getRules(''),\n      len = rules.length,\n      end = state.posMax,\n      maxNesting = state.md.options.maxNesting;\n\n  while (state.pos < end) {\n    // Try all possible rules.\n    // On success, rule should:\n    //\n    // - update `state.pos`\n    // - update `state.tokens`\n    // - return true\n\n    if (state.level < maxNesting) {\n      for (i = 0; i < len; i++) {\n        ok = rules[i](state, false);\n        if (ok) { break; }\n      }\n    }\n\n    if (ok) {\n      if (state.pos >= end) { break; }\n      continue;\n    }\n\n    state.pending += state.src[state.pos++];\n  }\n\n  if (state.pending) {\n    state.pushPending();\n  }\n};\n\n\n/**\n * ParserInline.parse(str, md, env, outTokens)\n *\n * Process input string and push inline tokens into `outTokens`\n **/\nParserInline.prototype.parse = function (str, md, env, outTokens) {\n  var i, rules, len;\n  var state = new this.State(str, md, env, outTokens);\n\n  this.tokenize(state);\n\n  rules = this.ruler2.getRules('');\n  len = rules.length;\n\n  for (i = 0; i < len; i++) {\n    rules[i](state);\n  }\n};\n\n\nParserInline.prototype.State = require('./rules_inline/state_inline');\n\n\nmodule.exports = ParserInline;\n","// Enclose abbreviations in <abbr> tags\n//\n'use strict';\n\n\nmodule.exports = function sub_plugin(md) {\n  var escapeRE        = md.utils.escapeRE,\n      arrayReplaceAt  = md.utils.arrayReplaceAt;\n\n  // ASCII characters in Cc, Sc, Sm, Sk categories we should terminate on;\n  // you can check character classes here:\n  // http://www.unicode.org/Public/UNIDATA/UnicodeData.txt\n  var OTHER_CHARS      = ' \\r\\n$+<=>^`|~';\n\n  var UNICODE_PUNCT_RE = md.utils.lib.ucmicro.P.source;\n  var UNICODE_SPACE_RE = md.utils.lib.ucmicro.Z.source;\n\n\n  function abbr_def(state, startLine, endLine, silent) {\n    var label, title, ch, labelStart, labelEnd,\n        pos = state.bMarks[startLine] + state.tShift[startLine],\n        max = state.eMarks[startLine];\n\n    if (pos + 2 >= max) { return false; }\n\n    if (state.src.charCodeAt(pos++) !== 0x2A/* * */) { return false; }\n    if (state.src.charCodeAt(pos++) !== 0x5B/* [ */) { return false; }\n\n    labelStart = pos;\n\n    for (; pos < max; pos++) {\n      ch = state.src.charCodeAt(pos);\n      if (ch === 0x5B /* [ */) {\n        return false;\n      } else if (ch === 0x5D /* ] */) {\n        labelEnd = pos;\n        break;\n      } else if (ch === 0x5C /* \\ */) {\n        pos++;\n      }\n    }\n\n    if (labelEnd < 0 || state.src.charCodeAt(labelEnd + 1) !== 0x3A/* : */) {\n      return false;\n    }\n\n    if (silent) { return true; }\n\n    label = state.src.slice(labelStart, labelEnd).replace(/\\\\(.)/g, '$1');\n    title = state.src.slice(labelEnd + 2, max).trim();\n    if (label.length === 0) { return false; }\n    if (title.length === 0) { return false; }\n    if (!state.env.abbreviations) { state.env.abbreviations = {}; }\n    // prepend ':' to avoid conflict with Object.prototype members\n    if (typeof state.env.abbreviations[':' + label] === 'undefined') {\n      state.env.abbreviations[':' + label] = title;\n    }\n\n    state.line = startLine + 1;\n    return true;\n  }\n\n\n  function abbr_replace(state) {\n    var i, j, l, tokens, token, text, nodes, pos, reg, m, regText, regSimple,\n        currentToken,\n        blockTokens = state.tokens;\n\n    if (!state.env.abbreviations) { return; }\n\n    regSimple = new RegExp('(?:' +\n      Object.keys(state.env.abbreviations).map(function (x) {\n        return x.substr(1);\n      }).sort(function (a, b) {\n        return b.length - a.length;\n      }).map(escapeRE).join('|') +\n    ')');\n\n    regText = '(^|' + UNICODE_PUNCT_RE + '|' + UNICODE_SPACE_RE +\n                    '|[' + OTHER_CHARS.split('').map(escapeRE).join('') + '])'\n            + '(' + Object.keys(state.env.abbreviations).map(function (x) {\n                      return x.substr(1);\n                    }).sort(function (a, b) {\n                      return b.length - a.length;\n                    }).map(escapeRE).join('|') + ')'\n            + '($|' + UNICODE_PUNCT_RE + '|' + UNICODE_SPACE_RE +\n                    '|[' + OTHER_CHARS.split('').map(escapeRE).join('') + '])';\n\n    reg = new RegExp(regText, 'g');\n\n    for (j = 0, l = blockTokens.length; j < l; j++) {\n      if (blockTokens[j].type !== 'inline') { continue; }\n      tokens = blockTokens[j].children;\n\n      // We scan from the end, to keep position when new tags added.\n      for (i = tokens.length - 1; i >= 0; i--) {\n        currentToken = tokens[i];\n        if (currentToken.type !== 'text') { continue; }\n\n        pos = 0;\n        text = currentToken.content;\n        reg.lastIndex = 0;\n        nodes = [];\n\n        // fast regexp run to determine whether there are any abbreviated words\n        // in the current token\n        if (!regSimple.test(text)) { continue; }\n\n        while ((m = reg.exec(text))) {\n          if (m.index > 0 || m[1].length > 0) {\n            token         = new state.Token('text', '', 0);\n            token.content = text.slice(pos, m.index + m[1].length);\n            nodes.push(token);\n          }\n\n          token         = new state.Token('abbr_open', 'abbr', 1);\n          token.attrs   = [ [ 'title', state.env.abbreviations[':' + m[2]] ] ];\n          nodes.push(token);\n\n          token         = new state.Token('text', '', 0);\n          token.content = m[2];\n          nodes.push(token);\n\n          token         = new state.Token('abbr_close', 'abbr', -1);\n          nodes.push(token);\n\n          reg.lastIndex -= m[3].length;\n          pos = reg.lastIndex;\n        }\n\n        if (!nodes.length) { continue; }\n\n        if (pos < text.length) {\n          token         = new state.Token('text', '', 0);\n          token.content = text.slice(pos);\n          nodes.push(token);\n        }\n\n        // replace current node\n        blockTokens[j].children = tokens = arrayReplaceAt(tokens, i, nodes);\n      }\n    }\n  }\n\n  md.block.ruler.before('reference', 'abbr_def', abbr_def, { alt: [ 'paragraph', 'reference' ] });\n\n  md.core.ruler.after('linkify', 'abbr_replace', abbr_replace);\n};\n","'use strict';\n\nfunction isPSD (buffer) {\n  return ('8BPS' === buffer.toString('ascii', 0, 4));\n}\n\nfunction calculate (buffer) {\n  return {\n    'width': buffer.readUInt32BE(18),\n    'height': buffer.readUInt32BE(14)\n  };\n}\n\nmodule.exports = {\n  'detect': isPSD,\n  'calculate': calculate\n};\n","// Process ~subscript~\n\n'use strict';\n\n// same as UNESCAPE_MD_RE plus a space\nvar UNESCAPE_RE = /\\\\([ \\\\!\"#$%&'()*+,.\\/:;<=>?@[\\]^_`{|}~-])/g;\n\n\nfunction subscript(state, silent) {\n  var found,\n      content,\n      token,\n      max = state.posMax,\n      start = state.pos;\n\n  if (state.src.charCodeAt(start) !== 0x7E/* ~ */) { return false; }\n  if (silent) { return false; } // don't run any pairs in validation mode\n  if (start + 2 >= max) { return false; }\n\n  state.pos = start + 1;\n\n  while (state.pos < max) {\n    if (state.src.charCodeAt(state.pos) === 0x7E/* ~ */) {\n      found = true;\n      break;\n    }\n\n    state.md.inline.skipToken(state);\n  }\n\n  if (!found || start + 1 === state.pos) {\n    state.pos = start;\n    return false;\n  }\n\n  content = state.src.slice(start + 1, state.pos);\n\n  // don't allow unescaped spaces/newlines inside\n  if (content.match(/(^|[^\\\\])(\\\\\\\\)*\\s/)) {\n    state.pos = start;\n    return false;\n  }\n\n  // found!\n  state.posMax = state.pos;\n  state.pos = start + 1;\n\n  // Earlier we checked !silent, but this implementation does not need it\n  token         = state.push('sub_open', 'sub', 1);\n  token.markup  = '~';\n\n  token         = state.push('text', '', 0);\n  token.content = content.replace(UNESCAPE_RE, '$1');\n\n  token         = state.push('sub_close', 'sub', -1);\n  token.markup  = '~';\n\n  state.pos = state.posMax + 1;\n  state.posMax = max;\n  return true;\n}\n\n\nmodule.exports = function sub_plugin(md) {\n  md.inline.ruler.after('emphasis', 'sub', subscript);\n};\n","// Just a shortcut for bulk export\n'use strict';\n\n\nexports.parseLinkLabel       = require('./parse_link_label');\nexports.parseLinkDestination = require('./parse_link_destination');\nexports.parseLinkTitle       = require('./parse_link_title');\n","// Regexps to match html elements\n\n'use strict';\n\nvar attr_name     = '[a-zA-Z_:][a-zA-Z0-9:._-]*';\n\nvar unquoted      = '[^\"\\'=<>`\\\\x00-\\\\x20]+';\nvar single_quoted = \"'[^']*'\";\nvar double_quoted = '\"[^\"]*\"';\n\nvar attr_value  = '(?:' + unquoted + '|' + single_quoted + '|' + double_quoted + ')';\n\nvar attribute   = '(?:\\\\s+' + attr_name + '(?:\\\\s*=\\\\s*' + attr_value + ')?)';\n\nvar open_tag    = '<[A-Za-z][A-Za-z0-9\\\\-]*' + attribute + '*\\\\s*\\\\/?>';\n\nvar close_tag   = '<\\\\/[A-Za-z][A-Za-z0-9\\\\-]*\\\\s*>';\nvar comment     = '<!---->|<!--(?:-?[^>-])(?:-?[^-])*-->';\nvar processing  = '<[?].*?[?]>';\nvar declaration = '<![A-Z]+\\\\s+[^>]*>';\nvar cdata       = '<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>';\n\nvar HTML_TAG_RE = new RegExp('^(?:' + open_tag + '|' + close_tag + '|' + comment +\n                        '|' + processing + '|' + declaration + '|' + cdata + ')');\nvar HTML_OPEN_CLOSE_TAG_RE = new RegExp('^(?:' + open_tag + '|' + close_tag + ')');\n\nmodule.exports.HTML_TAG_RE = HTML_TAG_RE;\nmodule.exports.HTML_OPEN_CLOSE_TAG_RE = HTML_OPEN_CLOSE_TAG_RE;\n","// Process html entity - &#123;, &#xAF;, &quot;, ...\n\n'use strict';\n\nvar entities          = require('../common/entities');\nvar has               = require('../common/utils').has;\nvar isValidEntityCode = require('../common/utils').isValidEntityCode;\nvar fromCodePoint     = require('../common/utils').fromCodePoint;\n\n\nvar DIGITAL_RE = /^&#((?:x[a-f0-9]{1,8}|[0-9]{1,8}));/i;\nvar NAMED_RE   = /^&([a-z][a-z0-9]{1,31});/i;\n\n\nmodule.exports = function entity(state, silent) {\n  var ch, code, match, pos = state.pos, max = state.posMax;\n\n  if (state.src.charCodeAt(pos) !== 0x26/* & */) { return false; }\n\n  if (pos + 1 < max) {\n    ch = state.src.charCodeAt(pos + 1);\n\n    if (ch === 0x23 /* # */) {\n      match = state.src.slice(pos).match(DIGITAL_RE);\n      if (match) {\n        if (!silent) {\n          code = match[1][0].toLowerCase() === 'x' ? parseInt(match[1].slice(1), 16) : parseInt(match[1], 10);\n          state.pending += isValidEntityCode(code) ? fromCodePoint(code) : fromCodePoint(0xFFFD);\n        }\n        state.pos += match[0].length;\n        return true;\n      }\n    } else {\n      match = state.src.slice(pos).match(NAMED_RE);\n      if (match) {\n        if (has(entities, match[1])) {\n          if (!silent) { state.pending += entities[match[1]]; }\n          state.pos += match[0].length;\n          return true;\n        }\n      }\n    }\n  }\n\n  if (!silent) { state.pending += '&'; }\n  state.pos++;\n  return true;\n};\n","// HTML block\n\n'use strict';\n\n\nvar block_names = require('../common/html_blocks');\nvar HTML_OPEN_CLOSE_TAG_RE = require('../common/html_re').HTML_OPEN_CLOSE_TAG_RE;\n\n// An array of opening and corresponding closing sequences for html tags,\n// last argument defines whether it can terminate a paragraph or not\n//\nvar HTML_SEQUENCES = [\n  [ /^<(script|pre|style)(?=(\\s|>|$))/i, /<\\/(script|pre|style)>/i, true ],\n  [ /^<!--/,        /-->/,   true ],\n  [ /^<\\?/,         /\\?>/,   true ],\n  [ /^<![A-Z]/,     />/,     true ],\n  [ /^<!\\[CDATA\\[/, /\\]\\]>/, true ],\n  [ new RegExp('^</?(' + block_names.join('|') + ')(?=(\\\\s|/?>|$))', 'i'), /^$/, true ],\n  [ new RegExp(HTML_OPEN_CLOSE_TAG_RE.source + '\\\\s*$'),  /^$/, false ]\n];\n\n\nmodule.exports = function html_block(state, startLine, endLine, silent) {\n  var i, nextLine, token, lineText,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  if (!state.md.options.html) { return false; }\n\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */) { return false; }\n\n  lineText = state.src.slice(pos, max);\n\n  for (i = 0; i < HTML_SEQUENCES.length; i++) {\n    if (HTML_SEQUENCES[i][0].test(lineText)) { break; }\n  }\n\n  if (i === HTML_SEQUENCES.length) { return false; }\n\n  if (silent) {\n    // true if this sequence can be a terminator, false otherwise\n    return HTML_SEQUENCES[i][2];\n  }\n\n  nextLine = startLine + 1;\n\n  // If we are here - we detected HTML block.\n  // Let's roll down till block end.\n  if (!HTML_SEQUENCES[i][1].test(lineText)) {\n    for (; nextLine < endLine; nextLine++) {\n      if (state.sCount[nextLine] < state.blkIndent) { break; }\n\n      pos = state.bMarks[nextLine] + state.tShift[nextLine];\n      max = state.eMarks[nextLine];\n      lineText = state.src.slice(pos, max);\n\n      if (HTML_SEQUENCES[i][1].test(lineText)) {\n        if (lineText.length !== 0) { nextLine++; }\n        break;\n      }\n    }\n  }\n\n  state.line = nextLine;\n\n  token         = state.push('html_block', '', 0);\n  token.map     = [ startLine, nextLine ];\n  token.content = state.getLines(startLine, nextLine, state.blkIndent, true);\n\n  return true;\n};\n","// Process escaped chars and hardbreaks\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\nvar ESCAPED = [];\n\nfor (var i = 0; i < 256; i++) { ESCAPED.push(0); }\n\n'\\\\!\"#$%&\\'()*+,./:;<=>?@[]^_`{|}~-'\n  .split('').forEach(function (ch) { ESCAPED[ch.charCodeAt(0)] = 1; });\n\n\nmodule.exports = function escape(state, silent) {\n  var ch, pos = state.pos, max = state.posMax;\n\n  if (state.src.charCodeAt(pos) !== 0x5C/* \\ */) { return false; }\n\n  pos++;\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (ch < 256 && ESCAPED[ch] !== 0) {\n      if (!silent) { state.pending += state.src[pos]; }\n      state.pos += 2;\n      return true;\n    }\n\n    if (ch === 0x0A) {\n      if (!silent) {\n        state.push('hardbreak', 'br', 0);\n      }\n\n      pos++;\n      // skip leading whitespaces from next line\n      while (pos < max) {\n        ch = state.src.charCodeAt(pos);\n        if (!isSpace(ch)) { break; }\n        pos++;\n      }\n\n      state.pos = pos;\n      return true;\n    }\n  }\n\n  if (!silent) { state.pending += '\\\\'; }\n  state.pos++;\n  return true;\n};\n","// Core state object\n//\n'use strict';\n\nvar Token = require('../token');\n\n\nfunction StateCore(src, md, env) {\n  this.src = src;\n  this.env = env;\n  this.tokens = [];\n  this.inlineMode = false;\n  this.md = md; // link to parser instance\n}\n\n// re-export Token class to use in core rules\nStateCore.prototype.Token = Token;\n\n\nmodule.exports = StateCore;\n","/** internal\n * class ParserBlock\n *\n * Block-level tokenizer.\n **/\n'use strict';\n\n\nvar Ruler           = require('./ruler');\n\n\nvar _rules = [\n  // First 2 params - rule name & source. Secondary array - list of rules,\n  // which can be terminated by this one.\n  [ 'table',      require('./rules_block/table'),      [ 'paragraph', 'reference' ] ],\n  [ 'code',       require('./rules_block/code') ],\n  [ 'fence',      require('./rules_block/fence'),      [ 'paragraph', 'reference', 'blockquote', 'list' ] ],\n  [ 'blockquote', require('./rules_block/blockquote'), [ 'paragraph', 'reference', 'blockquote', 'list' ] ],\n  [ 'hr',         require('./rules_block/hr'),         [ 'paragraph', 'reference', 'blockquote', 'list' ] ],\n  [ 'list',       require('./rules_block/list'),       [ 'paragraph', 'reference', 'blockquote' ] ],\n  [ 'reference',  require('./rules_block/reference') ],\n  [ 'heading',    require('./rules_block/heading'),    [ 'paragraph', 'reference', 'blockquote' ] ],\n  [ 'lheading',   require('./rules_block/lheading') ],\n  [ 'html_block', require('./rules_block/html_block'), [ 'paragraph', 'reference', 'blockquote' ] ],\n  [ 'paragraph',  require('./rules_block/paragraph') ]\n];\n\n\n/**\n * new ParserBlock()\n **/\nfunction ParserBlock() {\n  /**\n   * ParserBlock#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of block rules.\n   **/\n  this.ruler = new Ruler();\n\n  for (var i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1], { alt: (_rules[i][2] || []).slice() });\n  }\n}\n\n\n// Generate tokens for input range\n//\nParserBlock.prototype.tokenize = function (state, startLine, endLine) {\n  var ok, i,\n      rules = this.ruler.getRules(''),\n      len = rules.length,\n      line = startLine,\n      hasEmptyLines = false,\n      maxNesting = state.md.options.maxNesting;\n\n  while (line < endLine) {\n    state.line = line = state.skipEmptyLines(line);\n    if (line >= endLine) { break; }\n\n    // Termination condition for nested calls.\n    // Nested calls currently used for blockquotes & lists\n    if (state.sCount[line] < state.blkIndent) { break; }\n\n    // If nesting level exceeded - skip tail to the end. That's not ordinary\n    // situation and we should not care about content.\n    if (state.level >= maxNesting) {\n      state.line = endLine;\n      break;\n    }\n\n    // Try all possible rules.\n    // On success, rule should:\n    //\n    // - update `state.line`\n    // - update `state.tokens`\n    // - return true\n\n    for (i = 0; i < len; i++) {\n      ok = rules[i](state, line, endLine, false);\n      if (ok) { break; }\n    }\n\n    // set state.tight if we had an empty line before current tag\n    // i.e. latest empty line should not count\n    state.tight = !hasEmptyLines;\n\n    // paragraph might \"eat\" one newline after it in nested lists\n    if (state.isEmpty(state.line - 1)) {\n      hasEmptyLines = true;\n    }\n\n    line = state.line;\n\n    if (line < endLine && state.isEmpty(line)) {\n      hasEmptyLines = true;\n      line++;\n      state.line = line;\n    }\n  }\n};\n\n\n/**\n * ParserBlock.parse(str, md, env, outTokens)\n *\n * Process input string and push block tokens into `outTokens`\n **/\nParserBlock.prototype.parse = function (src, md, env, outTokens) {\n  var state;\n\n  if (!src) { return; }\n\n  state = new this.State(src, md, env, outTokens);\n\n  this.tokenize(state, state.line, state.lineMax);\n};\n\n\nParserBlock.prototype.State = require('./rules_block/state_block');\n\n\nmodule.exports = ParserBlock;\n","// Process ^superscript^\n\n'use strict';\n\n// same as UNESCAPE_MD_RE plus a space\nvar UNESCAPE_RE = /\\\\([ \\\\!\"#$%&'()*+,.\\/:;<=>?@[\\]^_`{|}~-])/g;\n\nfunction superscript(state, silent) {\n  var found,\n      content,\n      token,\n      max = state.posMax,\n      start = state.pos;\n\n  if (state.src.charCodeAt(start) !== 0x5E/* ^ */) { return false; }\n  if (silent) { return false; } // don't run any pairs in validation mode\n  if (start + 2 >= max) { return false; }\n\n  state.pos = start + 1;\n\n  while (state.pos < max) {\n    if (state.src.charCodeAt(state.pos) === 0x5E/* ^ */) {\n      found = true;\n      break;\n    }\n\n    state.md.inline.skipToken(state);\n  }\n\n  if (!found || start + 1 === state.pos) {\n    state.pos = start;\n    return false;\n  }\n\n  content = state.src.slice(start + 1, state.pos);\n\n  // don't allow unescaped spaces/newlines inside\n  if (content.match(/(^|[^\\\\])(\\\\\\\\)*\\s/)) {\n    state.pos = start;\n    return false;\n  }\n\n  // found!\n  state.posMax = state.pos;\n  state.pos = start + 1;\n\n  // Earlier we checked !silent, but this implementation does not need it\n  token         = state.push('sup_open', 'sup', 1);\n  token.markup  = '^';\n\n  token         = state.push('text', '', 0);\n  token.content = content.replace(UNESCAPE_RE, '$1');\n\n  token         = state.push('sup_close', 'sup', -1);\n  token.markup  = '^';\n\n  state.pos = state.posMax + 1;\n  state.posMax = max;\n  return true;\n}\n\n\nmodule.exports = function sup_plugin(md) {\n  md.inline.ruler.after('emphasis', 'sup', superscript);\n};\n","/**\n * class Renderer\n *\n * Generates HTML from parsed token stream. Each instance has independent\n * copy of rules. Those can be rewritten with ease. Also, you can add new\n * rules if you create plugin and adds new token types.\n **/\n'use strict';\n\n\nvar assign          = require('./common/utils').assign;\nvar unescapeAll     = require('./common/utils').unescapeAll;\nvar escapeHtml      = require('./common/utils').escapeHtml;\n\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar default_rules = {};\n\n\ndefault_rules.code_inline = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx];\n\n  return  '<code' + slf.renderAttrs(token) + '>' +\n          escapeHtml(tokens[idx].content) +\n          '</code>';\n};\n\n\ndefault_rules.code_block = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx];\n\n  return  '<pre' + slf.renderAttrs(token) + '><code>' +\n          escapeHtml(tokens[idx].content) +\n          '</code></pre>\\n';\n};\n\n\ndefault_rules.fence = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx],\n      info = token.info ? unescapeAll(token.info).trim() : '',\n      langName = '',\n      highlighted, i, tmpAttrs, tmpToken;\n\n  if (info) {\n    langName = info.split(/\\s+/g)[0];\n  }\n\n  if (options.highlight) {\n    highlighted = options.highlight(token.content, langName) || escapeHtml(token.content);\n  } else {\n    highlighted = escapeHtml(token.content);\n  }\n\n  if (highlighted.indexOf('<pre') === 0) {\n    return highlighted + '\\n';\n  }\n\n  // If language exists, inject class gently, without modifying original token.\n  // May be, one day we will add .clone() for token and simplify this part, but\n  // now we prefer to keep things local.\n  if (info) {\n    i        = token.attrIndex('class');\n    tmpAttrs = token.attrs ? token.attrs.slice() : [];\n\n    if (i < 0) {\n      tmpAttrs.push([ 'class', options.langPrefix + langName ]);\n    } else {\n      tmpAttrs[i][1] += ' ' + options.langPrefix + langName;\n    }\n\n    // Fake token just to render attributes\n    tmpToken = {\n      attrs: tmpAttrs\n    };\n\n    return  '<pre><code' + slf.renderAttrs(tmpToken) + '>'\n          + highlighted\n          + '</code></pre>\\n';\n  }\n\n\n  return  '<pre><code' + slf.renderAttrs(token) + '>'\n        + highlighted\n        + '</code></pre>\\n';\n};\n\n\ndefault_rules.image = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx];\n\n  // \"alt\" attr MUST be set, even if empty. Because it's mandatory and\n  // should be placed on proper position for tests.\n  //\n  // Replace content with actual value\n\n  token.attrs[token.attrIndex('alt')][1] =\n    slf.renderInlineAsText(token.children, options, env);\n\n  return slf.renderToken(tokens, idx, options);\n};\n\n\ndefault_rules.hardbreak = function (tokens, idx, options /*, env */) {\n  return options.xhtmlOut ? '<br />\\n' : '<br>\\n';\n};\ndefault_rules.softbreak = function (tokens, idx, options /*, env */) {\n  return options.breaks ? (options.xhtmlOut ? '<br />\\n' : '<br>\\n') : '\\n';\n};\n\n\ndefault_rules.text = function (tokens, idx /*, options, env */) {\n  return escapeHtml(tokens[idx].content);\n};\n\n\ndefault_rules.html_block = function (tokens, idx /*, options, env */) {\n  return tokens[idx].content;\n};\ndefault_rules.html_inline = function (tokens, idx /*, options, env */) {\n  return tokens[idx].content;\n};\n\n\n/**\n * new Renderer()\n *\n * Creates new [[Renderer]] instance and fill [[Renderer#rules]] with defaults.\n **/\nfunction Renderer() {\n\n  /**\n   * Renderer#rules -> Object\n   *\n   * Contains render rules for tokens. Can be updated and extended.\n   *\n   * ##### Example\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   *\n   * md.renderer.rules.strong_open  = function () { return '<b>'; };\n   * md.renderer.rules.strong_close = function () { return '</b>'; };\n   *\n   * var result = md.renderInline(...);\n   * ```\n   *\n   * Each rule is called as independent static function with fixed signature:\n   *\n   * ```javascript\n   * function my_token_render(tokens, idx, options, env, renderer) {\n   *   // ...\n   *   return renderedHTML;\n   * }\n   * ```\n   *\n   * See [source code](https://github.com/markdown-it/markdown-it/blob/master/lib/renderer.js)\n   * for more details and examples.\n   **/\n  this.rules = assign({}, default_rules);\n}\n\n\n/**\n * Renderer.renderAttrs(token) -> String\n *\n * Render token attributes to string.\n **/\nRenderer.prototype.renderAttrs = function renderAttrs(token) {\n  var i, l, result;\n\n  if (!token.attrs) { return ''; }\n\n  result = '';\n\n  for (i = 0, l = token.attrs.length; i < l; i++) {\n    result += ' ' + escapeHtml(token.attrs[i][0]) + '=\"' + escapeHtml(token.attrs[i][1]) + '\"';\n  }\n\n  return result;\n};\n\n\n/**\n * Renderer.renderToken(tokens, idx, options) -> String\n * - tokens (Array): list of tokens\n * - idx (Numbed): token index to render\n * - options (Object): params of parser instance\n *\n * Default token renderer. Can be overriden by custom function\n * in [[Renderer#rules]].\n **/\nRenderer.prototype.renderToken = function renderToken(tokens, idx, options) {\n  var nextToken,\n      result = '',\n      needLf = false,\n      token = tokens[idx];\n\n  // Tight list paragraphs\n  if (token.hidden) {\n    return '';\n  }\n\n  // Insert a newline between hidden paragraph and subsequent opening\n  // block-level tag.\n  //\n  // For example, here we should insert a newline before blockquote:\n  //  - a\n  //    >\n  //\n  if (token.block && token.nesting !== -1 && idx && tokens[idx - 1].hidden) {\n    result += '\\n';\n  }\n\n  // Add token name, e.g. `<img`\n  result += (token.nesting === -1 ? '</' : '<') + token.tag;\n\n  // Encode attributes, e.g. `<img src=\"foo\"`\n  result += this.renderAttrs(token);\n\n  // Add a slash for self-closing tags, e.g. `<img src=\"foo\" /`\n  if (token.nesting === 0 && options.xhtmlOut) {\n    result += ' /';\n  }\n\n  // Check if we need to add a newline after this tag\n  if (token.block) {\n    needLf = true;\n\n    if (token.nesting === 1) {\n      if (idx + 1 < tokens.length) {\n        nextToken = tokens[idx + 1];\n\n        if (nextToken.type === 'inline' || nextToken.hidden) {\n          // Block-level tag containing an inline tag.\n          //\n          needLf = false;\n\n        } else if (nextToken.nesting === -1 && nextToken.tag === token.tag) {\n          // Opening tag + closing tag of the same type. E.g. `<li></li>`.\n          //\n          needLf = false;\n        }\n      }\n    }\n  }\n\n  result += needLf ? '>\\n' : '>';\n\n  return result;\n};\n\n\n/**\n * Renderer.renderInline(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to renter\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * The same as [[Renderer.render]], but for single token of `inline` type.\n **/\nRenderer.prototype.renderInline = function (tokens, options, env) {\n  var type,\n      result = '',\n      rules = this.rules;\n\n  for (var i = 0, len = tokens.length; i < len; i++) {\n    type = tokens[i].type;\n\n    if (typeof rules[type] !== 'undefined') {\n      result += rules[type](tokens, i, options, env, this);\n    } else {\n      result += this.renderToken(tokens, i, options);\n    }\n  }\n\n  return result;\n};\n\n\n/** internal\n * Renderer.renderInlineAsText(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to renter\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * Special kludge for image `alt` attributes to conform CommonMark spec.\n * Don't try to use it! Spec requires to show `alt` content with stripped markup,\n * instead of simple escaping.\n **/\nRenderer.prototype.renderInlineAsText = function (tokens, options, env) {\n  var result = '';\n\n  for (var i = 0, len = tokens.length; i < len; i++) {\n    if (tokens[i].type === 'text') {\n      result += tokens[i].content;\n    } else if (tokens[i].type === 'image') {\n      result += this.renderInlineAsText(tokens[i].children, options, env);\n    }\n  }\n\n  return result;\n};\n\n\n/**\n * Renderer.render(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to renter\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * Takes token stream and generates HTML. Probably, you will never need to call\n * this method directly.\n **/\nRenderer.prototype.render = function (tokens, options, env) {\n  var i, len, type,\n      result = '',\n      rules = this.rules;\n\n  for (i = 0, len = tokens.length; i < len; i++) {\n    type = tokens[i].type;\n\n    if (type === 'inline') {\n      result += this.renderInline(tokens[i].children, options, env);\n    } else if (typeof rules[type] !== 'undefined') {\n      result += rules[tokens[i].type](tokens, i, options, env, this);\n    } else {\n      result += this.renderToken(tokens, i, options, env);\n    }\n  }\n\n  return result;\n};\n\nmodule.exports = Renderer;\n","// Parse link title\n//\n'use strict';\n\n\nvar unescapeAll = require('../common/utils').unescapeAll;\n\n\nmodule.exports = function parseLinkTitle(str, pos, max) {\n  var code,\n      marker,\n      lines = 0,\n      start = pos,\n      result = {\n        ok: false,\n        pos: 0,\n        lines: 0,\n        str: ''\n      };\n\n  if (pos >= max) { return result; }\n\n  marker = str.charCodeAt(pos);\n\n  if (marker !== 0x22 /* \" */ && marker !== 0x27 /* ' */ && marker !== 0x28 /* ( */) { return result; }\n\n  pos++;\n\n  // if opening marker is \"(\", switch it to closing marker \")\"\n  if (marker === 0x28) { marker = 0x29; }\n\n  while (pos < max) {\n    code = str.charCodeAt(pos);\n    if (code === marker) {\n      result.pos = pos + 1;\n      result.lines = lines;\n      result.str = unescapeAll(str.slice(start + 1, pos));\n      result.ok = true;\n      return result;\n    } else if (code === 0x0A) {\n      lines++;\n    } else if (code === 0x5C /* \\ */ && pos + 1 < max) {\n      pos++;\n      if (str.charCodeAt(pos) === 0x0A) {\n        lines++;\n      }\n    }\n\n    pos++;\n  }\n\n  return result;\n};\n","// GFM table, non-standard\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nfunction getLine(state, line) {\n  var pos = state.bMarks[line] + state.blkIndent,\n      max = state.eMarks[line];\n\n  return state.src.substr(pos, max - pos);\n}\n\nfunction escapedSplit(str) {\n  var result = [],\n      pos = 0,\n      max = str.length,\n      ch,\n      escapes = 0,\n      lastPos = 0,\n      backTicked = false,\n      lastBackTick = 0;\n\n  ch  = str.charCodeAt(pos);\n\n  while (pos < max) {\n    if (ch === 0x60/* ` */) {\n      if (backTicked) {\n        // make \\` close code sequence, but not open it;\n        // the reason is: `\\` is correct code block\n        backTicked = false;\n        lastBackTick = pos;\n      } else if (escapes % 2 === 0) {\n        backTicked = true;\n        lastBackTick = pos;\n      }\n    } else if (ch === 0x7c/* | */ && (escapes % 2 === 0) && !backTicked) {\n      result.push(str.substring(lastPos, pos));\n      lastPos = pos + 1;\n    }\n\n    if (ch === 0x5c/* \\ */) {\n      escapes++;\n    } else {\n      escapes = 0;\n    }\n\n    pos++;\n\n    // If there was an un-closed backtick, go back to just after\n    // the last backtick, but as if it was a normal character\n    if (pos === max && backTicked) {\n      backTicked = false;\n      pos = lastBackTick + 1;\n    }\n\n    ch = str.charCodeAt(pos);\n  }\n\n  result.push(str.substring(lastPos));\n\n  return result;\n}\n\n\nmodule.exports = function table(state, startLine, endLine, silent) {\n  var ch, lineText, pos, i, nextLine, columns, columnCount, token,\n      aligns, t, tableLines, tbodyLines;\n\n  // should have at least two lines\n  if (startLine + 2 > endLine) { return false; }\n\n  nextLine = startLine + 1;\n\n  if (state.sCount[nextLine] < state.blkIndent) { return false; }\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[nextLine] - state.blkIndent >= 4) { return false; }\n\n  // first character of the second line should be '|', '-', ':',\n  // and no other characters are allowed but spaces;\n  // basically, this is the equivalent of /^[-:|][-:|\\s]*$/ regexp\n\n  pos = state.bMarks[nextLine] + state.tShift[nextLine];\n  if (pos >= state.eMarks[nextLine]) { return false; }\n\n  ch = state.src.charCodeAt(pos++);\n  if (ch !== 0x7C/* | */ && ch !== 0x2D/* - */ && ch !== 0x3A/* : */) { return false; }\n\n  while (pos < state.eMarks[nextLine]) {\n    ch = state.src.charCodeAt(pos);\n\n    if (ch !== 0x7C/* | */ && ch !== 0x2D/* - */ && ch !== 0x3A/* : */ && !isSpace(ch)) { return false; }\n\n    pos++;\n  }\n\n  lineText = getLine(state, startLine + 1);\n\n  columns = lineText.split('|');\n  aligns = [];\n  for (i = 0; i < columns.length; i++) {\n    t = columns[i].trim();\n    if (!t) {\n      // allow empty columns before and after table, but not in between columns;\n      // e.g. allow ` |---| `, disallow ` ---||--- `\n      if (i === 0 || i === columns.length - 1) {\n        continue;\n      } else {\n        return false;\n      }\n    }\n\n    if (!/^:?-+:?$/.test(t)) { return false; }\n    if (t.charCodeAt(t.length - 1) === 0x3A/* : */) {\n      aligns.push(t.charCodeAt(0) === 0x3A/* : */ ? 'center' : 'right');\n    } else if (t.charCodeAt(0) === 0x3A/* : */) {\n      aligns.push('left');\n    } else {\n      aligns.push('');\n    }\n  }\n\n  lineText = getLine(state, startLine).trim();\n  if (lineText.indexOf('|') === -1) { return false; }\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n  columns = escapedSplit(lineText.replace(/^\\||\\|$/g, ''));\n\n  // header row will define an amount of columns in the entire table,\n  // and align row shouldn't be smaller than that (the rest of the rows can)\n  columnCount = columns.length;\n  if (columnCount > aligns.length) { return false; }\n\n  if (silent) { return true; }\n\n  token     = state.push('table_open', 'table', 1);\n  token.map = tableLines = [ startLine, 0 ];\n\n  token     = state.push('thead_open', 'thead', 1);\n  token.map = [ startLine, startLine + 1 ];\n\n  token     = state.push('tr_open', 'tr', 1);\n  token.map = [ startLine, startLine + 1 ];\n\n  for (i = 0; i < columns.length; i++) {\n    token          = state.push('th_open', 'th', 1);\n    token.map      = [ startLine, startLine + 1 ];\n    if (aligns[i]) {\n      token.attrs  = [ [ 'style', 'text-align:' + aligns[i] ] ];\n    }\n\n    token          = state.push('inline', '', 0);\n    token.content  = columns[i].trim();\n    token.map      = [ startLine, startLine + 1 ];\n    token.children = [];\n\n    token          = state.push('th_close', 'th', -1);\n  }\n\n  token     = state.push('tr_close', 'tr', -1);\n  token     = state.push('thead_close', 'thead', -1);\n\n  token     = state.push('tbody_open', 'tbody', 1);\n  token.map = tbodyLines = [ startLine + 2, 0 ];\n\n  for (nextLine = startLine + 2; nextLine < endLine; nextLine++) {\n    if (state.sCount[nextLine] < state.blkIndent) { break; }\n\n    lineText = getLine(state, nextLine).trim();\n    if (lineText.indexOf('|') === -1) { break; }\n    if (state.sCount[nextLine] - state.blkIndent >= 4) { break; }\n    columns = escapedSplit(lineText.replace(/^\\||\\|$/g, ''));\n\n    token = state.push('tr_open', 'tr', 1);\n    for (i = 0; i < columnCount; i++) {\n      token          = state.push('td_open', 'td', 1);\n      if (aligns[i]) {\n        token.attrs  = [ [ 'style', 'text-align:' + aligns[i] ] ];\n      }\n\n      token          = state.push('inline', '', 0);\n      token.content  = columns[i] ? columns[i].trim() : '';\n      token.children = [];\n\n      token          = state.push('td_close', 'td', -1);\n    }\n    token = state.push('tr_close', 'tr', -1);\n  }\n  token = state.push('tbody_close', 'tbody', -1);\n  token = state.push('table_close', 'table', -1);\n\n  tableLines[1] = tbodyLines[1] = nextLine;\n  state.line = nextLine;\n  return true;\n};\n","// Process ![test]( x =100x200)\n//                    ^^^^^^^^ this size specification\n\n'use strict';\n\nvar sizeOf = require('./imsize');\n\nvar parseImageSize = require('./helpers/parse_image_size');\n\nfunction image_with_size(md, options) {\n  return function(state, silent) {\n    var attrs,\n        code,\n        label,\n        labelEnd,\n        labelStart,\n        pos,\n        ref,\n        res,\n        title,\n        width = '',\n        height = '',\n        token,\n        tokens,\n        start,\n        href = '',\n        oldPos = state.pos,\n        max = state.posMax;\n\n    if (state.src.charCodeAt(state.pos) !== 0x21/* ! */) { return false; }\n    if (state.src.charCodeAt(state.pos + 1) !== 0x5B/* [ */) { return false; }\n\n    labelStart = state.pos + 2;\n    labelEnd = md.helpers.parseLinkLabel(state, state.pos + 1, false);\n\n    // parser failed to find ']', so it's not a valid link\n    if (labelEnd < 0) { return false; }\n\n    pos = labelEnd + 1;\n    if (pos < max && state.src.charCodeAt(pos) === 0x28/* ( */) {\n\n      //\n      // Inline link\n      //\n\n      // [link](  <href>  \"title\"  )\n      //        ^^ skipping these spaces\n      pos++;\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos);\n        if (code !== 0x20 && code !== 0x0A) { break; }\n      }\n      if (pos >= max) { return false; }\n\n      // [link](  <href>  \"title\"  )\n      //          ^^^^^^ parsing link destination\n      start = pos;\n      res = md.helpers.parseLinkDestination(state.src, pos, state.posMax);\n      if (res.ok) {\n        href = state.md.normalizeLink(res.str);\n        if (state.md.validateLink(href)) {\n          pos = res.pos;\n        } else {\n          href = '';\n        }\n      }\n\n      // [link](  <href>  \"title\"  )\n      //                ^^ skipping these spaces\n      start = pos;\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos);\n        if (code !== 0x20 && code !== 0x0A) { break; }\n      }\n\n      // [link](  <href>  \"title\"  )\n      //                  ^^^^^^^ parsing link title\n      res = md.helpers.parseLinkTitle(state.src, pos, state.posMax);\n      if (pos < max && start !== pos && res.ok) {\n        title = res.str;\n        pos = res.pos;\n\n        // [link](  <href>  \"title\"  )\n        //                         ^^ skipping these spaces\n        for (; pos < max; pos++) {\n          code = state.src.charCodeAt(pos);\n          if (code !== 0x20 && code !== 0x0A) { break; }\n        }\n      } else {\n        title = '';\n      }\n\n      // [link](  <href>  \"title\" =WxH  )\n      //                          ^^^^ parsing image size\n      if (pos - 1 >= 0) {\n        code = state.src.charCodeAt(pos - 1);\n\n        // there must be at least one white spaces\n        // between previous field and the size\n        if (code === 0x20) {\n          res = parseImageSize(state.src, pos, state.posMax);\n          if (res.ok) {\n            width = res.width;\n            height = res.height;\n            pos = res.pos;\n\n            // [link](  <href>  \"title\" =WxH  )\n            //                              ^^ skipping these spaces\n            for (; pos < max; pos++) {\n              code = state.src.charCodeAt(pos);\n              if (code !== 0x20 && code !== 0x0A) { break; }\n            }\n          }\n        }\n      }\n\n      if (pos >= max || state.src.charCodeAt(pos) !== 0x29/* ) */) {\n        state.pos = oldPos;\n        return false;\n      }\n      pos++;\n\n    } else {\n      //\n      // Link reference\n      //\n      if (typeof state.env.references === 'undefined') { return false; }\n\n      // [foo]  [bar]\n      //      ^^ optional whitespace (can include newlines)\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos);\n        if (code !== 0x20 && code !== 0x0A) { break; }\n      }\n\n      if (pos < max && state.src.charCodeAt(pos) === 0x5B/* [ */) {\n        start = pos + 1;\n        pos = md.helpers.parseLinkLabel(state, pos);\n        if (pos >= 0) {\n          label = state.src.slice(start, pos++);\n        } else {\n          pos = labelEnd + 1;\n        }\n      } else {\n        pos = labelEnd + 1;\n      }\n\n      // covers label === '' and label === undefined\n      // (collapsed reference link and shortcut reference link respectively)\n      if (!label) { label = state.src.slice(labelStart, labelEnd); }\n\n      ref = state.env.references[md.utils.normalizeReference(label)];\n      if (!ref) {\n        state.pos = oldPos;\n        return false;\n      }\n      href = ref.href;\n      title = ref.title;\n    }\n\n    //\n    // We found the end of the link, and know for a fact it's a valid link;\n    // so all that's left to do is to call tokenizer.\n    //\n    if (!silent) {\n      state.pos = labelStart;\n      state.posMax = labelEnd;\n\n      var newState = new state.md.inline.State(\n        state.src.slice(labelStart, labelEnd),\n        state.md,\n        state.env,\n        tokens = []\n      );\n      newState.md.inline.tokenize(newState);\n\n      // if 'autofill' option is specified\n      // and width/height are both blank,\n      // they are filled automatically\n      if (options) {\n        if (options.autofill && width === '' && height === '') {\n          try {\n            var dimensions = sizeOf(href);\n            width = dimensions.width;\n            height = dimensions.height;\n          } catch (e) { }\n        }\n      }\n\n      token          = state.push('image', 'img', 0);\n      token.attrs    = attrs = [ [ 'src', href ],\n                                 [ 'alt', '' ] ];\n      token.children = tokens;\n      if (title) {\n        attrs.push([ 'title', title ]);\n      }\n\n      if (width !== '') {\n        attrs.push([ 'width', width ]);\n      }\n\n      if (height !== '') {\n        attrs.push([ 'height', height ]);\n      }\n    }\n\n    state.pos = pos;\n    state.posMax = max;\n    return true;\n  };\n}\n\nmodule.exports = function imsize_plugin(md, options) {\n  md.inline.ruler.before('emphasis', 'image', image_with_size(md, options));\n};\n","// Parser state class\n\n'use strict';\n\nvar Token = require('../token');\nvar isSpace = require('../common/utils').isSpace;\n\n\nfunction StateBlock(src, md, env, tokens) {\n  var ch, s, start, pos, len, indent, offset, indent_found;\n\n  this.src = src;\n\n  // link to parser instance\n  this.md     = md;\n\n  this.env = env;\n\n  //\n  // Internal state vartiables\n  //\n\n  this.tokens = tokens;\n\n  this.bMarks = [];  // line begin offsets for fast jumps\n  this.eMarks = [];  // line end offsets for fast jumps\n  this.tShift = [];  // offsets of the first non-space characters (tabs not expanded)\n  this.sCount = [];  // indents for each line (tabs expanded)\n\n  // An amount of virtual spaces (tabs expanded) between beginning\n  // of each line (bMarks) and real beginning of that line.\n  //\n  // It exists only as a hack because blockquotes override bMarks\n  // losing information in the process.\n  //\n  // It's used only when expanding tabs, you can think about it as\n  // an initial tab length, e.g. bsCount=21 applied to string `\\t123`\n  // means first tab should be expanded to 4-21%4 === 3 spaces.\n  //\n  this.bsCount = [];\n\n  // block parser variables\n  this.blkIndent  = 0; // required block content indent\n                       // (for example, if we are in list)\n  this.line       = 0; // line index in src\n  this.lineMax    = 0; // lines count\n  this.tight      = false;  // loose/tight mode for lists\n  this.ddIndent   = -1; // indent of the current dd block (-1 if there isn't any)\n\n  // can be 'blockquote', 'list', 'root', 'paragraph' or 'reference'\n  // used in lists to determine if they interrupt a paragraph\n  this.parentType = 'root';\n\n  this.level = 0;\n\n  // renderer\n  this.result = '';\n\n  // Create caches\n  // Generate markers.\n  s = this.src;\n  indent_found = false;\n\n  for (start = pos = indent = offset = 0, len = s.length; pos < len; pos++) {\n    ch = s.charCodeAt(pos);\n\n    if (!indent_found) {\n      if (isSpace(ch)) {\n        indent++;\n\n        if (ch === 0x09) {\n          offset += 4 - offset % 4;\n        } else {\n          offset++;\n        }\n        continue;\n      } else {\n        indent_found = true;\n      }\n    }\n\n    if (ch === 0x0A || pos === len - 1) {\n      if (ch !== 0x0A) { pos++; }\n      this.bMarks.push(start);\n      this.eMarks.push(pos);\n      this.tShift.push(indent);\n      this.sCount.push(offset);\n      this.bsCount.push(0);\n\n      indent_found = false;\n      indent = 0;\n      offset = 0;\n      start = pos + 1;\n    }\n  }\n\n  // Push fake entry to simplify cache bounds checks\n  this.bMarks.push(s.length);\n  this.eMarks.push(s.length);\n  this.tShift.push(0);\n  this.sCount.push(0);\n  this.bsCount.push(0);\n\n  this.lineMax = this.bMarks.length - 1; // don't count last fake line\n}\n\n// Push new token to \"stream\".\n//\nStateBlock.prototype.push = function (type, tag, nesting) {\n  var token = new Token(type, tag, nesting);\n  token.block = true;\n\n  if (nesting < 0) { this.level--; }\n  token.level = this.level;\n  if (nesting > 0) { this.level++; }\n\n  this.tokens.push(token);\n  return token;\n};\n\nStateBlock.prototype.isEmpty = function isEmpty(line) {\n  return this.bMarks[line] + this.tShift[line] >= this.eMarks[line];\n};\n\nStateBlock.prototype.skipEmptyLines = function skipEmptyLines(from) {\n  for (var max = this.lineMax; from < max; from++) {\n    if (this.bMarks[from] + this.tShift[from] < this.eMarks[from]) {\n      break;\n    }\n  }\n  return from;\n};\n\n// Skip spaces from given position.\nStateBlock.prototype.skipSpaces = function skipSpaces(pos) {\n  var ch;\n\n  for (var max = this.src.length; pos < max; pos++) {\n    ch = this.src.charCodeAt(pos);\n    if (!isSpace(ch)) { break; }\n  }\n  return pos;\n};\n\n// Skip spaces from given position in reverse.\nStateBlock.prototype.skipSpacesBack = function skipSpacesBack(pos, min) {\n  if (pos <= min) { return pos; }\n\n  while (pos > min) {\n    if (!isSpace(this.src.charCodeAt(--pos))) { return pos + 1; }\n  }\n  return pos;\n};\n\n// Skip char codes from given position\nStateBlock.prototype.skipChars = function skipChars(pos, code) {\n  for (var max = this.src.length; pos < max; pos++) {\n    if (this.src.charCodeAt(pos) !== code) { break; }\n  }\n  return pos;\n};\n\n// Skip char codes reverse from given position - 1\nStateBlock.prototype.skipCharsBack = function skipCharsBack(pos, code, min) {\n  if (pos <= min) { return pos; }\n\n  while (pos > min) {\n    if (code !== this.src.charCodeAt(--pos)) { return pos + 1; }\n  }\n  return pos;\n};\n\n// cut lines range from source.\nStateBlock.prototype.getLines = function getLines(begin, end, indent, keepLastLF) {\n  var i, lineIndent, ch, first, last, queue, lineStart,\n      line = begin;\n\n  if (begin >= end) {\n    return '';\n  }\n\n  queue = new Array(end - begin);\n\n  for (i = 0; line < end; line++, i++) {\n    lineIndent = 0;\n    lineStart = first = this.bMarks[line];\n\n    if (line + 1 < end || keepLastLF) {\n      // No need for bounds check because we have fake entry on tail.\n      last = this.eMarks[line] + 1;\n    } else {\n      last = this.eMarks[line];\n    }\n\n    while (first < last && lineIndent < indent) {\n      ch = this.src.charCodeAt(first);\n\n      if (isSpace(ch)) {\n        if (ch === 0x09) {\n          lineIndent += 4 - (lineIndent + this.bsCount[line]) % 4;\n        } else {\n          lineIndent++;\n        }\n      } else if (first - lineStart < this.tShift[line]) {\n        // patched tShift masked characters to look like spaces (blockquotes, list markers)\n        lineIndent++;\n      } else {\n        break;\n      }\n\n      first++;\n    }\n\n    if (lineIndent > indent) {\n      // partially expanding tabs in code blocks, e.g '\\t\\tfoobar'\n      // with indent=2 becomes '  \\tfoobar'\n      queue[i] = new Array(lineIndent - indent + 1).join(' ') + this.src.slice(first, last);\n    } else {\n      queue[i] = this.src.slice(first, last);\n    }\n  }\n\n  return queue.join('');\n};\n\n// re-export Token class to use in block rules\nStateBlock.prototype.Token = Token;\n\n\nmodule.exports = StateBlock;\n","// For each opening emphasis-like marker find a matching closing one\n//\n'use strict';\n\n\nmodule.exports = function link_pairs(state) {\n  var i, j, lastDelim, currDelim,\n      delimiters = state.delimiters,\n      max = state.delimiters.length;\n\n  for (i = 0; i < max; i++) {\n    lastDelim = delimiters[i];\n\n    if (!lastDelim.close) { continue; }\n\n    j = i - lastDelim.jump - 1;\n\n    while (j >= 0) {\n      currDelim = delimiters[j];\n\n      if (currDelim.open &&\n          currDelim.marker === lastDelim.marker &&\n          currDelim.end < 0 &&\n          currDelim.level === lastDelim.level) {\n\n        // typeofs are for backward compatibility with plugins\n        var odd_match = (currDelim.close || lastDelim.open) &&\n                        typeof currDelim.length !== 'undefined' &&\n                        typeof lastDelim.length !== 'undefined' &&\n                        (currDelim.length + lastDelim.length) % 3 === 0;\n\n        if (!odd_match) {\n          lastDelim.jump = i - j;\n          lastDelim.open = false;\n          currDelim.end  = i;\n          currDelim.jump = 0;\n          break;\n        }\n      }\n\n      j -= currDelim.jump + 1;\n    }\n  }\n};\n","'use strict';\n\nvar fs   = require('fs');\nvar path = require('path');\n\nvar detector = require('./detector');\nvar handlers = {};\nvar types = require('./types');\n\ntypes.forEach(function(type) {\n  handlers[type] = require('./types/' + type);\n});\n\nvar MaxBufferSize = 128 * 1024;\n\nfunction lookup(buffer, filepath) {\n  var type = detector(buffer, filepath);\n\n  if (type in handlers) {\n    var size = handlers[type].calculate(buffer, filepath);\n    if (size !== false) {\n      size.type = type;\n      return size;\n    }\n  }\n\n  throw new TypeError('Unsupported file type');\n}\n\nfunction asyncFileToBuffer(filepath, callback) {\n  fs.open(filepath, 'r', function(err0, descriptor) {\n    if (err0) {\n      return callback(err0);\n    }\n\n    var size = fs.fstatSync(descriptor).size;\n    var bufferSize = Math.min(size, MaxBufferSize);\n    var buffer = new Buffer(bufferSize);\n    fs.read(descriptor, buffer, 0, bufferSize, 0, function(err1) {\n      if (err1) {\n        return callback(err1);\n      }\n\n      fs.close(descriptor, function(err2) {\n        callback(err2, buffer);\n      });\n    });\n  });\n}\n\nfunction syncFileToBuffer(filepath) {\n  var descriptor = fs.openSync(filepath, 'r');\n  var size = fs.fstatSync(descriptor).size;\n  var bufferSize = Math.min(size, MaxBufferSize);\n  var buffer = new Buffer(bufferSize);\n  fs.readSync(descriptor, buffer, 0, bufferSize, 0);\n  fs.closeSync(descriptor);\n  return buffer;\n}\n\n/**\n * Returns the dimensions of the image file\n * @param[in] input: input image path\n * @param[in] callback(option): if specified, gets size async.\n */\nmodule.exports = function(input, callback) {\n  if (typeof input !== 'string') {\n    throw new TypeError('Input must be file name');\n  }\n\n  var filepath = path.resolve(input);\n\n  if (typeof callback === 'function') {\n    asyncFileToBuffer(filepath, function(err, buffer) {\n      if (err) {\n        return callback(err);\n      }\n\n      var dimensions;\n      try {\n        dimensions = lookup(buffer, filepath);\n      } catch (e) {\n        err = e;\n      }\n      callback(err, dimensions);\n    });\n  } else {\n    var buffer = syncFileToBuffer(filepath);\n    return lookup(buffer, filepath);\n  }\n};\n","// markdown-it default options\n\n'use strict';\n\n\nmodule.exports = {\n  options: {\n    html:         false,        // Enable HTML tags in source\n    xhtmlOut:     false,        // Use '/' to close single tags (<br />)\n    breaks:       false,        // Convert '\\n' in paragraphs into <br>\n    langPrefix:   'language-',  // CSS language prefix for fenced blocks\n    linkify:      false,        // autoconvert URL-like texts to links\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer:  false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    maxNesting:   100            // Internal protection, recursion limit\n  },\n\n  components: {\n\n    core: {},\n    block: {},\n    inline: {}\n  }\n};\n","// ~~strike through~~\n//\n'use strict';\n\n\n// Insert each marker as a separate text token, and add it to delimiter list\n//\nmodule.exports.tokenize = function strikethrough(state, silent) {\n  var i, scanned, token, len, ch,\n      start = state.pos,\n      marker = state.src.charCodeAt(start);\n\n  if (silent) { return false; }\n\n  if (marker !== 0x7E/* ~ */) { return false; }\n\n  scanned = state.scanDelims(state.pos, true);\n  len = scanned.length;\n  ch = String.fromCharCode(marker);\n\n  if (len < 2) { return false; }\n\n  if (len % 2) {\n    token         = state.push('text', '', 0);\n    token.content = ch;\n    len--;\n  }\n\n  for (i = 0; i < len; i += 2) {\n    token         = state.push('text', '', 0);\n    token.content = ch + ch;\n\n    state.delimiters.push({\n      marker: marker,\n      jump:   i,\n      token:  state.tokens.length - 1,\n      level:  state.level,\n      end:    -1,\n      open:   scanned.can_open,\n      close:  scanned.can_close\n    });\n  }\n\n  state.pos += scanned.length;\n\n  return true;\n};\n\n\n// Walk through delimiter list and replace text tokens with tags\n//\nmodule.exports.postProcess = function strikethrough(state) {\n  var i, j,\n      startDelim,\n      endDelim,\n      token,\n      loneMarkers = [],\n      delimiters = state.delimiters,\n      max = state.delimiters.length;\n\n  for (i = 0; i < max; i++) {\n    startDelim = delimiters[i];\n\n    if (startDelim.marker !== 0x7E/* ~ */) {\n      continue;\n    }\n\n    if (startDelim.end === -1) {\n      continue;\n    }\n\n    endDelim = delimiters[startDelim.end];\n\n    token         = state.tokens[startDelim.token];\n    token.type    = 's_open';\n    token.tag     = 's';\n    token.nesting = 1;\n    token.markup  = '~~';\n    token.content = '';\n\n    token         = state.tokens[endDelim.token];\n    token.type    = 's_close';\n    token.tag     = 's';\n    token.nesting = -1;\n    token.markup  = '~~';\n    token.content = '';\n\n    if (state.tokens[endDelim.token - 1].type === 'text' &&\n        state.tokens[endDelim.token - 1].content === '~') {\n\n      loneMarkers.push(endDelim.token - 1);\n    }\n  }\n\n  // If a marker sequence has an odd number of characters, it's splitted\n  // like this: `~~~~~` -> `~` + `~~` + `~~`, leaving one marker at the\n  // start of the sequence.\n  //\n  // So, we have to move all those markers after subsequent s_close tags.\n  //\n  while (loneMarkers.length) {\n    i = loneMarkers.pop();\n    j = i + 1;\n\n    while (j < state.tokens.length && state.tokens[j].type === 's_close') {\n      j++;\n    }\n\n    j--;\n\n    if (i !== j) {\n      token = state.tokens[j];\n      state.tokens[j] = state.tokens[i];\n      state.tokens[i] = token;\n    }\n  }\n};\n","// Process ![image](<src> \"title\")\n\n'use strict';\n\nvar normalizeReference   = require('../common/utils').normalizeReference;\nvar isSpace              = require('../common/utils').isSpace;\n\n\nmodule.exports = function image(state, silent) {\n  var attrs,\n      code,\n      content,\n      label,\n      labelEnd,\n      labelStart,\n      pos,\n      ref,\n      res,\n      title,\n      token,\n      tokens,\n      start,\n      href = '',\n      oldPos = state.pos,\n      max = state.posMax;\n\n  if (state.src.charCodeAt(state.pos) !== 0x21/* ! */) { return false; }\n  if (state.src.charCodeAt(state.pos + 1) !== 0x5B/* [ */) { return false; }\n\n  labelStart = state.pos + 2;\n  labelEnd = state.md.helpers.parseLinkLabel(state, state.pos + 1, false);\n\n  // parser failed to find ']', so it's not a valid link\n  if (labelEnd < 0) { return false; }\n\n  pos = labelEnd + 1;\n  if (pos < max && state.src.charCodeAt(pos) === 0x28/* ( */) {\n    //\n    // Inline link\n    //\n\n    // [link](  <href>  \"title\"  )\n    //        ^^ skipping these spaces\n    pos++;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!isSpace(code) && code !== 0x0A) { break; }\n    }\n    if (pos >= max) { return false; }\n\n    // [link](  <href>  \"title\"  )\n    //          ^^^^^^ parsing link destination\n    start = pos;\n    res = state.md.helpers.parseLinkDestination(state.src, pos, state.posMax);\n    if (res.ok) {\n      href = state.md.normalizeLink(res.str);\n      if (state.md.validateLink(href)) {\n        pos = res.pos;\n      } else {\n        href = '';\n      }\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                ^^ skipping these spaces\n    start = pos;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!isSpace(code) && code !== 0x0A) { break; }\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                  ^^^^^^^ parsing link title\n    res = state.md.helpers.parseLinkTitle(state.src, pos, state.posMax);\n    if (pos < max && start !== pos && res.ok) {\n      title = res.str;\n      pos = res.pos;\n\n      // [link](  <href>  \"title\"  )\n      //                         ^^ skipping these spaces\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos);\n        if (!isSpace(code) && code !== 0x0A) { break; }\n      }\n    } else {\n      title = '';\n    }\n\n    if (pos >= max || state.src.charCodeAt(pos) !== 0x29/* ) */) {\n      state.pos = oldPos;\n      return false;\n    }\n    pos++;\n  } else {\n    //\n    // Link reference\n    //\n    if (typeof state.env.references === 'undefined') { return false; }\n\n    if (pos < max && state.src.charCodeAt(pos) === 0x5B/* [ */) {\n      start = pos + 1;\n      pos = state.md.helpers.parseLinkLabel(state, pos);\n      if (pos >= 0) {\n        label = state.src.slice(start, pos++);\n      } else {\n        pos = labelEnd + 1;\n      }\n    } else {\n      pos = labelEnd + 1;\n    }\n\n    // covers label === '' and label === undefined\n    // (collapsed reference link and shortcut reference link respectively)\n    if (!label) { label = state.src.slice(labelStart, labelEnd); }\n\n    ref = state.env.references[normalizeReference(label)];\n    if (!ref) {\n      state.pos = oldPos;\n      return false;\n    }\n    href = ref.href;\n    title = ref.title;\n  }\n\n  //\n  // We found the end of the link, and know for a fact it's a valid link;\n  // so all that's left to do is to call tokenizer.\n  //\n  if (!silent) {\n    content = state.src.slice(labelStart, labelEnd);\n\n    state.md.inline.parse(\n      content,\n      state.md,\n      state.env,\n      tokens = []\n    );\n\n    token          = state.push('image', 'img', 0);\n    token.attrs    = attrs = [ [ 'src', href ], [ 'alt', '' ] ];\n    token.children = tokens;\n    token.content  = content;\n\n    if (title) {\n      attrs.push([ 'title', title ]);\n    }\n  }\n\n  state.pos = pos;\n  state.posMax = max;\n  return true;\n};\n","// Replace link-like texts with link nodes.\n//\n// Currently restricted by `md.validateLink()` to http/https/ftp\n//\n'use strict';\n\n\nvar arrayReplaceAt = require('../common/utils').arrayReplaceAt;\n\n\nfunction isLinkOpen(str) {\n  return /^<a[>\\s]/i.test(str);\n}\nfunction isLinkClose(str) {\n  return /^<\\/a\\s*>/i.test(str);\n}\n\n\nmodule.exports = function linkify(state) {\n  var i, j, l, tokens, token, currentToken, nodes, ln, text, pos, lastPos,\n      level, htmlLinkLevel, url, fullUrl, urlText,\n      blockTokens = state.tokens,\n      links;\n\n  if (!state.md.options.linkify) { return; }\n\n  for (j = 0, l = blockTokens.length; j < l; j++) {\n    if (blockTokens[j].type !== 'inline' ||\n        !state.md.linkify.pretest(blockTokens[j].content)) {\n      continue;\n    }\n\n    tokens = blockTokens[j].children;\n\n    htmlLinkLevel = 0;\n\n    // We scan from the end, to keep position when new tags added.\n    // Use reversed logic in links start/end match\n    for (i = tokens.length - 1; i >= 0; i--) {\n      currentToken = tokens[i];\n\n      // Skip content of markdown links\n      if (currentToken.type === 'link_close') {\n        i--;\n        while (tokens[i].level !== currentToken.level && tokens[i].type !== 'link_open') {\n          i--;\n        }\n        continue;\n      }\n\n      // Skip content of html tag links\n      if (currentToken.type === 'html_inline') {\n        if (isLinkOpen(currentToken.content) && htmlLinkLevel > 0) {\n          htmlLinkLevel--;\n        }\n        if (isLinkClose(currentToken.content)) {\n          htmlLinkLevel++;\n        }\n      }\n      if (htmlLinkLevel > 0) { continue; }\n\n      if (currentToken.type === 'text' && state.md.linkify.test(currentToken.content)) {\n\n        text = currentToken.content;\n        links = state.md.linkify.match(text);\n\n        // Now split string to nodes\n        nodes = [];\n        level = currentToken.level;\n        lastPos = 0;\n\n        for (ln = 0; ln < links.length; ln++) {\n\n          url = links[ln].url;\n          fullUrl = state.md.normalizeLink(url);\n          if (!state.md.validateLink(fullUrl)) { continue; }\n\n          urlText = links[ln].text;\n\n          // Linkifier might send raw hostnames like \"example.com\", where url\n          // starts with domain name. So we prepend http:// in those cases,\n          // and remove it afterwards.\n          //\n          if (!links[ln].schema) {\n            urlText = state.md.normalizeLinkText('http://' + urlText).replace(/^http:\\/\\//, '');\n          } else if (links[ln].schema === 'mailto:' && !/^mailto:/i.test(urlText)) {\n            urlText = state.md.normalizeLinkText('mailto:' + urlText).replace(/^mailto:/, '');\n          } else {\n            urlText = state.md.normalizeLinkText(urlText);\n          }\n\n          pos = links[ln].index;\n\n          if (pos > lastPos) {\n            token         = new state.Token('text', '', 0);\n            token.content = text.slice(lastPos, pos);\n            token.level   = level;\n            nodes.push(token);\n          }\n\n          token         = new state.Token('link_open', 'a', 1);\n          token.attrs   = [ [ 'href', fullUrl ] ];\n          token.level   = level++;\n          token.markup  = 'linkify';\n          token.info    = 'auto';\n          nodes.push(token);\n\n          token         = new state.Token('text', '', 0);\n          token.content = urlText;\n          token.level   = level;\n          nodes.push(token);\n\n          token         = new state.Token('link_close', 'a', -1);\n          token.level   = --level;\n          token.markup  = 'linkify';\n          token.info    = 'auto';\n          nodes.push(token);\n\n          lastPos = links[ln].lastIndex;\n        }\n        if (lastPos < text.length) {\n          token         = new state.Token('text', '', 0);\n          token.content = text.slice(lastPos);\n          token.level   = level;\n          nodes.push(token);\n        }\n\n        // replace current node\n        blockTokens[j].children = tokens = arrayReplaceAt(tokens, i, nodes);\n      }\n    }\n  }\n};\n","// Code block (4 spaces padded)\n\n'use strict';\n\n\nmodule.exports = function code(state, startLine, endLine/*, silent*/) {\n  var nextLine, last, token;\n\n  if (state.sCount[startLine] - state.blkIndent < 4) { return false; }\n\n  last = nextLine = startLine + 1;\n\n  while (nextLine < endLine) {\n    if (state.isEmpty(nextLine)) {\n      nextLine++;\n      continue;\n    }\n\n    if (state.sCount[nextLine] - state.blkIndent >= 4) {\n      nextLine++;\n      last = nextLine;\n      continue;\n    }\n    break;\n  }\n\n  state.line = last;\n\n  token         = state.push('code_block', 'code', 0);\n  token.content = state.getLines(startLine, last, 4 + state.blkIndent, true);\n  token.map     = [ startLine, state.line ];\n\n  return true;\n};\n","'use strict';\n\nmodule.exports = function inline(state) {\n  var tokens = state.tokens, tok, i, l;\n\n  // Parse inlines\n  for (i = 0, l = tokens.length; i < l; i++) {\n    tok = tokens[i];\n    if (tok.type === 'inline') {\n      state.md.inline.parse(tok.content, state.md, state.env, tok.children);\n    }\n  }\n};\n","/** internal\n * class Core\n *\n * Top-level rules executor. Glues block/inline parsers and does intermediate\n * transformations.\n **/\n'use strict';\n\n\nvar Ruler  = require('./ruler');\n\n\nvar _rules = [\n  [ 'normalize',      require('./rules_core/normalize')      ],\n  [ 'block',          require('./rules_core/block')          ],\n  [ 'inline',         require('./rules_core/inline')         ],\n  [ 'linkify',        require('./rules_core/linkify')        ],\n  [ 'replacements',   require('./rules_core/replacements')   ],\n  [ 'smartquotes',    require('./rules_core/smartquotes')    ]\n];\n\n\n/**\n * new Core()\n **/\nfunction Core() {\n  /**\n   * Core#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of core rules.\n   **/\n  this.ruler = new Ruler();\n\n  for (var i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1]);\n  }\n}\n\n\n/**\n * Core.process(state)\n *\n * Executes core chain rules.\n **/\nCore.prototype.process = function (state) {\n  var i, l, rules;\n\n  rules = this.ruler.getRules('');\n\n  for (i = 0, l = rules.length; i < l; i++) {\n    rules[i](state);\n  }\n};\n\nCore.prototype.State = require('./rules_core/state_core');\n\n\nmodule.exports = Core;\n","// Emoticons -> Emoji mapping.\n//\n// (!) Some patterns skipped, to avoid collisions\n// without increase matcher complicity. Than can change in future.\n//\n// Places to look for more emoticons info:\n//\n// - http://en.wikipedia.org/wiki/List_of_emoticons#Western\n// - https://github.com/wooorm/emoticon/blob/master/Support.md\n// - http://factoryjoe.com/projects/emoticons/\n//\n'use strict';\n\nmodule.exports = {\n  angry:            [ '>:(', '>:-(' ],\n  blush:            [ ':\")', ':-\")' ],\n  broken_heart:     [ '</3', '<\\\\3' ],\n  // :\\ and :-\\ not used because of conflict with markdown escaping\n  confused:         [ ':/', ':-/' ], // twemoji shows question\n  cry:              [ \":'(\", \":'-(\", ':,(', ':,-(' ],\n  frowning:         [ ':(', ':-(' ],\n  heart:            [ '<3' ],\n  imp:              [ ']:(', ']:-(' ],\n  innocent:         [ 'o:)', 'O:)', 'o:-)', 'O:-)', '0:)', '0:-)' ],\n  joy:              [ \":')\", \":'-)\", ':,)', ':,-)', \":'D\", \":'-D\", ':,D', ':,-D' ],\n  kissing:          [ ':*', ':-*' ],\n  laughing:         [ 'x-)', 'X-)' ],\n  neutral_face:     [ ':|', ':-|' ],\n  open_mouth:       [ ':o', ':-o', ':O', ':-O' ],\n  rage:             [ ':@', ':-@' ],\n  smile:            [ ':D', ':-D' ],\n  smiley:           [ ':)', ':-)' ],\n  smiling_imp:      [ ']:)', ']:-)' ],\n  sob:              [ \":,'(\", \":,'-(\", ';(', ';-(' ],\n  stuck_out_tongue: [ ':P', ':-P' ],\n  sunglasses:       [ '8-)', 'B-)' ],\n  sweat:            [ ',:(', ',:-(' ],\n  sweat_smile:      [ ',:)', ',:-)' ],\n  unamused:         [ ':s', ':-S', ':z', ':-Z', ':$', ':-$' ],\n  wink:             [ ';)', ';-)' ]\n};\n","'use strict';\n\nmodule.exports = [\n  'bmp',\n  'gif',\n  'jpg',\n  'png',\n  'tiff',\n];\n","// Convert straight quotation marks to typographic ones\n//\n'use strict';\n\n\nvar isWhiteSpace   = require('../common/utils').isWhiteSpace;\nvar isPunctChar    = require('../common/utils').isPunctChar;\nvar isMdAsciiPunct = require('../common/utils').isMdAsciiPunct;\n\nvar QUOTE_TEST_RE = /['\"]/;\nvar QUOTE_RE = /['\"]/g;\nvar APOSTROPHE = '\\u2019'; /* ’ */\n\n\nfunction replaceAt(str, index, ch) {\n  return str.substr(0, index) + ch + str.substr(index + 1);\n}\n\nfunction process_inlines(tokens, state) {\n  var i, token, text, t, pos, max, thisLevel, item, lastChar, nextChar,\n      isLastPunctChar, isNextPunctChar, isLastWhiteSpace, isNextWhiteSpace,\n      canOpen, canClose, j, isSingle, stack, openQuote, closeQuote;\n\n  stack = [];\n\n  for (i = 0; i < tokens.length; i++) {\n    token = tokens[i];\n\n    thisLevel = tokens[i].level;\n\n    for (j = stack.length - 1; j >= 0; j--) {\n      if (stack[j].level <= thisLevel) { break; }\n    }\n    stack.length = j + 1;\n\n    if (token.type !== 'text') { continue; }\n\n    text = token.content;\n    pos = 0;\n    max = text.length;\n\n    /*eslint no-labels:0,block-scoped-var:0*/\n    OUTER:\n    while (pos < max) {\n      QUOTE_RE.lastIndex = pos;\n      t = QUOTE_RE.exec(text);\n      if (!t) { break; }\n\n      canOpen = canClose = true;\n      pos = t.index + 1;\n      isSingle = (t[0] === \"'\");\n\n      // Find previous character,\n      // default to space if it's the beginning of the line\n      //\n      lastChar = 0x20;\n\n      if (t.index - 1 >= 0) {\n        lastChar = text.charCodeAt(t.index - 1);\n      } else {\n        for (j = i - 1; j >= 0; j--) {\n          if (tokens[j].type === 'softbreak' || tokens[j].type === 'hardbreak') break; // lastChar defaults to 0x20\n          if (tokens[j].type !== 'text') continue;\n\n          lastChar = tokens[j].content.charCodeAt(tokens[j].content.length - 1);\n          break;\n        }\n      }\n\n      // Find next character,\n      // default to space if it's the end of the line\n      //\n      nextChar = 0x20;\n\n      if (pos < max) {\n        nextChar = text.charCodeAt(pos);\n      } else {\n        for (j = i + 1; j < tokens.length; j++) {\n          if (tokens[j].type === 'softbreak' || tokens[j].type === 'hardbreak') break; // nextChar defaults to 0x20\n          if (tokens[j].type !== 'text') continue;\n\n          nextChar = tokens[j].content.charCodeAt(0);\n          break;\n        }\n      }\n\n      isLastPunctChar = isMdAsciiPunct(lastChar) || isPunctChar(String.fromCharCode(lastChar));\n      isNextPunctChar = isMdAsciiPunct(nextChar) || isPunctChar(String.fromCharCode(nextChar));\n\n      isLastWhiteSpace = isWhiteSpace(lastChar);\n      isNextWhiteSpace = isWhiteSpace(nextChar);\n\n      if (isNextWhiteSpace) {\n        canOpen = false;\n      } else if (isNextPunctChar) {\n        if (!(isLastWhiteSpace || isLastPunctChar)) {\n          canOpen = false;\n        }\n      }\n\n      if (isLastWhiteSpace) {\n        canClose = false;\n      } else if (isLastPunctChar) {\n        if (!(isNextWhiteSpace || isNextPunctChar)) {\n          canClose = false;\n        }\n      }\n\n      if (nextChar === 0x22 /* \" */ && t[0] === '\"') {\n        if (lastChar >= 0x30 /* 0 */ && lastChar <= 0x39 /* 9 */) {\n          // special case: 1\"\" - count first quote as an inch\n          canClose = canOpen = false;\n        }\n      }\n\n      if (canOpen && canClose) {\n        // treat this as the middle of the word\n        canOpen = false;\n        canClose = isNextPunctChar;\n      }\n\n      if (!canOpen && !canClose) {\n        // middle of word\n        if (isSingle) {\n          token.content = replaceAt(token.content, t.index, APOSTROPHE);\n        }\n        continue;\n      }\n\n      if (canClose) {\n        // this could be a closing quote, rewind the stack to get a match\n        for (j = stack.length - 1; j >= 0; j--) {\n          item = stack[j];\n          if (stack[j].level < thisLevel) { break; }\n          if (item.single === isSingle && stack[j].level === thisLevel) {\n            item = stack[j];\n\n            if (isSingle) {\n              openQuote = state.md.options.quotes[2];\n              closeQuote = state.md.options.quotes[3];\n            } else {\n              openQuote = state.md.options.quotes[0];\n              closeQuote = state.md.options.quotes[1];\n            }\n\n            // replace token.content *before* tokens[item.token].content,\n            // because, if they are pointing at the same token, replaceAt\n            // could mess up indices when quote length != 1\n            token.content = replaceAt(token.content, t.index, closeQuote);\n            tokens[item.token].content = replaceAt(\n              tokens[item.token].content, item.pos, openQuote);\n\n            pos += closeQuote.length - 1;\n            if (item.token === i) { pos += openQuote.length - 1; }\n\n            text = token.content;\n            max = text.length;\n\n            stack.length = j;\n            continue OUTER;\n          }\n        }\n      }\n\n      if (canOpen) {\n        stack.push({\n          token: i,\n          pos: t.index,\n          single: isSingle,\n          level: thisLevel\n        });\n      } else if (canClose && isSingle) {\n        token.content = replaceAt(token.content, t.index, APOSTROPHE);\n      }\n    }\n  }\n}\n\n\nmodule.exports = function smartquotes(state) {\n  /*eslint max-depth:0*/\n  var blkIdx;\n\n  if (!state.md.options.typographer) { return; }\n\n  for (blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {\n\n    if (state.tokens[blkIdx].type !== 'inline' ||\n        !QUOTE_TEST_RE.test(state.tokens[blkIdx].content)) {\n      continue;\n    }\n\n    process_inlines(state.tokens[blkIdx].children, state);\n  }\n};\n","'use strict';\n\nvar svgReg = /<svg[^>]+[^>]*>/;\nfunction isSVG (buffer) {\n  return svgReg.test(buffer);\n}\n\nvar extractorRegExps = {\n  'root': /<svg [^>]+>/,\n  'width': /(^|\\s)width\\s*=\\s*\"(.+?)\"/i,\n  'height': /(^|\\s)height\\s*=\\s*\"(.+?)\"/i,\n  'viewbox': /(^|\\s)viewbox\\s*=\\s*\"(.+?)\"/i\n};\n\nfunction getRatio (viewbox) {\n  var ratio = 1;\n  if (viewbox && viewbox[2]) {\n    var dim = viewbox[2].split(/\\s/g);\n    if (dim.length === 4) {\n      dim = dim.map(function (i) {\n        return parseInt(i, 10);\n      });\n      ratio = (dim[2] - dim[0]) / (dim[3] - dim[1]);\n    }\n  }\n  return ratio;\n}\n\nfunction parse (buffer) {\n  var body = buffer.toString().replace(/[\\r\\n\\s]+/g, ' ');\n  var section = body.match(extractorRegExps.root);\n  var root = section && section[0];\n  if (root) {\n    var width = root.match(extractorRegExps.width);\n    var height = root.match(extractorRegExps.height);\n    var viewbox = root.match(extractorRegExps.viewbox);\n    var ratio = getRatio(viewbox);\n    return {\n      'width': parseInt(width && width[2], 10) || 0,\n      'height': parseInt(height && height[2], 10) || 0,\n      'ratio': ratio\n    };\n  }\n}\n\nfunction calculate (buffer) {\n\n  var parsed = parse(buffer);\n  var width = parsed.width;\n  var height = parsed.height;\n  var ratio = parsed.ratio;\n\n  if (width && height) {\n    return { 'width': width, 'height': height };\n  } else {\n    if (width) {\n      return { 'width': width, 'height': Math.floor(width / ratio) };\n    } else if (height) {\n      return { 'width': Math.floor(height * ratio), 'height': height };\n    } else {\n      throw new TypeError('invalid svg');\n    }\n  }\n}\n\nmodule.exports = {\n  'detect': isSVG,\n  'calculate': calculate\n};\n","// Skip text characters for text token, place those to pending buffer\n// and increment current pos\n\n'use strict';\n\n\n// Rule to skip pure text\n// '{}$%@~+=:' reserved for extentions\n\n// !, \", #, $, %, &, ', (, ), *, +, ,, -, ., /, :, ;, <, =, >, ?, @, [, \\, ], ^, _, `, {, |, }, or ~\n\n// !!!! Don't confuse with \"Markdown ASCII Punctuation\" chars\n// http://spec.commonmark.org/0.15/#ascii-punctuation-character\nfunction isTerminatorChar(ch) {\n  switch (ch) {\n    case 0x0A/* \\n */:\n    case 0x21/* ! */:\n    case 0x23/* # */:\n    case 0x24/* $ */:\n    case 0x25/* % */:\n    case 0x26/* & */:\n    case 0x2A/* * */:\n    case 0x2B/* + */:\n    case 0x2D/* - */:\n    case 0x3A/* : */:\n    case 0x3C/* < */:\n    case 0x3D/* = */:\n    case 0x3E/* > */:\n    case 0x40/* @ */:\n    case 0x5B/* [ */:\n    case 0x5C/* \\ */:\n    case 0x5D/* ] */:\n    case 0x5E/* ^ */:\n    case 0x5F/* _ */:\n    case 0x60/* ` */:\n    case 0x7B/* { */:\n    case 0x7D/* } */:\n    case 0x7E/* ~ */:\n      return true;\n    default:\n      return false;\n  }\n}\n\nmodule.exports = function text(state, silent) {\n  var pos = state.pos;\n\n  while (pos < state.posMax && !isTerminatorChar(state.src.charCodeAt(pos))) {\n    pos++;\n  }\n\n  if (pos === state.pos) { return false; }\n\n  if (!silent) { state.pending += state.src.slice(state.pos, pos); }\n\n  state.pos = pos;\n\n  return true;\n};\n\n// Alternative implementation, for memory.\n//\n// It costs 10% of performance, but allows extend terminators list, if place it\n// to `ParcerInline` property. Probably, will switch to it sometime, such\n// flexibility required.\n\n/*\nvar TERMINATOR_RE = /[\\n!#$%&*+\\-:<=>@[\\\\\\]^_`{}~]/;\n\nmodule.exports = function text(state, silent) {\n  var pos = state.pos,\n      idx = state.src.slice(pos).search(TERMINATOR_RE);\n\n  // first char is terminator -> empty text\n  if (idx === 0) { return false; }\n\n  // no terminator -> text till end of string\n  if (idx < 0) {\n    if (!silent) { state.pending += state.src.slice(pos); }\n    state.pos = state.src.length;\n    return true;\n  }\n\n  if (!silent) { state.pending += state.src.slice(pos, pos + idx); }\n\n  state.pos += idx;\n\n  return true;\n};*/\n","// Simple typographyc replacements\n//\n// (c) (C) → ©\n// (tm) (TM) → ™\n// (r) (R) → ®\n// +- → ±\n// (p) (P) -> §\n// ... → … (also ?.... → ?.., !.... → !..)\n// ???????? → ???, !!!!! → !!!, `,,` → `,`\n// -- → &ndash;, --- → &mdash;\n//\n'use strict';\n\n// TODO:\n// - fractionals 1/2, 1/4, 3/4 -> ½, ¼, ¾\n// - miltiplication 2 x 4 -> 2 × 4\n\nvar RARE_RE = /\\+-|\\.\\.|\\?\\?\\?\\?|!!!!|,,|--/;\n\n// Workaround for phantomjs - need regex without /g flag,\n// or root check will fail every second time\nvar SCOPED_ABBR_TEST_RE = /\\((c|tm|r|p)\\)/i;\n\nvar SCOPED_ABBR_RE = /\\((c|tm|r|p)\\)/ig;\nvar SCOPED_ABBR = {\n  c: '©',\n  r: '®',\n  p: '§',\n  tm: '™'\n};\n\nfunction replaceFn(match, name) {\n  return SCOPED_ABBR[name.toLowerCase()];\n}\n\nfunction replace_scoped(inlineTokens) {\n  var i, token, inside_autolink = 0;\n\n  for (i = inlineTokens.length - 1; i >= 0; i--) {\n    token = inlineTokens[i];\n\n    if (token.type === 'text' && !inside_autolink) {\n      token.content = token.content.replace(SCOPED_ABBR_RE, replaceFn);\n    }\n\n    if (token.type === 'link_open' && token.info === 'auto') {\n      inside_autolink--;\n    }\n\n    if (token.type === 'link_close' && token.info === 'auto') {\n      inside_autolink++;\n    }\n  }\n}\n\nfunction replace_rare(inlineTokens) {\n  var i, token, inside_autolink = 0;\n\n  for (i = inlineTokens.length - 1; i >= 0; i--) {\n    token = inlineTokens[i];\n\n    if (token.type === 'text' && !inside_autolink) {\n      if (RARE_RE.test(token.content)) {\n        token.content = token.content\n                    .replace(/\\+-/g, '±')\n                    // .., ..., ....... -> …\n                    // but ?..... & !..... -> ?.. & !..\n                    .replace(/\\.{2,}/g, '…').replace(/([?!])…/g, '$1..')\n                    .replace(/([?!]){4,}/g, '$1$1$1').replace(/,{2,}/g, ',')\n                    // em-dash\n                    .replace(/(^|[^-])---([^-]|$)/mg, '$1\\u2014$2')\n                    // en-dash\n                    .replace(/(^|\\s)--(\\s|$)/mg, '$1\\u2013$2')\n                    .replace(/(^|[^-\\s])--([^-\\s]|$)/mg, '$1\\u2013$2');\n      }\n    }\n\n    if (token.type === 'link_open' && token.info === 'auto') {\n      inside_autolink--;\n    }\n\n    if (token.type === 'link_close' && token.info === 'auto') {\n      inside_autolink++;\n    }\n  }\n}\n\n\nmodule.exports = function replace(state) {\n  var blkIdx;\n\n  if (!state.md.options.typographer) { return; }\n\n  for (blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {\n\n    if (state.tokens[blkIdx].type !== 'inline') { continue; }\n\n    if (SCOPED_ABBR_TEST_RE.test(state.tokens[blkIdx].content)) {\n      replace_scoped(state.tokens[blkIdx].children);\n    }\n\n    if (RARE_RE.test(state.tokens[blkIdx].content)) {\n      replace_rare(state.tokens[blkIdx].children);\n    }\n\n  }\n};\n","// HTML5 entities map: { name -> utf16string }\n//\n'use strict';\n\n/*eslint quotes:0*/\nmodule.exports = require('entities/maps/entities.json');\n","// fences (``` lang, ~~~ lang)\n\n'use strict';\n\n\nmodule.exports = function fence(state, startLine, endLine, silent) {\n  var marker, len, params, nextLine, mem, token, markup,\n      haveEndMarker = false,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  if (pos + 3 > max) { return false; }\n\n  marker = state.src.charCodeAt(pos);\n\n  if (marker !== 0x7E/* ~ */ && marker !== 0x60 /* ` */) {\n    return false;\n  }\n\n  // scan marker length\n  mem = pos;\n  pos = state.skipChars(pos, marker);\n\n  len = pos - mem;\n\n  if (len < 3) { return false; }\n\n  markup = state.src.slice(mem, pos);\n  params = state.src.slice(pos, max);\n\n  if (params.indexOf(String.fromCharCode(marker)) >= 0) { return false; }\n\n  // Since start is found, we can report success here in validation mode\n  if (silent) { return true; }\n\n  // search end of block\n  nextLine = startLine;\n\n  for (;;) {\n    nextLine++;\n    if (nextLine >= endLine) {\n      // unclosed block should be autoclosed by end of document.\n      // also block seems to be autoclosed by end of parent\n      break;\n    }\n\n    pos = mem = state.bMarks[nextLine] + state.tShift[nextLine];\n    max = state.eMarks[nextLine];\n\n    if (pos < max && state.sCount[nextLine] < state.blkIndent) {\n      // non-empty line with negative indent should stop the list:\n      // - ```\n      //  test\n      break;\n    }\n\n    if (state.src.charCodeAt(pos) !== marker) { continue; }\n\n    if (state.sCount[nextLine] - state.blkIndent >= 4) {\n      // closing fence should be indented less than 4 spaces\n      continue;\n    }\n\n    pos = state.skipChars(pos, marker);\n\n    // closing code fence must be at least as long as the opening one\n    if (pos - mem < len) { continue; }\n\n    // make sure tail has spaces only\n    pos = state.skipSpaces(pos);\n\n    if (pos < max) { continue; }\n\n    haveEndMarker = true;\n    // found!\n    break;\n  }\n\n  // If a fence has heading spaces, they should be removed from its inner block\n  len = state.sCount[startLine];\n\n  state.line = nextLine + (haveEndMarker ? 1 : 0);\n\n  token         = state.push('fence', 'code', 0);\n  token.info    = params;\n  token.content = state.getLines(startLine + 1, nextLine, len, true);\n  token.markup  = markup;\n  token.map     = [ startLine, state.line ];\n\n  return true;\n};\n","// Process html tags\n\n'use strict';\n\n\nvar HTML_TAG_RE = require('../common/html_re').HTML_TAG_RE;\n\n\nfunction isLetter(ch) {\n  /*eslint no-bitwise:0*/\n  var lc = ch | 0x20; // to lower case\n  return (lc >= 0x61/* a */) && (lc <= 0x7a/* z */);\n}\n\n\nmodule.exports = function html_inline(state, silent) {\n  var ch, match, max, token,\n      pos = state.pos;\n\n  if (!state.md.options.html) { return false; }\n\n  // Check start\n  max = state.posMax;\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */ ||\n      pos + 2 >= max) {\n    return false;\n  }\n\n  // Quick fail on second char\n  ch = state.src.charCodeAt(pos + 1);\n  if (ch !== 0x21/* ! */ &&\n      ch !== 0x3F/* ? */ &&\n      ch !== 0x2F/* / */ &&\n      !isLetter(ch)) {\n    return false;\n  }\n\n  match = state.src.slice(pos).match(HTML_TAG_RE);\n  if (!match) { return false; }\n\n  if (!silent) {\n    token         = state.push('html_inline', '', 0);\n    token.content = state.src.slice(pos, pos + match[0].length);\n  }\n  state.pos += match[0].length;\n  return true;\n};\n","'use strict';\n\nvar gifRegexp = /^GIF8[7,9]a/;\nfunction isGIF (buffer) {\n  var signature = buffer.toString('ascii', 0, 6);\n  return (gifRegexp.test(signature));\n}\n\nfunction calculate(buffer) {\n  return {\n    'width': buffer.readUInt16LE(6),\n    'height': buffer.readUInt16LE(8)\n  };\n}\n\nmodule.exports = {\n  'detect': isGIF,\n  'calculate': calculate\n};","// Process *this* and _that_\n//\n'use strict';\n\n\n// Insert each marker as a separate text token, and add it to delimiter list\n//\nmodule.exports.tokenize = function emphasis(state, silent) {\n  var i, scanned, token,\n      start = state.pos,\n      marker = state.src.charCodeAt(start);\n\n  if (silent) { return false; }\n\n  if (marker !== 0x5F /* _ */ && marker !== 0x2A /* * */) { return false; }\n\n  scanned = state.scanDelims(state.pos, marker === 0x2A);\n\n  for (i = 0; i < scanned.length; i++) {\n    token         = state.push('text', '', 0);\n    token.content = String.fromCharCode(marker);\n\n    state.delimiters.push({\n      // Char code of the starting marker (number).\n      //\n      marker: marker,\n\n      // Total length of these series of delimiters.\n      //\n      length: scanned.length,\n\n      // An amount of characters before this one that's equivalent to\n      // current one. In plain English: if this delimiter does not open\n      // an emphasis, neither do previous `jump` characters.\n      //\n      // Used to skip sequences like \"*****\" in one step, for 1st asterisk\n      // value will be 0, for 2nd it's 1 and so on.\n      //\n      jump:   i,\n\n      // A position of the token this delimiter corresponds to.\n      //\n      token:  state.tokens.length - 1,\n\n      // Token level.\n      //\n      level:  state.level,\n\n      // If this delimiter is matched as a valid opener, `end` will be\n      // equal to its position, otherwise it's `-1`.\n      //\n      end:    -1,\n\n      // Boolean flags that determine if this delimiter could open or close\n      // an emphasis.\n      //\n      open:   scanned.can_open,\n      close:  scanned.can_close\n    });\n  }\n\n  state.pos += scanned.length;\n\n  return true;\n};\n\n\n// Walk through delimiter list and replace text tokens with tags\n//\nmodule.exports.postProcess = function emphasis(state) {\n  var i,\n      startDelim,\n      endDelim,\n      token,\n      ch,\n      isStrong,\n      delimiters = state.delimiters,\n      max = state.delimiters.length;\n\n  for (i = max - 1; i >= 0; i--) {\n    startDelim = delimiters[i];\n\n    if (startDelim.marker !== 0x5F/* _ */ && startDelim.marker !== 0x2A/* * */) {\n      continue;\n    }\n\n    // Process only opening markers\n    if (startDelim.end === -1) {\n      continue;\n    }\n\n    endDelim = delimiters[startDelim.end];\n\n    // If the previous delimiter has the same marker and is adjacent to this one,\n    // merge those into one strong delimiter.\n    //\n    // `<em><em>whatever</em></em>` -> `<strong>whatever</strong>`\n    //\n    isStrong = i > 0 &&\n               delimiters[i - 1].end === startDelim.end + 1 &&\n               delimiters[i - 1].token === startDelim.token - 1 &&\n               delimiters[startDelim.end + 1].token === endDelim.token + 1 &&\n               delimiters[i - 1].marker === startDelim.marker;\n\n    ch = String.fromCharCode(startDelim.marker);\n\n    token         = state.tokens[startDelim.token];\n    token.type    = isStrong ? 'strong_open' : 'em_open';\n    token.tag     = isStrong ? 'strong' : 'em';\n    token.nesting = 1;\n    token.markup  = isStrong ? ch + ch : ch;\n    token.content = '';\n\n    token         = state.tokens[endDelim.token];\n    token.type    = isStrong ? 'strong_close' : 'em_close';\n    token.tag     = isStrong ? 'strong' : 'em';\n    token.nesting = -1;\n    token.markup  = isStrong ? ch + ch : ch;\n    token.content = '';\n\n    if (isStrong) {\n      state.tokens[delimiters[i - 1].token].content = '';\n      state.tokens[delimiters[startDelim.end + 1].token].content = '';\n      i--;\n    }\n  }\n};\n","// Process [link](<to> \"stuff\")\n\n'use strict';\n\nvar normalizeReference   = require('../common/utils').normalizeReference;\nvar isSpace              = require('../common/utils').isSpace;\n\n\nmodule.exports = function link(state, silent) {\n  var attrs,\n      code,\n      label,\n      labelEnd,\n      labelStart,\n      pos,\n      res,\n      ref,\n      title,\n      token,\n      href = '',\n      oldPos = state.pos,\n      max = state.posMax,\n      start = state.pos,\n      parseReference = true;\n\n  if (state.src.charCodeAt(state.pos) !== 0x5B/* [ */) { return false; }\n\n  labelStart = state.pos + 1;\n  labelEnd = state.md.helpers.parseLinkLabel(state, state.pos, true);\n\n  // parser failed to find ']', so it's not a valid link\n  if (labelEnd < 0) { return false; }\n\n  pos = labelEnd + 1;\n  if (pos < max && state.src.charCodeAt(pos) === 0x28/* ( */) {\n    //\n    // Inline link\n    //\n\n    // might have found a valid shortcut link, disable reference parsing\n    parseReference = false;\n\n    // [link](  <href>  \"title\"  )\n    //        ^^ skipping these spaces\n    pos++;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!isSpace(code) && code !== 0x0A) { break; }\n    }\n    if (pos >= max) { return false; }\n\n    // [link](  <href>  \"title\"  )\n    //          ^^^^^^ parsing link destination\n    start = pos;\n    res = state.md.helpers.parseLinkDestination(state.src, pos, state.posMax);\n    if (res.ok) {\n      href = state.md.normalizeLink(res.str);\n      if (state.md.validateLink(href)) {\n        pos = res.pos;\n      } else {\n        href = '';\n      }\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                ^^ skipping these spaces\n    start = pos;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!isSpace(code) && code !== 0x0A) { break; }\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                  ^^^^^^^ parsing link title\n    res = state.md.helpers.parseLinkTitle(state.src, pos, state.posMax);\n    if (pos < max && start !== pos && res.ok) {\n      title = res.str;\n      pos = res.pos;\n\n      // [link](  <href>  \"title\"  )\n      //                         ^^ skipping these spaces\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos);\n        if (!isSpace(code) && code !== 0x0A) { break; }\n      }\n    } else {\n      title = '';\n    }\n\n    if (pos >= max || state.src.charCodeAt(pos) !== 0x29/* ) */) {\n      // parsing a valid shortcut link failed, fallback to reference\n      parseReference = true;\n    }\n    pos++;\n  }\n\n  if (parseReference) {\n    //\n    // Link reference\n    //\n    if (typeof state.env.references === 'undefined') { return false; }\n\n    if (pos < max && state.src.charCodeAt(pos) === 0x5B/* [ */) {\n      start = pos + 1;\n      pos = state.md.helpers.parseLinkLabel(state, pos);\n      if (pos >= 0) {\n        label = state.src.slice(start, pos++);\n      } else {\n        pos = labelEnd + 1;\n      }\n    } else {\n      pos = labelEnd + 1;\n    }\n\n    // covers label === '' and label === undefined\n    // (collapsed reference link and shortcut reference link respectively)\n    if (!label) { label = state.src.slice(labelStart, labelEnd); }\n\n    ref = state.env.references[normalizeReference(label)];\n    if (!ref) {\n      state.pos = oldPos;\n      return false;\n    }\n    href = ref.href;\n    title = ref.title;\n  }\n\n  //\n  // We found the end of the link, and know for a fact it's a valid link;\n  // so all that's left to do is to call tokenizer.\n  //\n  if (!silent) {\n    state.pos = labelStart;\n    state.posMax = labelEnd;\n\n    token        = state.push('link_open', 'a', 1);\n    token.attrs  = attrs = [ [ 'href', href ] ];\n    if (title) {\n      attrs.push([ 'title', title ]);\n    }\n\n    state.md.inline.tokenize(state);\n\n    token        = state.push('link_close', 'a', -1);\n  }\n\n  state.pos = pos;\n  state.posMax = max;\n  return true;\n};\n","'use strict';\n\n// based on https://developers.google.com/speed/webp/docs/riff_container\n\nfunction isWebP (buffer) {\n  var riffHeader = 'RIFF' === buffer.toString('ascii', 0, 4);\n  var webpHeader = 'WEBP' === buffer.toString('ascii', 8, 12);\n  var vp8Header  = 'VP8'  === buffer.toString('ascii', 12, 15);\n  return (riffHeader && webpHeader && vp8Header);\n}\n\nfunction calculate (buffer) {\n\n  var chunkHeader = buffer.toString('ascii', 12, 16);\n  buffer = buffer.slice(20, 30);\n\n  // Lossless webp stream signature\n  if (chunkHeader === 'VP8 ' && buffer[0] !== 0x2f) {\n    return calculateLossy(buffer);\n  }\n\n  // Lossy webp stream signature\n  var signature = buffer.toString('hex', 3, 6);\n  if (chunkHeader === 'VP8L' && signature !== '9d012a') {\n    return calculateLossless(buffer);\n  }\n\n  return false;\n}\n\nfunction calculateLossless (buffer) {\n  return {\n    'width': 1 + (((buffer[2] & 0x3F) << 8) | buffer[1]),\n    'height': 1 + (((buffer[4] & 0xF) << 10) | (buffer[3] << 2) |\n                  ((buffer[2] & 0xC0) >> 6))\n  };\n}\n\nfunction calculateLossy (buffer) {\n  // `& 0x3fff` returns the last 14 bits\n  // TO-DO: include webp scaling in the calculations\n  return {\n    'width': buffer.readInt16LE(6) & 0x3fff,\n    'height': buffer.readInt16LE(8) & 0x3fff\n  };\n}\n\nmodule.exports = {\n  'detect': isWebP,\n  'calculate': calculate\n};\n","'use strict';\n\n\nmodule.exports = require('./lib/');\n","'use strict';\n\n\nvar normalizeReference   = require('../common/utils').normalizeReference;\nvar isSpace              = require('../common/utils').isSpace;\n\n\nmodule.exports = function reference(state, startLine, _endLine, silent) {\n  var ch,\n      destEndPos,\n      destEndLineNo,\n      endLine,\n      href,\n      i,\n      l,\n      label,\n      labelEnd,\n      oldParentType,\n      res,\n      start,\n      str,\n      terminate,\n      terminatorRules,\n      title,\n      lines = 0,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine],\n      nextLine = startLine + 1;\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  if (state.src.charCodeAt(pos) !== 0x5B/* [ */) { return false; }\n\n  // Simple check to quickly interrupt scan on [link](url) at the start of line.\n  // Can be useful on practice: https://github.com/markdown-it/markdown-it/issues/54\n  while (++pos < max) {\n    if (state.src.charCodeAt(pos) === 0x5D /* ] */ &&\n        state.src.charCodeAt(pos - 1) !== 0x5C/* \\ */) {\n      if (pos + 1 === max) { return false; }\n      if (state.src.charCodeAt(pos + 1) !== 0x3A/* : */) { return false; }\n      break;\n    }\n  }\n\n  endLine = state.lineMax;\n\n  // jump line-by-line until empty one or EOF\n  terminatorRules = state.md.block.ruler.getRules('reference');\n\n  oldParentType = state.parentType;\n  state.parentType = 'reference';\n\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue; }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue; }\n\n    // Some tags can terminate paragraph without empty line.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n  }\n\n  str = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n  max = str.length;\n\n  for (pos = 1; pos < max; pos++) {\n    ch = str.charCodeAt(pos);\n    if (ch === 0x5B /* [ */) {\n      return false;\n    } else if (ch === 0x5D /* ] */) {\n      labelEnd = pos;\n      break;\n    } else if (ch === 0x0A /* \\n */) {\n      lines++;\n    } else if (ch === 0x5C /* \\ */) {\n      pos++;\n      if (pos < max && str.charCodeAt(pos) === 0x0A) {\n        lines++;\n      }\n    }\n  }\n\n  if (labelEnd < 0 || str.charCodeAt(labelEnd + 1) !== 0x3A/* : */) { return false; }\n\n  // [label]:   destination   'title'\n  //         ^^^ skip optional whitespace here\n  for (pos = labelEnd + 2; pos < max; pos++) {\n    ch = str.charCodeAt(pos);\n    if (ch === 0x0A) {\n      lines++;\n    } else if (isSpace(ch)) {\n      /*eslint no-empty:0*/\n    } else {\n      break;\n    }\n  }\n\n  // [label]:   destination   'title'\n  //            ^^^^^^^^^^^ parse this\n  res = state.md.helpers.parseLinkDestination(str, pos, max);\n  if (!res.ok) { return false; }\n\n  href = state.md.normalizeLink(res.str);\n  if (!state.md.validateLink(href)) { return false; }\n\n  pos = res.pos;\n  lines += res.lines;\n\n  // save cursor state, we could require to rollback later\n  destEndPos = pos;\n  destEndLineNo = lines;\n\n  // [label]:   destination   'title'\n  //                       ^^^ skipping those spaces\n  start = pos;\n  for (; pos < max; pos++) {\n    ch = str.charCodeAt(pos);\n    if (ch === 0x0A) {\n      lines++;\n    } else if (isSpace(ch)) {\n      /*eslint no-empty:0*/\n    } else {\n      break;\n    }\n  }\n\n  // [label]:   destination   'title'\n  //                          ^^^^^^^ parse this\n  res = state.md.helpers.parseLinkTitle(str, pos, max);\n  if (pos < max && start !== pos && res.ok) {\n    title = res.str;\n    pos = res.pos;\n    lines += res.lines;\n  } else {\n    title = '';\n    pos = destEndPos;\n    lines = destEndLineNo;\n  }\n\n  // skip trailing spaces until the rest of the line\n  while (pos < max) {\n    ch = str.charCodeAt(pos);\n    if (!isSpace(ch)) { break; }\n    pos++;\n  }\n\n  if (pos < max && str.charCodeAt(pos) !== 0x0A) {\n    if (title) {\n      // garbage at the end of the line after title,\n      // but it could still be a valid reference if we roll back\n      title = '';\n      pos = destEndPos;\n      lines = destEndLineNo;\n      while (pos < max) {\n        ch = str.charCodeAt(pos);\n        if (!isSpace(ch)) { break; }\n        pos++;\n      }\n    }\n  }\n\n  if (pos < max && str.charCodeAt(pos) !== 0x0A) {\n    // garbage at the end of the line\n    return false;\n  }\n\n  label = normalizeReference(str.slice(1, labelEnd));\n  if (!label) {\n    // CommonMark 0.20 disallows empty labels\n    return false;\n  }\n\n  // Reference can not terminate anything. This check is for safety only.\n  /*istanbul ignore if*/\n  if (silent) { return true; }\n\n  if (typeof state.env.references === 'undefined') {\n    state.env.references = {};\n  }\n  if (typeof state.env.references[label] === 'undefined') {\n    state.env.references[label] = { title: title, href: href };\n  }\n\n  state.parentType = oldParentType;\n\n  state.line = startLine + lines + 1;\n  return true;\n};\n","// Parse link label\n//\n// this function assumes that first character (\"[\") already matches;\n// returns the end of the label\n//\n'use strict';\n\nmodule.exports = function parseLinkLabel(state, start, disableNested) {\n  var level, found, marker, prevPos,\n      labelEnd = -1,\n      max = state.posMax,\n      oldPos = state.pos;\n\n  state.pos = start + 1;\n  level = 1;\n\n  while (state.pos < max) {\n    marker = state.src.charCodeAt(state.pos);\n    if (marker === 0x5D /* ] */) {\n      level--;\n      if (level === 0) {\n        found = true;\n        break;\n      }\n    }\n\n    prevPos = state.pos;\n    state.md.inline.skipToken(state);\n    if (marker === 0x5B /* [ */) {\n      if (prevPos === state.pos - 1) {\n        // increase level if we find text `[`, which is not a part of any token\n        level++;\n      } else if (disableNested) {\n        state.pos = oldPos;\n        return -1;\n      }\n    }\n  }\n\n  if (found) {\n    labelEnd = state.pos;\n  }\n\n  // restore old state\n  state.pos = oldPos;\n\n  return labelEnd;\n};\n","// List of valid html blocks names, accorting to commonmark spec\n// http://jgm.github.io/CommonMark/spec.html#html-blocks\n\n'use strict';\n\n\nmodule.exports = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'meta',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'section',\n  'source',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n];\n","// Parse link destination\n//\n'use strict';\n\n\nvar isSpace     = require('../common/utils').isSpace;\nvar unescapeAll = require('../common/utils').unescapeAll;\n\n\nmodule.exports = function parseLinkDestination(str, pos, max) {\n  var code, level,\n      lines = 0,\n      start = pos,\n      result = {\n        ok: false,\n        pos: 0,\n        lines: 0,\n        str: ''\n      };\n\n  if (str.charCodeAt(pos) === 0x3C /* < */) {\n    pos++;\n    while (pos < max) {\n      code = str.charCodeAt(pos);\n      if (code === 0x0A /* \\n */ || isSpace(code)) { return result; }\n      if (code === 0x3E /* > */) {\n        result.pos = pos + 1;\n        result.str = unescapeAll(str.slice(start + 1, pos));\n        result.ok = true;\n        return result;\n      }\n      if (code === 0x5C /* \\ */ && pos + 1 < max) {\n        pos += 2;\n        continue;\n      }\n\n      pos++;\n    }\n\n    // no closing '>'\n    return result;\n  }\n\n  // this should be ... } else { ... branch\n\n  level = 0;\n  while (pos < max) {\n    code = str.charCodeAt(pos);\n\n    if (code === 0x20) { break; }\n\n    // ascii control characters\n    if (code < 0x20 || code === 0x7F) { break; }\n\n    if (code === 0x5C /* \\ */ && pos + 1 < max) {\n      pos += 2;\n      continue;\n    }\n\n    if (code === 0x28 /* ( */) {\n      level++;\n    }\n\n    if (code === 0x29 /* ) */) {\n      if (level === 0) { break; }\n      level--;\n    }\n\n    pos++;\n  }\n\n  if (start === pos) { return result; }\n  if (level !== 0) { return result; }\n\n  result.str = unescapeAll(str.slice(start, pos));\n  result.lines = lines;\n  result.pos = pos;\n  result.ok = true;\n  return result;\n};\n","// Process footnotes\n//\n'use strict';\n\n////////////////////////////////////////////////////////////////////////////////\n// Renderer partials\n\nfunction render_footnote_anchor_name(tokens, idx, options, env/*, slf*/) {\n  var n = Number(tokens[idx].meta.id + 1).toString();\n  var prefix = '';\n\n  if (typeof env.docId === 'string') {\n    prefix = '-' + env.docId + '-';\n  }\n\n  return prefix + n;\n}\n\nfunction render_footnote_caption(tokens, idx/*, options, env, slf*/) {\n  var n = Number(tokens[idx].meta.id + 1).toString();\n\n  if (tokens[idx].meta.subId > 0) {\n    n += ':' + tokens[idx].meta.subId;\n  }\n\n  return '[' + n + ']';\n}\n\nfunction render_footnote_ref(tokens, idx, options, env, slf) {\n  var id      = slf.rules.footnote_anchor_name(tokens, idx, options, env, slf);\n  var caption = slf.rules.footnote_caption(tokens, idx, options, env, slf);\n  var refid   = id;\n\n  if (tokens[idx].meta.subId > 0) {\n    refid += ':' + tokens[idx].meta.subId;\n  }\n\n  return '<sup class=\"footnote-ref\"><a href=\"#fn' + id + '\" id=\"fnref' + refid + '\">' + caption + '</a></sup>';\n}\n\nfunction render_footnote_block_open(tokens, idx, options) {\n  return (options.xhtmlOut ? '<hr class=\"footnotes-sep\" />\\n' : '<hr class=\"footnotes-sep\">\\n') +\n         '<section class=\"footnotes\">\\n' +\n         '<ol class=\"footnotes-list\">\\n';\n}\n\nfunction render_footnote_block_close() {\n  return '</ol>\\n</section>\\n';\n}\n\nfunction render_footnote_open(tokens, idx, options, env, slf) {\n  var id = slf.rules.footnote_anchor_name(tokens, idx, options, env, slf);\n\n  if (tokens[idx].meta.subId > 0) {\n    id += ':' + tokens[idx].meta.subId;\n  }\n\n  return '<li id=\"fn' + id + '\" class=\"footnote-item\">';\n}\n\nfunction render_footnote_close() {\n  return '</li>\\n';\n}\n\nfunction render_footnote_anchor(tokens, idx, options, env, slf) {\n  var id = slf.rules.footnote_anchor_name(tokens, idx, options, env, slf);\n\n  if (tokens[idx].meta.subId > 0) {\n    id += ':' + tokens[idx].meta.subId;\n  }\n\n  /* ↩ with escape code to prevent display as Apple Emoji on iOS */\n  return ' <a href=\"#fnref' + id + '\" class=\"footnote-backref\">\\u21a9\\uFE0E</a>';\n}\n\n\nmodule.exports = function footnote_plugin(md) {\n  var parseLinkLabel = md.helpers.parseLinkLabel,\n      isSpace = md.utils.isSpace;\n\n  md.renderer.rules.footnote_ref          = render_footnote_ref;\n  md.renderer.rules.footnote_block_open   = render_footnote_block_open;\n  md.renderer.rules.footnote_block_close  = render_footnote_block_close;\n  md.renderer.rules.footnote_open         = render_footnote_open;\n  md.renderer.rules.footnote_close        = render_footnote_close;\n  md.renderer.rules.footnote_anchor       = render_footnote_anchor;\n\n  // helpers (only used in other rules, no tokens are attached to those)\n  md.renderer.rules.footnote_caption      = render_footnote_caption;\n  md.renderer.rules.footnote_anchor_name  = render_footnote_anchor_name;\n\n  // Process footnote block definition\n  function footnote_def(state, startLine, endLine, silent) {\n    var oldBMark, oldTShift, oldSCount, oldParentType, pos, label, token,\n        initial, offset, ch, posAfterColon,\n        start = state.bMarks[startLine] + state.tShift[startLine],\n        max = state.eMarks[startLine];\n\n    // line should be at least 5 chars - \"[^x]:\"\n    if (start + 4 > max) { return false; }\n\n    if (state.src.charCodeAt(start) !== 0x5B/* [ */) { return false; }\n    if (state.src.charCodeAt(start + 1) !== 0x5E/* ^ */) { return false; }\n\n    for (pos = start + 2; pos < max; pos++) {\n      if (state.src.charCodeAt(pos) === 0x20) { return false; }\n      if (state.src.charCodeAt(pos) === 0x5D /* ] */) {\n        break;\n      }\n    }\n\n    if (pos === start + 2) { return false; } // no empty footnote labels\n    if (pos + 1 >= max || state.src.charCodeAt(++pos) !== 0x3A /* : */) { return false; }\n    if (silent) { return true; }\n    pos++;\n\n    if (!state.env.footnotes) { state.env.footnotes = {}; }\n    if (!state.env.footnotes.refs) { state.env.footnotes.refs = {}; }\n    label = state.src.slice(start + 2, pos - 2);\n    state.env.footnotes.refs[':' + label] = -1;\n\n    token       = new state.Token('footnote_reference_open', '', 1);\n    token.meta  = { label: label };\n    token.level = state.level++;\n    state.tokens.push(token);\n\n    oldBMark = state.bMarks[startLine];\n    oldTShift = state.tShift[startLine];\n    oldSCount = state.sCount[startLine];\n    oldParentType = state.parentType;\n\n    posAfterColon = pos;\n    initial = offset = state.sCount[startLine] + pos - (state.bMarks[startLine] + state.tShift[startLine]);\n\n    while (pos < max) {\n      ch = state.src.charCodeAt(pos);\n\n      if (isSpace(ch)) {\n        if (ch === 0x09) {\n          offset += 4 - offset % 4;\n        } else {\n          offset++;\n        }\n      } else {\n        break;\n      }\n\n      pos++;\n    }\n\n    state.tShift[startLine] = pos - posAfterColon;\n    state.sCount[startLine] = offset - initial;\n\n    state.bMarks[startLine] = posAfterColon;\n    state.blkIndent += 4;\n    state.parentType = 'footnote';\n\n    if (state.sCount[startLine] < state.blkIndent) {\n      state.sCount[startLine] += state.blkIndent;\n    }\n\n    state.md.block.tokenize(state, startLine, endLine, true);\n\n    state.parentType = oldParentType;\n    state.blkIndent -= 4;\n    state.tShift[startLine] = oldTShift;\n    state.sCount[startLine] = oldSCount;\n    state.bMarks[startLine] = oldBMark;\n\n    token       = new state.Token('footnote_reference_close', '', -1);\n    token.level = --state.level;\n    state.tokens.push(token);\n\n    return true;\n  }\n\n  // Process inline footnotes (^[...])\n  function footnote_inline(state, silent) {\n    var labelStart,\n        labelEnd,\n        footnoteId,\n        token,\n        tokens,\n        max = state.posMax,\n        start = state.pos;\n\n    if (start + 2 >= max) { return false; }\n    if (state.src.charCodeAt(start) !== 0x5E/* ^ */) { return false; }\n    if (state.src.charCodeAt(start + 1) !== 0x5B/* [ */) { return false; }\n\n    labelStart = start + 2;\n    labelEnd = parseLinkLabel(state, start + 1);\n\n    // parser failed to find ']', so it's not a valid note\n    if (labelEnd < 0) { return false; }\n\n    // We found the end of the link, and know for a fact it's a valid link;\n    // so all that's left to do is to call tokenizer.\n    //\n    if (!silent) {\n      if (!state.env.footnotes) { state.env.footnotes = {}; }\n      if (!state.env.footnotes.list) { state.env.footnotes.list = []; }\n      footnoteId = state.env.footnotes.list.length;\n\n      state.md.inline.parse(\n        state.src.slice(labelStart, labelEnd),\n        state.md,\n        state.env,\n        tokens = []\n      );\n\n      token      = state.push('footnote_ref', '', 0);\n      token.meta = { id: footnoteId };\n\n      state.env.footnotes.list[footnoteId] = {\n        content: state.src.slice(labelStart, labelEnd),\n        tokens: tokens\n      };\n    }\n\n    state.pos = labelEnd + 1;\n    state.posMax = max;\n    return true;\n  }\n\n  // Process footnote references ([^...])\n  function footnote_ref(state, silent) {\n    var label,\n        pos,\n        footnoteId,\n        footnoteSubId,\n        token,\n        max = state.posMax,\n        start = state.pos;\n\n    // should be at least 4 chars - \"[^x]\"\n    if (start + 3 > max) { return false; }\n\n    if (!state.env.footnotes || !state.env.footnotes.refs) { return false; }\n    if (state.src.charCodeAt(start) !== 0x5B/* [ */) { return false; }\n    if (state.src.charCodeAt(start + 1) !== 0x5E/* ^ */) { return false; }\n\n    for (pos = start + 2; pos < max; pos++) {\n      if (state.src.charCodeAt(pos) === 0x20) { return false; }\n      if (state.src.charCodeAt(pos) === 0x0A) { return false; }\n      if (state.src.charCodeAt(pos) === 0x5D /* ] */) {\n        break;\n      }\n    }\n\n    if (pos === start + 2) { return false; } // no empty footnote labels\n    if (pos >= max) { return false; }\n    pos++;\n\n    label = state.src.slice(start + 2, pos - 1);\n    if (typeof state.env.footnotes.refs[':' + label] === 'undefined') { return false; }\n\n    if (!silent) {\n      if (!state.env.footnotes.list) { state.env.footnotes.list = []; }\n\n      if (state.env.footnotes.refs[':' + label] < 0) {\n        footnoteId = state.env.footnotes.list.length;\n        state.env.footnotes.list[footnoteId] = { label: label, count: 0 };\n        state.env.footnotes.refs[':' + label] = footnoteId;\n      } else {\n        footnoteId = state.env.footnotes.refs[':' + label];\n      }\n\n      footnoteSubId = state.env.footnotes.list[footnoteId].count;\n      state.env.footnotes.list[footnoteId].count++;\n\n      token      = state.push('footnote_ref', '', 0);\n      token.meta = { id: footnoteId, subId: footnoteSubId, label: label };\n    }\n\n    state.pos = pos;\n    state.posMax = max;\n    return true;\n  }\n\n  // Glue footnote tokens to end of token stream\n  function footnote_tail(state) {\n    var i, l, j, t, lastParagraph, list, token, tokens, current, currentLabel,\n        insideRef = false,\n        refTokens = {};\n\n    if (!state.env.footnotes) { return; }\n\n    state.tokens = state.tokens.filter(function (tok) {\n      if (tok.type === 'footnote_reference_open') {\n        insideRef = true;\n        current = [];\n        currentLabel = tok.meta.label;\n        return false;\n      }\n      if (tok.type === 'footnote_reference_close') {\n        insideRef = false;\n        // prepend ':' to avoid conflict with Object.prototype members\n        refTokens[':' + currentLabel] = current;\n        return false;\n      }\n      if (insideRef) { current.push(tok); }\n      return !insideRef;\n    });\n\n    if (!state.env.footnotes.list) { return; }\n    list = state.env.footnotes.list;\n\n    token = new state.Token('footnote_block_open', '', 1);\n    state.tokens.push(token);\n\n    for (i = 0, l = list.length; i < l; i++) {\n      token      = new state.Token('footnote_open', '', 1);\n      token.meta = { id: i, label: list[i].label };\n      state.tokens.push(token);\n\n      if (list[i].tokens) {\n        tokens = [];\n\n        token          = new state.Token('paragraph_open', 'p', 1);\n        token.block    = true;\n        tokens.push(token);\n\n        token          = new state.Token('inline', '', 0);\n        token.children = list[i].tokens;\n        token.content  = list[i].content;\n        tokens.push(token);\n\n        token          = new state.Token('paragraph_close', 'p', -1);\n        token.block    = true;\n        tokens.push(token);\n\n      } else if (list[i].label) {\n        tokens = refTokens[':' + list[i].label];\n      }\n\n      state.tokens = state.tokens.concat(tokens);\n      if (state.tokens[state.tokens.length - 1].type === 'paragraph_close') {\n        lastParagraph = state.tokens.pop();\n      } else {\n        lastParagraph = null;\n      }\n\n      t = list[i].count > 0 ? list[i].count : 1;\n      for (j = 0; j < t; j++) {\n        token      = new state.Token('footnote_anchor', '', 0);\n        token.meta = { id: i, subId: j, label: list[i].label };\n        state.tokens.push(token);\n      }\n\n      if (lastParagraph) {\n        state.tokens.push(lastParagraph);\n      }\n\n      token = new state.Token('footnote_close', '', -1);\n      state.tokens.push(token);\n    }\n\n    token = new state.Token('footnote_block_close', '', -1);\n    state.tokens.push(token);\n  }\n\n  md.block.ruler.before('reference', 'footnote_def', footnote_def, { alt: [ 'paragraph', 'reference' ] });\n  md.inline.ruler.after('image', 'footnote_inline', footnote_inline);\n  md.inline.ruler.after('footnote_inline', 'footnote_ref', footnote_ref);\n  md.core.ruler.after('inline', 'footnote_tail', footnote_tail);\n};\n","'use strict';\n\nvar typeMap = {};\nvar types = require('./types');\n\ntypes.forEach(function(type) {\n  typeMap[type] = require('./types/' + type).detect;\n});\n\nmodule.exports = function(buffer, filepath) {\n  var type, result;\n  for (type in typeMap) {\n    if (type in typeMap) {\n      result = typeMap[type](buffer, filepath);\n      if (result) {\n        return type;\n      }\n    }\n  }\n  throw new TypeError('Unsupported type');\n};\n","// Block quotes\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function blockquote(state, startLine, endLine, silent) {\n  var adjustTab,\n      ch,\n      i,\n      initial,\n      l,\n      lastLineEmpty,\n      lines,\n      nextLine,\n      offset,\n      oldBMarks,\n      oldBSCount,\n      oldIndent,\n      oldParentType,\n      oldSCount,\n      oldTShift,\n      spaceAfterMarker,\n      terminate,\n      terminatorRules,\n      token,\n      wasOutdented,\n      oldLineMax = state.lineMax,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  // check the block quote marker\n  if (state.src.charCodeAt(pos++) !== 0x3E/* > */) { return false; }\n\n  // we know that it's going to be a valid blockquote,\n  // so no point trying to find the end of it in silent mode\n  if (silent) { return true; }\n\n  // skip spaces after \">\" and re-calculate offset\n  initial = offset = state.sCount[startLine] + pos - (state.bMarks[startLine] + state.tShift[startLine]);\n\n  // skip one optional space after '>'\n  if (state.src.charCodeAt(pos) === 0x20 /* space */) {\n    // ' >   test '\n    //     ^ -- position start of line here:\n    pos++;\n    initial++;\n    offset++;\n    adjustTab = false;\n    spaceAfterMarker = true;\n  } else if (state.src.charCodeAt(pos) === 0x09 /* tab */) {\n    spaceAfterMarker = true;\n\n    if ((state.bsCount[startLine] + offset) % 4 === 3) {\n      // '  >\\t  test '\n      //       ^ -- position start of line here (tab has width===1)\n      pos++;\n      initial++;\n      offset++;\n      adjustTab = false;\n    } else {\n      // ' >\\t  test '\n      //    ^ -- position start of line here + shift bsCount slightly\n      //         to make extra space appear\n      adjustTab = true;\n    }\n  } else {\n    spaceAfterMarker = false;\n  }\n\n  oldBMarks = [ state.bMarks[startLine] ];\n  state.bMarks[startLine] = pos;\n\n  while (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (isSpace(ch)) {\n      if (ch === 0x09) {\n        offset += 4 - (offset + state.bsCount[startLine] + (adjustTab ? 1 : 0)) % 4;\n      } else {\n        offset++;\n      }\n    } else {\n      break;\n    }\n\n    pos++;\n  }\n\n  oldBSCount = [ state.bsCount[startLine] ];\n  state.bsCount[startLine] = state.sCount[startLine] + 1 + (spaceAfterMarker ? 1 : 0);\n\n  lastLineEmpty = pos >= max;\n\n  oldSCount = [ state.sCount[startLine] ];\n  state.sCount[startLine] = offset - initial;\n\n  oldTShift = [ state.tShift[startLine] ];\n  state.tShift[startLine] = pos - state.bMarks[startLine];\n\n  terminatorRules = state.md.block.ruler.getRules('blockquote');\n\n  oldParentType = state.parentType;\n  state.parentType = 'blockquote';\n  wasOutdented = false;\n\n  // Search the end of the block\n  //\n  // Block ends with either:\n  //  1. an empty line outside:\n  //     ```\n  //     > test\n  //\n  //     ```\n  //  2. an empty line inside:\n  //     ```\n  //     >\n  //     test\n  //     ```\n  //  3. another tag:\n  //     ```\n  //     > test\n  //      - - -\n  //     ```\n  for (nextLine = startLine + 1; nextLine < endLine; nextLine++) {\n    // check if it's outdented, i.e. it's inside list item and indented\n    // less than said list item:\n    //\n    // ```\n    // 1. anything\n    //    > current blockquote\n    // 2. checking this line\n    // ```\n    if (state.sCount[nextLine] < state.blkIndent) wasOutdented = true;\n\n    pos = state.bMarks[nextLine] + state.tShift[nextLine];\n    max = state.eMarks[nextLine];\n\n    if (pos >= max) {\n      // Case 1: line is not inside the blockquote, and this line is empty.\n      break;\n    }\n\n    if (state.src.charCodeAt(pos++) === 0x3E/* > */ && !wasOutdented) {\n      // This line is inside the blockquote.\n\n      // skip spaces after \">\" and re-calculate offset\n      initial = offset = state.sCount[nextLine] + pos - (state.bMarks[nextLine] + state.tShift[nextLine]);\n\n      // skip one optional space after '>'\n      if (state.src.charCodeAt(pos) === 0x20 /* space */) {\n        // ' >   test '\n        //     ^ -- position start of line here:\n        pos++;\n        initial++;\n        offset++;\n        adjustTab = false;\n        spaceAfterMarker = true;\n      } else if (state.src.charCodeAt(pos) === 0x09 /* tab */) {\n        spaceAfterMarker = true;\n\n        if ((state.bsCount[nextLine] + offset) % 4 === 3) {\n          // '  >\\t  test '\n          //       ^ -- position start of line here (tab has width===1)\n          pos++;\n          initial++;\n          offset++;\n          adjustTab = false;\n        } else {\n          // ' >\\t  test '\n          //    ^ -- position start of line here + shift bsCount slightly\n          //         to make extra space appear\n          adjustTab = true;\n        }\n      } else {\n        spaceAfterMarker = false;\n      }\n\n      oldBMarks.push(state.bMarks[nextLine]);\n      state.bMarks[nextLine] = pos;\n\n      while (pos < max) {\n        ch = state.src.charCodeAt(pos);\n\n        if (isSpace(ch)) {\n          if (ch === 0x09) {\n            offset += 4 - (offset + state.bsCount[nextLine] + (adjustTab ? 1 : 0)) % 4;\n          } else {\n            offset++;\n          }\n        } else {\n          break;\n        }\n\n        pos++;\n      }\n\n      lastLineEmpty = pos >= max;\n\n      oldBSCount.push(state.bsCount[nextLine]);\n      state.bsCount[nextLine] = state.sCount[nextLine] + 1 + (spaceAfterMarker ? 1 : 0);\n\n      oldSCount.push(state.sCount[nextLine]);\n      state.sCount[nextLine] = offset - initial;\n\n      oldTShift.push(state.tShift[nextLine]);\n      state.tShift[nextLine] = pos - state.bMarks[nextLine];\n      continue;\n    }\n\n    // Case 2: line is not inside the blockquote, and the last line was empty.\n    if (lastLineEmpty) { break; }\n\n    // Case 3: another tag found.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n\n    if (terminate) {\n      // Quirk to enforce \"hard termination mode\" for paragraphs;\n      // normally if you call `tokenize(state, startLine, nextLine)`,\n      // paragraphs will look below nextLine for paragraph continuation,\n      // but if blockquote is terminated by another tag, they shouldn't\n      state.lineMax = nextLine;\n\n      if (state.blkIndent !== 0) {\n        // state.blkIndent was non-zero, we now set it to zero,\n        // so we need to re-calculate all offsets to appear as\n        // if indent wasn't changed\n        oldBMarks.push(state.bMarks[nextLine]);\n        oldBSCount.push(state.bsCount[nextLine]);\n        oldTShift.push(state.tShift[nextLine]);\n        oldSCount.push(state.sCount[nextLine]);\n        state.sCount[nextLine] -= state.blkIndent;\n      }\n\n      break;\n    }\n\n    oldBMarks.push(state.bMarks[nextLine]);\n    oldBSCount.push(state.bsCount[nextLine]);\n    oldTShift.push(state.tShift[nextLine]);\n    oldSCount.push(state.sCount[nextLine]);\n\n    // A negative indentation means that this is a paragraph continuation\n    //\n    state.sCount[nextLine] = -1;\n  }\n\n  oldIndent = state.blkIndent;\n  state.blkIndent = 0;\n\n  token        = state.push('blockquote_open', 'blockquote', 1);\n  token.markup = '>';\n  token.map    = lines = [ startLine, 0 ];\n\n  state.md.block.tokenize(state, startLine, nextLine);\n\n  token        = state.push('blockquote_close', 'blockquote', -1);\n  token.markup = '>';\n\n  state.lineMax = oldLineMax;\n  state.parentType = oldParentType;\n  lines[1] = state.line;\n\n  // Restore original tShift; this might not be necessary since the parser\n  // has already been here, but just to make sure we can do that.\n  for (i = 0; i < oldTShift.length; i++) {\n    state.bMarks[i + startLine] = oldBMarks[i];\n    state.tShift[i + startLine] = oldTShift[i];\n    state.sCount[i + startLine] = oldSCount[i];\n    state.bsCount[i + startLine] = oldBSCount[i];\n  }\n  state.blkIndent = oldIndent;\n\n  return true;\n};\n","'use strict';\n\nvar pngSignature = 'PNG\\r\\n\\x1a\\n';\nfunction isPNG (buffer) {\n  if (pngSignature === buffer.toString('ascii', 1, 8)) {\n    if ('IHDR' !== buffer.toString('ascii', 12, 16)) {\n      throw new TypeError('invalid png');\n    }\n    return true;\n  }\n}\n\nfunction calculate (buffer) {\n  return {\n    'width': buffer.readUInt32BE(16),\n    'height': buffer.readUInt32BE(20)\n  };\n}\n\nmodule.exports = {\n  'detect': isPNG,\n  'calculate': calculate\n};\n","'use strict';\n\n// based on http://www.compix.com/fileformattif.htm\n// TO-DO: support big-endian as well\n\nvar fs = require('fs');\nvar readUInt = require('../readUInt');\n\nfunction isTIFF (buffer) {\n  var hex4 = buffer.toString('hex', 0, 4);\n  return ('49492a00' === hex4 || '4d4d002a' === hex4);\n}\n\n// Read IFD (image-file-directory) into a buffer\nfunction readIFD (buffer, filepath, isBigEndian) {\n\n  var ifdOffset = readUInt(buffer, 32, 4, isBigEndian);\n\n  // read only till the end of the file\n  var bufferSize = 1024;\n  var fileSize = fs.statSync(filepath).size;\n  if (ifdOffset + bufferSize > fileSize) {\n    bufferSize = fileSize - ifdOffset - 10;\n  }\n\n  // populate the buffer\n  var endBuffer = new Buffer(bufferSize);\n  var descriptor = fs.openSync(filepath, 'r');\n  fs.readSync(descriptor, endBuffer, 0, bufferSize, ifdOffset);\n\n  // var ifdLength = readUInt(endBuffer, 16, 0, isBigEndian);\n  var ifdBuffer = endBuffer.slice(2); //, 2 + 12 * ifdLength);\n  return ifdBuffer;\n}\n\n// TIFF values seem to be messed up on Big-Endian, this helps\nfunction readValue (buffer, isBigEndian) {\n  var low = readUInt(buffer, 16, 8, isBigEndian);\n  var high = readUInt(buffer, 16, 10, isBigEndian);\n  return (high << 16) + low;\n}\n\n// move to the next tag\nfunction nextTag (buffer) {\n  if (buffer.length > 24) {\n    return buffer.slice(12);\n  }\n}\n\n// Extract IFD tags from TIFF metadata\nfunction extractTags (buffer, isBigEndian) {\n  var tags = {};\n  var code, type, length;\n\n  while (buffer && buffer.length) {\n    code = readUInt(buffer, 16, 0, isBigEndian);\n    type = readUInt(buffer, 16, 2, isBigEndian);\n    length = readUInt(buffer, 32, 4, isBigEndian);\n\n    // 0 means end of IFD\n    if (code === 0) {\n      break;\n    } else {\n      // 256 is width, 257 is height\n      // if (code === 256 || code === 257) {\n      if (length === 1 && type === 3) {\n        tags[code] = readValue(buffer, isBigEndian);\n      }\n\n      // move to the next tag\n      buffer = nextTag(buffer);\n    }\n  }\n  return tags;\n}\n\n// Test if the TIFF is Big Endian or Little Endian\nfunction determineEndianness (buffer) {\n  var signature = buffer.toString('ascii', 0, 2);\n  if ('II' === signature) {\n    return 'LE';\n  } else if ('MM' === signature) {\n    return 'BE';\n  }\n}\n\nfunction calculate (buffer, filepath) {\n\n  if (!filepath) {\n    throw new TypeError('Tiff doesn\\'t support buffer');\n  }\n\n  // Determine BE/LE\n  var isBigEndian = determineEndianness(buffer) === 'BE';\n\n  // read the IFD\n  var ifdBuffer = readIFD(buffer, filepath, isBigEndian);\n\n  // extract the tags from the IFD\n  var tags = extractTags(ifdBuffer, isBigEndian);\n\n  var width = tags[256];\n  var height = tags[257];\n\n  if (!width || !height) {\n    throw new TypeError('Invalid Tiff, missing tags');\n  }\n\n  return {\n    'width': width,\n    'height': height\n  };\n}\n\nmodule.exports = {\n  'detect': isTIFF,\n  'calculate': calculate\n};\n","// Horizontal rule\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function hr(state, startLine, endLine, silent) {\n  var marker, cnt, ch, token,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  marker = state.src.charCodeAt(pos++);\n\n  // Check hr marker\n  if (marker !== 0x2A/* * */ &&\n      marker !== 0x2D/* - */ &&\n      marker !== 0x5F/* _ */) {\n    return false;\n  }\n\n  // markers can be mixed with spaces, but there should be at least 3 of them\n\n  cnt = 1;\n  while (pos < max) {\n    ch = state.src.charCodeAt(pos++);\n    if (ch !== marker && !isSpace(ch)) { return false; }\n    if (ch === marker) { cnt++; }\n  }\n\n  if (cnt < 3) { return false; }\n\n  if (silent) { return true; }\n\n  state.line = startLine + 1;\n\n  token        = state.push('hr', 'hr', 0);\n  token.map    = [ startLine, state.line ];\n  token.markup = Array(cnt + 1).join(String.fromCharCode(marker));\n\n  return true;\n};\n","// Process definition lists\n//\n'use strict';\n\n\nmodule.exports = function deflist_plugin(md) {\n  var isSpace = md.utils.isSpace;\n\n  // Search `[:~][\\n ]`, returns next pos after marker on success\n  // or -1 on fail.\n  function skipMarker(state, line) {\n    var pos, marker,\n        start = state.bMarks[line] + state.tShift[line],\n        max = state.eMarks[line];\n\n    if (start >= max) { return -1; }\n\n    // Check bullet\n    marker = state.src.charCodeAt(start++);\n    if (marker !== 0x7E/* ~ */ && marker !== 0x3A/* : */) { return -1; }\n\n    pos = state.skipSpaces(start);\n\n    // require space after \":\"\n    if (start === pos) { return -1; }\n\n    // no empty definitions, e.g. \"  : \"\n    if (pos >= max) { return -1; }\n\n    return start;\n  }\n\n  function markTightParagraphs(state, idx) {\n    var i, l,\n        level = state.level + 2;\n\n    for (i = idx + 2, l = state.tokens.length - 2; i < l; i++) {\n      if (state.tokens[i].level === level && state.tokens[i].type === 'paragraph_open') {\n        state.tokens[i + 2].hidden = true;\n        state.tokens[i].hidden = true;\n        i += 2;\n      }\n    }\n  }\n\n  function deflist(state, startLine, endLine, silent) {\n    var ch,\n        contentStart,\n        ddLine,\n        dtLine,\n        itemLines,\n        listLines,\n        listTokIdx,\n        max,\n        nextLine,\n        offset,\n        oldDDIndent,\n        oldIndent,\n        oldParentType,\n        oldSCount,\n        oldTShift,\n        oldTight,\n        pos,\n        prevEmptyEnd,\n        tight,\n        token;\n\n    if (silent) {\n      // quirk: validation mode validates a dd block only, not a whole deflist\n      if (state.ddIndent < 0) { return false; }\n      return skipMarker(state, startLine) >= 0;\n    }\n\n    nextLine = startLine + 1;\n    if (nextLine >= endLine) { return false; }\n\n    if (state.isEmpty(nextLine)) {\n      nextLine++;\n      if (nextLine >= endLine) { return false; }\n    }\n\n    if (state.sCount[nextLine] < state.blkIndent) { return false; }\n    contentStart = skipMarker(state, nextLine);\n    if (contentStart < 0) { return false; }\n\n    // Start list\n    listTokIdx = state.tokens.length;\n    tight = true;\n\n    token     = state.push('dl_open', 'dl', 1);\n    token.map = listLines = [ startLine, 0 ];\n\n    //\n    // Iterate list items\n    //\n\n    dtLine = startLine;\n    ddLine = nextLine;\n\n    // One definition list can contain multiple DTs,\n    // and one DT can be followed by multiple DDs.\n    //\n    // Thus, there is two loops here, and label is\n    // needed to break out of the second one\n    //\n    /*eslint no-labels:0,block-scoped-var:0*/\n    OUTER:\n    for (;;) {\n      prevEmptyEnd = false;\n\n      token          = state.push('dt_open', 'dt', 1);\n      token.map      = [ dtLine, dtLine ];\n\n      token          = state.push('inline', '', 0);\n      token.map      = [ dtLine, dtLine ];\n      token.content  = state.getLines(dtLine, dtLine + 1, state.blkIndent, false).trim();\n      token.children = [];\n\n      token          = state.push('dt_close', 'dt', -1);\n\n      for (;;) {\n        token     = state.push('dd_open', 'dd', 1);\n        token.map = itemLines = [ nextLine, 0 ];\n\n        pos = contentStart;\n        max = state.eMarks[ddLine];\n        offset = state.sCount[ddLine] + contentStart - (state.bMarks[ddLine] + state.tShift[ddLine]);\n\n        while (pos < max) {\n          ch = state.src.charCodeAt(pos);\n\n          if (isSpace(ch)) {\n            if (ch === 0x09) {\n              offset += 4 - offset % 4;\n            } else {\n              offset++;\n            }\n          } else {\n            break;\n          }\n\n          pos++;\n        }\n\n        contentStart = pos;\n\n        oldTight = state.tight;\n        oldDDIndent = state.ddIndent;\n        oldIndent = state.blkIndent;\n        oldTShift = state.tShift[ddLine];\n        oldSCount = state.sCount[ddLine];\n        oldParentType = state.parentType;\n        state.blkIndent = state.ddIndent = state.sCount[ddLine] + 2;\n        state.tShift[ddLine] = contentStart - state.bMarks[ddLine];\n        state.sCount[ddLine] = offset;\n        state.tight = true;\n        state.parentType = 'deflist';\n\n        state.md.block.tokenize(state, ddLine, endLine, true);\n\n        // If any of list item is tight, mark list as tight\n        if (!state.tight || prevEmptyEnd) {\n          tight = false;\n        }\n        // Item become loose if finish with empty line,\n        // but we should filter last element, because it means list finish\n        prevEmptyEnd = (state.line - ddLine) > 1 && state.isEmpty(state.line - 1);\n\n        state.tShift[ddLine] = oldTShift;\n        state.sCount[ddLine] = oldSCount;\n        state.tight = oldTight;\n        state.parentType = oldParentType;\n        state.blkIndent = oldIndent;\n        state.ddIndent = oldDDIndent;\n\n        token = state.push('dd_close', 'dd', -1);\n\n        itemLines[1] = nextLine = state.line;\n\n        if (nextLine >= endLine) { break OUTER; }\n\n        if (state.sCount[nextLine] < state.blkIndent) { break OUTER; }\n        contentStart = skipMarker(state, nextLine);\n        if (contentStart < 0) { break; }\n\n        ddLine = nextLine;\n\n        // go to the next loop iteration:\n        // insert DD tag and repeat checking\n      }\n\n      if (nextLine >= endLine) { break; }\n      dtLine = nextLine;\n\n      if (state.isEmpty(dtLine)) { break; }\n      if (state.sCount[dtLine] < state.blkIndent) { break; }\n\n      ddLine = dtLine + 1;\n      if (ddLine >= endLine) { break; }\n      if (state.isEmpty(ddLine)) { ddLine++; }\n      if (ddLine >= endLine) { break; }\n\n      if (state.sCount[ddLine] < state.blkIndent) { break; }\n      contentStart = skipMarker(state, ddLine);\n      if (contentStart < 0) { break; }\n\n      // go to the next loop iteration:\n      // insert DT and DD tags and repeat checking\n    }\n\n    // Finilize list\n    token = state.push('dl_close', 'dl', -1);\n\n    listLines[1] = nextLine;\n\n    state.line = nextLine;\n\n    // mark paragraphs tight if needed\n    if (tight) {\n      markTightParagraphs(state, listTokIdx);\n    }\n\n    return true;\n  }\n\n\n  md.block.ruler.before('paragraph', 'deflist', deflist, { alt: [ 'paragraph', 'reference' ] });\n};\n"],"sourceRoot":""}